Setup for apex

  cd 
  mv apex3/apex.opt ../

How to compile with APEX

Let's assume you have a working APL application, and want to
compile it. For our purposes, we will use logd, from the APEX
test suite:

   )load /home/rbe/apex3/benchmks/logd/logd.dws
   )copy dumpws.dws
   DumpWS 'apex3/benchmks/logd'   NB. In same directory, just for sanity
                                  NB. and sanitation.

This will write ALL functions in the current workspace to the specified
directory, one function per file. Each file will be named after the
function, with suffix ".ufn", written in unicode format. These files
should be editable with any text editor. If not, get a better
operating system.

   )load apex.dws
   apex 'apex3/benchmks/logd'   

This should execute these compiler phases: syntax analysis,
SSA conversion, data flow analysis (DFA), and code generation
(sac or plural, depending on the option specified in home
directory file apex.opt).

Failures here generally fall into these categories:

 - irrelevant files in the compilation unit. Although APEX is
   supposed to discard these, that has not been working of late.
   Fix this by editing the compilation unit file list, "blist.cu",
   in the target directory, here "apex3/benchmks/logd", and try again.

 - DFA failures. Of late, semi-globals are a prime cause of this.

 - Use of unsupported APEX features, such as GOTO.

 - In the code generators, failure to generate some functions is
   usually caused by problems in the code fragment files, perhaps
   missing fragments. These are in apex3/fragments/{sac}{plural}.

If the code generator claims completion, you should find a .sac 
or .d file in the target directory. If using SAC, you should be
able to compile this with something like:

    sac2c logd.sac -doawlf -nowlf -O3 -o logd.exe

If using PLURAL:

    dmd logd.d -O -oflogd.exe

If using dmd, failure to specify -of will result in dmd overwriting
LastFile (see next paragraph), because the default output file
name would be "logd", which happens to also be the APEX-generated
compiler temp file name.

The last APEX compilation target name is kept in the variable LastFile.
If you are developing/debugging code fragments, this can come
in handy:

   LastFile âŽ•fstie 1
   dosac                  NB. Same name for plural, too. Sorry...


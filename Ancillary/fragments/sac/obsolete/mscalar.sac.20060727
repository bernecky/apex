% Monadic Scalar Function code fragments
% Converted to SAC 2005-11-03 R. Bernecky
%
% All code fragments presume that the argument has already been
% converted to the correct compute type.
%         jsym  ranks	lt rt   zt

%Fragment quer x00	x  bid  i .
inline int,int $FNAME($YTYPE y, int QUADio, int QUADrl)
{ /* Roll */
  /* Lehmer CACM 1966-06, P. 432 */
  /* FIXME: Must domain-check argument! */
 maxint32 = 2147483647;
 qrl = modIII(maxint32,16807*QUADrl); 
 z = QUADio + floor(qrl * toi(y)) / maxint32;
 return(z, qrl);
}  
%Generate , mod, III, 000, ., $CT

%Fragment mod   x00 x  b    b .
inline bool $FNAME($YTYPE y)
{ /* Absolute value Boolean (NOP) */
 return(tob(y));
}

%Fragment mod   x00 x  id    id .
inline $ZTYPE $FNAME($YTYPE y)
{ return(abs(to$CT(y)));
}

%Fragment bar   x00 x  b    b .
inline $ZTYPE $FNAME($YTYPE y)
{ return(!y);
}

%Fragment bar   x00 x  id    id	 .
inline $ZTYPE $FNAME($YTYPE y)
{ return(-y);
}

%Fragment plus  x00 x  bid  bid .
inline $ZTYPE $FNAME($YTYPE y)
{ return(y);
}

%Fragment min   x00 x bi bi .
inline $ZTYPE $FNAME($YTYPE y)
{ return(y);
}

%Fragment min   x00 x d  i .
inline $ZTYPE $FNAME($YTYPE y,double QUADct)
{ return(Dfloor(y,QUADct));
}

%Fragment max   x00 x bi bi .
inline $ZTYPE $FNAME($YTYPE y)
{ /* Boolean/integer ceiling (NOP) */
  return(y);
}

%Fragment max   x00 x d  i .
inline $ZTYPE $FNAME($YTYPE y, double QUADct)
{ /* Ceiling */
 return(-Dfloor(-y, QUADct));
}

%Fragment mpy   x00 x b  b .
inline $ZTYPE $FNAME($YTYPE y)
{ /* Boolean signum (NOP) */
 return(y);
}

%Fragment mpy   x00 x i i .
inline $ZTYPE $FNAME($YTYPE y)
{ /* signum int */
 if (0 == toi(y))
        z = 0;
 else if (0 > toi(y))
        z = -1;
 else
        z = 1;
 return(z);
}

%Fragment mpy   x00 x d i .
inline $ZTYPE $FNAME($YTYPE y)
{ /* double signum */
 if (0.0 == tod(y))
        z = 0;
 else if (0.0 > tod(y))
        z = -1;
 else
        z = 1;
 return(z);
}

%Fragment not   x00 x bid b .
inline $ZTYPE $FNAME($YTYPE y)
{ /* Boolean NOT */
  return(!tob(y));
}
 
%Fragment div   x00 x bid d .
inline $ZTYPE $FNAME($YTYPE y)
{ return(1.0/tod(y));
}

%Fragment star  x00 x bid d .
inline $ZTYPE $FNAME ($YTYPE y)
{ return(pow(APEXE,tod(y)));
}

%Fragment log   x00 x bid d .
inline $ZTYPE $FNAME ($YTYPE y)
{ return(log(tod(y)));
}

%Fragment circ  x00 x bid d .
inline $ZTYPE $FNAME ($YTYPE y)
{ return(APEXPI*tod(y));
}

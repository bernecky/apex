
/*-----------------------------------------------*/

/*
 *  SAC-Program CallUTDScalarB.sac :
 */


/*
 *  type definitions
 */

external typedef sacprelude_p::SACarg;

external SACarg SACARGcopy( SACarg);
external void SACARGfree( SACarg);

external classtype World::World;
external classtype Terminal::Terminal;
external classtype TermFile::TermFile;
external typedef String::string;

external string copy_string( string);
external void free_string( string);



/*
 *  prototypes for externals (FUNDECS)
 */

external hidden *, hidden * TermFile::printf( hidden *_rso_69_TheTerminal { ,NN } , hidden *_rso_68_stdout { ,NN } , enclosed(String::string) FORMAT { ,NN } , ...)
/*
 *  printf ::  ---
 */;

external enclosed(String::string) String::to_string( char[.] A { ,NN } , int LENGTH { ,NN } )
/*
 *  to_string ::  ---
 */;

external hidden * ArrayIO::showarray( hidden *stream { ,NN } , int d { ,NN } , int[.] s { ,NN } , char[*] a { ,NN } )
/*
 *  showarray ::  ---
 */;



/*
 *  prototypes for locals (FUNDEFS)
 */

external /* sticky */
int[.], int[.], int[.], int[.] sacprelude_p::partitionSlicer( int[*] min { ,NN } , int[*] max { ,NN } , int[*] axis { ,NN } , int[*] lb { ,NN } , int[*] ub { ,NN } )
/*
 *  partitionSlicer ::  ---
 */;

external /* sticky */
int[.] sacprelude_p::partitionIntersectMax( int[*] PWLbound1 { ,NN } , int[*] ivmin { ,NN } )
/*
 *  partitionIntersectMax ::  ---
 */;

external /* sticky */
bool[.] sacprelude_p::isPartitionIntersectNull( int[*] idxmin { ,NN } , int[*] idxmax { ,NN } , int[*] bound1 { ,NN } , int[*] bound2 { ,NN } )
/*
 *  isPartitionIntersectNull ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , int[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
float[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , float[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
double[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , double[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
bool[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
char[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , char[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
byte[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
short[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , short[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
long[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , long[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
longlong[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
ubyte[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
ushort[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
uint[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
ulong[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
ulonglong[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
int[.] sacprelude_p::partitionIntersectMin( int[*] PWLbound2 { ,NN } , int[*] ivmax { ,NN } )
/*
 *  partitionIntersectMin ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::adjustLacFunParams( bool[*] p { ,NN } , int[*] i { ,NN } , int[*] iv { ,NN } )
/*
 *  adjustLacFunParams ::  ---
 */;

external /* sticky */
int sacprelude_p::prod( int[*] v { ,NN } )
/*
 *  prod ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::adjustLacFunParamsReshape( bool[*] p { ,NN } , int[*] i { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  adjustLacFunParamsReshape ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( int[*] A { ,NN } , int[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( float[*] A { ,NN } , float[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( double[*] A { ,NN } , double[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( bool[*] A { ,NN } , bool[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( char[*] A { ,NN } , char[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( byte[*] A { ,NN } , byte[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( short[*] A { ,NN } , short[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( long[*] A { ,NN } , long[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( longlong[*] A { ,NN } , longlong[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( ubyte[*] A { ,NN } , ubyte[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( ushort[*] A { ,NN } , ushort[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( uint[*] A { ,NN } , uint[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( ulong[*] A { ,NN } , ulong[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( ulonglong[*] A { ,NN } , ulonglong[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
int[.], int[.], int[.] sacprelude_p::gridFiller( int[*] lb { ,NN } , int[*] ub { ,NN } , int[*] wdth { ,NN } , int[*] dim { ,NN } , int[*] maxwidth { ,NN } )
/*
 *  gridFiller ::  ---
 */;

external /* sticky */
bool[.] sacprelude_p::isPartitionIntersect1Part( int[*] idxmin { ,NN } , int[*] idxmax { ,NN } , int[*] bound1 { ,NN } , int[*] bound2 { ,NN } )
/*
 *  isPartitionIntersect1Part ::  ---
 */;

external /* sticky */
int{0} sacprelude_p::zero( int[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
double{0.0...} sacprelude_p::zero( double[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
float{0.0...} sacprelude_p::zero( float[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
char{ } sacprelude_p::zero( char[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
bool{0} sacprelude_p::zero( bool[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
byte{} sacprelude_p::zero( byte[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
short{0} sacprelude_p::zero( short[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
long{0} sacprelude_p::zero( long[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
longlong{0} sacprelude_p::zero( longlong[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
ubyte{} sacprelude_p::zero( ubyte[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
ushort{0} sacprelude_p::zero( ushort[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
uint{0} sacprelude_p::zero( uint[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
ulong{0} sacprelude_p::zero( ulong[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
ulonglong{0} sacprelude_p::zero( ulonglong[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
int sacprelude_p::partitionMax( int[*] x { ,NN } , int[*] y { ,NN } )
/*
 *  partitionMax ::  ---
 */;

external /* sticky */
int sacprelude_p::partitionMin( int[*] x { ,NN } , int[*] y { ,NN } )
/*
 *  partitionMin ::  ---
 */;

external /* sticky */
int sacprelude_p::++( int[*] a { ,NN } )
/*
 *  ++ ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::sel( int[*] idx { ,NN } , int[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
float[*] sacprelude_p::sel( int[*] idx { ,NN } , float[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
double[*] sacprelude_p::sel( int[*] idx { ,NN } , double[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
bool[*] sacprelude_p::sel( int[*] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
char[*] sacprelude_p::sel( int[*] idx { ,NN } , char[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
byte[*] sacprelude_p::sel( int[*] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
short[*] sacprelude_p::sel( int[*] idx { ,NN } , short[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
long[*] sacprelude_p::sel( int[*] idx { ,NN } , long[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
longlong[*] sacprelude_p::sel( int[*] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ubyte[*] sacprelude_p::sel( int[*] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ushort[*] sacprelude_p::sel( int[*] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
uint[*] sacprelude_p::sel( int[*] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ulong[*] sacprelude_p::sel( int[*] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ulonglong[*] sacprelude_p::sel( int[*] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , int[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
float[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , float[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
double[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , double[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
bool[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
char[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , char[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
byte[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
short[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , short[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
long[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , long[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
longlong[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
ubyte[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
ushort[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
uint[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
ulong[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
ulonglong[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external hidden * World:_INIT::init_TheWorld( hidden *_OI_object { ,NN } )
/*
 *  init_TheWorld ::  ---
 */;

external hidden *, hidden * Terminal:_INIT::init_TheTerminal( hidden *_rso_5_TheWorld { ,NN } , hidden *_OI_object { ,NN } )
/*
 *  init_TheTerminal ::  ---
 */;

external hidden *, hidden * TermFile:_INIT::init_stdout( hidden *_rso_43_TheTerminal { ,NN } , hidden *_OI_object { ,NN } )
/*
 *  init_stdout ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::adjustLacFunParams( bool[*] p { ,NN } , int[*] i { ,NN } , int[.] iv { ,NN } )
/*
 *  adjustLacFunParams ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::adjustLacFunParamsReshape( bool[*] p { ,NN } , int[*] i { ,NN } , int[.] iv { ,NN } , int[.] shp { ,NN } )
/*
 *  adjustLacFunParamsReshape ::  ---
 */;

external /* sticky */
int sacprelude_p::++( int a { ,NN } )
/*
 *  ++ ::  ---
 */;

external char[+] ArrayFormat::format( bool[+] y { ,NN } )
/*
 *  format ::  ---
 */;



/*
 *  global objects
 */

external hidden World::TheWorld;

external hidden Terminal::TheTerminal;

external hidden TermFile::stdout;



/*
 *  function definitions (FUNDEFS)
 */



/****************************************************************************
 * Wrapper function:
 * _MAIN::main(...) [ wrapper ]
 ****************************************************************************/
hidden *, hidden *, hidden *, int{0} _MAIN::main( hidden *_rso_3_TheTerminal { ,NN } , hidden *_rso_2_stdout { ,NN } , hidden *_rso_1_TheWorld { ,NN } )
/*
 *  main ::  ---
 */
{ 
  hidden _cwc_17 { , NN } ; 
  hidden _cwc_16 { , NN } ; 
  hidden _cwc_15 { , NN } ; 
  int{0} _cwc_14 { , NN } ; 

  _cwc_17, _cwc_16, _cwc_15, _cwc_14 = _MAIN::main( _rso_3_TheTerminal, _rso_2_stdout, _rso_1_TheWorld) ; 
  return( _cwc_17, _cwc_16, _cwc_15, _cwc_14); 
}



/****************************************************************************
 * _MAIN::main(...) [ body ]
 ****************************************************************************/
hidden *, hidden *, hidden *, int{0} _MAIN::main( hidden *_rso_6_TheTerminal { ,NN } , hidden *_rso_5_stdout { ,NN } , hidden *_rso_4_TheWorld { ,NN } )
/*
 *  main ::  ---
 */
{ 
  int[3]{2,3...} _dlirmov_123783_shp { , NN } ; 
  int _ivesli_122966 { , NN } ; 
  int _ivesli_122965 { , NN } ; 
  int _ivesli_122961 { , NN } ; 
  int _ivesli_122960 { , NN } ; 
  int _ivesli_122956 { , NN } ; 
  int _ivesli_122955 { , NN } ; 
  int _ivesli_122950 { , NN } ; 
  int _ivesli_122949 { , NN } ; 
  int _ivesli_122948 { , NN } ; 
  int _ivesli_122944 { , NN } ; 
  int _ivesli_122943 { , NN } ; 
  int _ivesli_122939 { , NN } ; 
  int _ivesli_122938 { , NN } ; 
  int _ivesli_122929 { , NN } ; 
  int _ivesli_122928 { , NN } ; 
  int _ivesli_122917 { , NN } ; 
  int _ivesli_122916 { , NN } ; 
  int _ivesli_122905 { , NN } ; 
  int _ivesli_122904 { , NN } ; 
  int _ivesli_122903 { , NN } ; 
  int _ivesli_122899 { , NN } ; 
  int _ivesli_122898 { , NN } ; 
  int _ivesli_122885 { , NN } ; 
  int _ivesli_122884 { , NN } ; 
  int _ivesli_122880 { , NN } ; 
  int _ivesli_122879 { , NN } ; 
  int _ivesli_122875 { , NN } ; 
  int _ivesli_122874 { , NN } ; 
  int _ivesli_122861 { , NN } ; 
  int _ivesli_122860 { , NN } ; 
  int _ivesli_122859 { , NN } ; 
  int _ivesli_122855 { , NN } ; 
  int _ivesli_122854 { , NN } ; 
  int _ivesli_122850 { , NN } ; 
  int _ivesli_122849 { , NN } ; 
  int _ivesli_122845 { , NN } ; 
  int _ivesli_122844 { , NN } ; 
  int _ivesli_122829 { , NN } ; 
  int _ivesli_122828 { , NN } ; 
  int _ivesli_122827 { , NN } ; 
  int _ivesli_122823 { , NN } ; 
  int _ivesli_122822 { , NN } ; 
  int _ivesli_122818 { , NN } ; 
  int _ivesli_122817 { , NN } ; 
  int _ivesli_122812 { , NN } ; 
  int _ivesli_122811 { , NN } ; 
  int _ivesli_122807 { , NN } ; 
  int _ivesli_122806 { , NN } ; 
  int _ivesli_122802 { , NN } ; 
  int _ivesli_122801 { , NN } ; 
  int _ivesli_122790 { , NN } ; 
  int _ivesli_122789 { , NN } ; 
  int _ivesli_122788 { , NN } ; 
  int _ivesli_122784 { , NN } ; 
  int _ivesli_122783 { , NN } ; 
  int _ivesli_122779 { , NN } ; 
  int _ivesli_122778 { , NN } ; 
  int _ivesli_122774 { , NN } ; 
  int _ivesli_122773 { , NN } ; 
  int _ivesli_122758 { , NN } ; 
  int _ivesli_122757 { , NN } ; 
  int _ivesli_122756 { , NN } ; 
  int _ivesli_122752 { , NN } ; 
  int _ivesli_122751 { , NN } ; 
  int _ivesli_122747 { , NN } ; 
  int _ivesli_122746 { , NN } ; 
  int _ivesli_122742 { , NN } ; 
  int _ivesli_122741 { , NN } ; 
  int _ivesli_122737 { , NN } ; 
  int _ivesli_122736 { , NN } ; 
  int _ivesli_122732 { , NN } ; 
  int _ivesli_122731 { , NN } ; 
  int _ivesli_122727 { , NN } ; 
  int _ivesli_122726 { , NN } ; 
  int _ivesli_122722 { , NN } ; 
  int _ivesli_122721 { , NN } ; 
  int _ivesli_122717 { , NN } ; 
  int _ivesli_122716 { , NN } ; 
  int _ivesli_122712 { , NN } ; 
  int _wlidx_122655__pinl_57482_res__SSA0_1 { , NN } ; 
  int _wlidx_122654__pinl_57572_A_106 { , NN } ; 
  int _wlidx_122653__pinl_59044_res__SSA0_1 { , NN } ; 
  int _wlidx_122652__pinl_59970_A_107 { , NN } ; 
  int _wlidx_122651__pinl_61584_res__SSA0_1 { , NN } ; 
  int _wlidx_122650__pinl_62518_A_107 { , NN } ; 
  int _wlidx_122649__pinl_64010_res__SSA0_1 { , NN } ; 
  int _wlidx_122648__pinl_64943_A_106 { , NN } ; 
  int _wlidx_122647__pinl_66415_res__SSA0_1 { , NN } ; 
  int _wlidx_122646__pinl_67340_A_106 { , NN } ; 
  int _wlidx_122645__pinl_69073_res__SSA0_1 { , NN } ; 
  int _wlidx_122644__pinl_70006_A_106 { , NN } ; 
  int _wlidx_122643__pinl_71617_res__SSA0_1 { , NN } ; 
  int _wlidx_122642__pinl_72553_A_107 { , NN } ; 
  int _wlidx_122641__pinl_75862_A_107 { , NN } ; 
  int _wlidx_122640__pinl_78504_A_102 { , NN } ; 
  int _wlidx_122639__pinl_80461_res__SSA0_1 { , NN } ; 
  int _wlidx_122638__pinl_81329_A_102 { , NN } ; 
  int _wlidx_122637__pinl_82798_res__SSA0_1 { , NN } ; 
  int{0} _isaa_117918__rso_4_TheWorld { , NN } ; 
  bool _pinl_64763__flat_71__SSA6_2 { , NN } ; 
  int _pinl_114013__flat_405__SSA6_2 { , NN } ; 
  int _pinl_64735_offset__SSA0_1__SSA6_2 { , NN } ; 
  int _pinl_111532_offset__SSA0_1__SSA6_2 { , NN } ; 
  bool _pinl_83543__flat_71__SSA6_2 { , NN } ; 
  int _pinl_113354__flat_405__SSA6_2 { , NN } ; 
  int _pinl_83515_offset__SSA0_1__SSA6_2 { , NN } ; 
  int _pinl_111028_offset__SSA0_1__SSA6_2 { , NN } ; 
  bool _pinl_84749__flat_37__SSA2_1__SSA5_14 { , NN } ; 
  bool _pinl_85213__flat_37__SSA2_1__SSA5_13 { , NN } ; 
  bool _pinl_85706__flat_37__SSA2_1__SSA5_12 { , NN } ; 
  bool _pinl_86199__flat_37__SSA2_1__SSA5_11 { , NN } ; 
  bool _pinl_86692__flat_37__SSA2_1__SSA5_10 { , NN } ; 
  bool _pinl_87185__flat_37__SSA2_1__SSA5_9 { , NN } ; 
  bool _pinl_87678__flat_37__SSA2_1__SSA5_8 { , NN } ; 
  bool _pinl_88171__flat_37__SSA2_1__SSA5_7 { , NN } ; 
  bool _pinl_88664__flat_37__SSA2_1__SSA5_6 { , NN } ; 
  bool _pinl_89157__flat_37__SSA2_1__SSA5_5 { , NN } ; 
  bool _pinl_58385__flat_93__SSA5_1 { , NN } ; 
  bool _pinl_58667__flat_100__SSA5_3 { , NN } ; 
  bool _pinl_59789__flat_71__SSA5_11 { , NN } ; 
  int _pinl_114183__flat_405__SSA5_11 { , NN } ; 
  int _pinl_59761_offset__SSA0_1__SSA5_11 { , NN } ; 
  int _pinl_111676_offset__SSA0_1__SSA5_11 { , NN } ; 
  bool _pinl_59789__flat_71__SSA5_10 { , NN } ; 
  int _pinl_114183__flat_405__SSA5_10 { , NN } ; 
  int _pinl_59761_offset__SSA0_1__SSA5_10 { , NN } ; 
  int _pinl_111676_offset__SSA0_1__SSA5_10 { , NN } ; 
  bool _pinl_58667__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_59789__flat_71__SSA5_7 { , NN } ; 
  int _pinl_114183__flat_405__SSA5_7 { , NN } ; 
  int _pinl_59761_offset__SSA0_1__SSA5_7 { , NN } ; 
  int _pinl_111676_offset__SSA0_1__SSA5_7 { , NN } ; 
  bool _pinl_58624__flat_93__SSA5_1 { , NN } ; 
  bool _pinl_59789__flat_71__SSA5_6 { , NN } ; 
  int _pinl_114183__flat_405__SSA5_6 { , NN } ; 
  int _pinl_59761_offset__SSA0_1__SSA5_6 { , NN } ; 
  int _pinl_111676_offset__SSA0_1__SSA5_6 { , NN } ; 
  bool _pinl_59789__flat_71__SSA5_3 { , NN } ; 
  int _pinl_114183__flat_405__SSA5_3 { , NN } ; 
  int _pinl_59761_offset__SSA0_1__SSA5_3 { , NN } ; 
  int _pinl_111676_offset__SSA0_1__SSA5_3 { , NN } ; 
  bool _pinl_58773__flat_93__SSA5_1 { , NN } ; 
  bool _pinl_59789__flat_71__SSA5_2 { , NN } ; 
  int _pinl_114183__flat_405__SSA5_2 { , NN } ; 
  int _pinl_59761_offset__SSA0_1__SSA5_2 { , NN } ; 
  int _pinl_111676_offset__SSA0_1__SSA5_2 { , NN } ; 
  bool _pinl_58943__flat_71__SSA5_1 { , NN } ; 
  int _pinl_114252__flat_405__SSA5_1 { , NN } ; 
  int _pinl_58920_offset__SSA0_1__SSA5_1 { , NN } ; 
  int _dl_114345__SSA5_1 { , NN } ; 
  int _dl_114344__SSA5_1 { , NN } ; 
  bool _pinl_80454__flat_715__SSA5_3 { , NN } ; 
  bool _pinl_80511__flat_715__SSA5_3 { , NN } ; 
  bool _pinl_62337__flat_71__SSA5_6 { , NN } ; 
  int _pinl_114098__flat_405__SSA5_6 { , NN } ; 
  int _pinl_62309_offset__SSA0_1__SSA5_6 { , NN } ; 
  int _pinl_111604_offset__SSA0_1__SSA5_6 { , NN } ; 
  bool _pinl_60918__flat_98__SSA5_1 { , NN } ; 
  bool _pinl_60919__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_60975__flat_100__SSA2_1__SSA5_1 { , NN } ; 
  bool _pinl_62337__flat_71__SSA5_5 { , NN } ; 
  int _pinl_114098__flat_405__SSA5_5 { , NN } ; 
  int _pinl_62309_offset__SSA0_1__SSA5_5 { , NN } ; 
  int _pinl_111604_offset__SSA0_1__SSA5_5 { , NN } ; 
  bool _pinl_62337__flat_71__SSA5_3 { , NN } ; 
  int _pinl_114098__flat_405__SSA5_3 { , NN } ; 
  int _pinl_62309_offset__SSA0_1__SSA5_3 { , NN } ; 
  int _pinl_111604_offset__SSA0_1__SSA5_3 { , NN } ; 
  bool _pinl_62337__flat_71__SSA5_2 { , NN } ; 
  int _pinl_114098__flat_405__SSA5_2 { , NN } ; 
  int _pinl_62309_offset__SSA0_1__SSA5_2 { , NN } ; 
  int _pinl_111604_offset__SSA0_1__SSA5_2 { , NN } ; 
  bool _pinl_61483__flat_71__SSA5_1 { , NN } ; 
  int _pinl_114167__flat_405__SSA5_1 { , NN } ; 
  int _pinl_61460_offset__SSA0_1__SSA5_1 { , NN } ; 
  int _dl_114382__SSA5_1 { , NN } ; 
  int _dl_114381__SSA5_1 { , NN } ; 
  bool _pinl_63344__flat_99__SSA5_1 { , NN } ; 
  bool _pinl_63345__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_63401__flat_100__SSA2_1__SSA5_1 { , NN } ; 
  bool _pinl_63909__flat_71__SSA5_1 { , NN } ; 
  int _pinl_114082__flat_405__SSA5_1 { , NN } ; 
  int _pinl_63886_offset__SSA0_1__SSA5_1 { , NN } ; 
  int _dl_114419__SSA5_1 { , NN } ; 
  int _dl_114418__SSA5_1 { , NN } ; 
  bool _pinl_66408__flat_715__SSA5_2 { , NN } ; 
  bool _pinl_66465__flat_715__SSA5_2 { , NN } ; 
  bool _pinl_65756__flat_92__SSA5_1 { , NN } ; 
  bool _pinl_66144__flat_100__SSA5_3 { , NN } ; 
  bool _pinl_67160__flat_71__SSA5_11 { , NN } ; 
  int _pinl_113928__flat_405__SSA5_11 { , NN } ; 
  int _pinl_67132_offset__SSA0_1__SSA5_11 { , NN } ; 
  int _pinl_111460_offset__SSA0_1__SSA5_11 { , NN } ; 
  bool _pinl_67160__flat_71__SSA5_10 { , NN } ; 
  int _pinl_113928__flat_405__SSA5_10 { , NN } ; 
  int _pinl_67132_offset__SSA0_1__SSA5_10 { , NN } ; 
  int _pinl_111460_offset__SSA0_1__SSA5_10 { , NN } ; 
  bool _pinl_67160__flat_71__SSA5_7 { , NN } ; 
  int _pinl_113928__flat_405__SSA5_7 { , NN } ; 
  int _pinl_67132_offset__SSA0_1__SSA5_7 { , NN } ; 
  int _pinl_111460_offset__SSA0_1__SSA5_7 { , NN } ; 
  bool _pinl_65995__flat_92__SSA5_1 { , NN } ; 
  bool _pinl_67160__flat_71__SSA5_6 { , NN } ; 
  int _pinl_113928__flat_405__SSA5_6 { , NN } ; 
  int _pinl_67132_offset__SSA0_1__SSA5_6 { , NN } ; 
  int _pinl_111460_offset__SSA0_1__SSA5_6 { , NN } ; 
  bool _pinl_66144__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_67160__flat_71__SSA5_4 { , NN } ; 
  int _pinl_113928__flat_405__SSA5_4 { , NN } ; 
  int _pinl_67132_offset__SSA0_1__SSA5_4 { , NN } ; 
  int _pinl_111460_offset__SSA0_1__SSA5_4 { , NN } ; 
  bool _pinl_66101__flat_92__SSA5_1 { , NN } ; 
  bool _pinl_67160__flat_71__SSA5_3 { , NN } ; 
  int _pinl_113928__flat_405__SSA5_3 { , NN } ; 
  int _pinl_67132_offset__SSA0_1__SSA5_3 { , NN } ; 
  int _pinl_111460_offset__SSA0_1__SSA5_3 { , NN } ; 
  bool _pinl_66314__flat_71__SSA5_1 { , NN } ; 
  int _pinl_113997__flat_405__SSA5_1 { , NN } ; 
  int _pinl_66291_offset__SSA0_1__SSA5_1 { , NN } ; 
  int _dl_114439__SSA5_1 { , NN } ; 
  int _dl_114438__SSA5_1 { , NN } ; 
  bool _pinl_66408__flat_715__SSA5_1 { , NN } ; 
  bool _pinl_66465__flat_715__SSA5_1 { , NN } ; 
  bool _pinl_68800__flat_100__SSA5_5 { , NN } ; 
  bool _pinl_69826__flat_71__SSA2_1__SSA5_5 { , NN } ; 
  int _pinl_113896__flat_405__SSA5_5 { , NN } ; 
  int _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_5 { , NN } ; 
  int _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_5 { , NN } ; 
  bool _pinl_68407__flat_99__SSA5_1 { , NN } ; 
  bool _pinl_68408__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_68800__flat_100__SSA5_4 { , NN } ; 
  bool _pinl_69826__flat_71__SSA2_1__SSA5_4 { , NN } ; 
  int _pinl_113896__flat_405__SSA5_4 { , NN } ; 
  int _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_4 { , NN } ; 
  int _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_4 { , NN } ; 
  bool _pinl_69826__flat_71__SSA2_3__SSA5_1 { , NN } ; 
  int _pinl_113912__flat_405__SSA5_1 { , NN } ; 
  int _pinl_69798_offset__SSA0_1__SSA2_3__SSA5_1 { , NN } ; 
  int _pinl_111388_offset__SSA0_1__SSA2_3__SSA5_1 { , NN } ; 
  bool _pinl_68800__flat_100__SSA5_2 { , NN } ; 
  bool _pinl_69826__flat_71__SSA2_1__SSA5_2 { , NN } ; 
  int _pinl_113896__flat_405__SSA5_2 { , NN } ; 
  int _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_2 { , NN } ; 
  int _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_2 { , NN } ; 
  bool _pinl_68800__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_69826__flat_71__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_113896__flat_405__SSA5_1 { , NN } ; 
  int _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  bool _pinl_68972__flat_71__SSA5_1 { , NN } ; 
  int _pinl_113880__flat_405__SSA5_1 { , NN } ; 
  int _pinl_68949_offset__SSA0_1__SSA5_1 { , NN } ; 
  int _dl_114478__SSA5_1 { , NN } ; 
  int _dl_114477__SSA5_1 { , NN } ; 
  bool _pinl_71118__flat_100__SSA5_5 { , NN } ; 
  bool _pinl_72370__flat_71__SSA2_1__SSA5_5 { , NN } ; 
  int _pinl_113795__flat_405__SSA5_5 { , NN } ; 
  int _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_5 { , NN } ; 
  int _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_5 { , NN } ; 
  bool _pinl_70953__flat_98__SSA5_1 { , NN } ; 
  bool _pinl_70954__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_71118__flat_100__SSA5_4 { , NN } ; 
  bool _pinl_72370__flat_71__SSA2_1__SSA5_4 { , NN } ; 
  int _pinl_113795__flat_405__SSA5_4 { , NN } ; 
  int _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_4 { , NN } ; 
  int _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_4 { , NN } ; 
  bool _pinl_72370__flat_71__SSA2_3__SSA5_1 { , NN } ; 
  int _pinl_113811__flat_405__SSA5_1 { , NN } ; 
  int _pinl_72342_offset__SSA0_1__SSA2_3__SSA5_1 { , NN } ; 
  int _pinl_111316_offset__SSA0_1__SSA2_3__SSA5_1 { , NN } ; 
  bool _pinl_71118__flat_100__SSA5_2 { , NN } ; 
  bool _pinl_72370__flat_71__SSA2_1__SSA5_2 { , NN } ; 
  int _pinl_113795__flat_405__SSA5_2 { , NN } ; 
  int _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_2 { , NN } ; 
  int _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_2 { , NN } ; 
  bool _pinl_71118__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_72370__flat_71__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_113795__flat_405__SSA5_1 { , NN } ; 
  int _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  bool _pinl_71516__flat_71__SSA5_1 { , NN } ; 
  int _pinl_113779__flat_405__SSA5_1 { , NN } ; 
  int _pinl_71493_offset__SSA0_1__SSA5_1 { , NN } ; 
  int _dl_114516__SSA5_1 { , NN } ; 
  int _dl_114515__SSA5_1 { , NN } ; 
  bool _pinl_80454__flat_715__SSA5_2 { , NN } ; 
  bool _pinl_80511__flat_715__SSA5_2 { , NN } ; 
  bool _pinl_74012__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_74013__flat_99__SSA5_1 { , NN } ; 
  bool _pinl_74609__flat_100__SSA5_4 { , NN } ; 
  bool _pinl_75679__flat_71__SSA2_1__SSA5_4 { , NN } ; 
  int _pinl_113694__flat_405__SSA5_4 { , NN } ; 
  int _pinl_75651_offset__SSA0_1__SSA2_1__SSA5_4 { , NN } ; 
  int _pinl_111244_offset__SSA0_1__SSA2_1__SSA5_4 { , NN } ; 
  bool _pinl_75679__flat_71__SSA2_3__SSA5_1 { , NN } ; 
  int _pinl_113710__flat_405__SSA5_1 { , NN } ; 
  int _pinl_75651_offset__SSA0_1__SSA2_3__SSA5_1 { , NN } ; 
  int _pinl_111244_offset__SSA0_1__SSA2_3__SSA5_1 { , NN } ; 
  bool _pinl_74609__flat_100__SSA5_2 { , NN } ; 
  bool _pinl_75679__flat_71__SSA2_1__SSA5_2 { , NN } ; 
  int _pinl_113694__flat_405__SSA5_2 { , NN } ; 
  int _pinl_75651_offset__SSA0_1__SSA2_1__SSA5_2 { , NN } ; 
  int _pinl_111244_offset__SSA0_1__SSA2_1__SSA5_2 { , NN } ; 
  bool _pinl_74609__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_75679__flat_71__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_113694__flat_405__SSA5_1 { , NN } ; 
  int _pinl_75651_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_111244_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  bool _pinl_74771__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_74819__flat_71__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_113678__flat_405__SSA5_1 { , NN } ; 
  int _pinl_74796_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  int _dl_114537__SSA5_1 { , NN } ; 
  int _dl_114536__SSA5_1 { , NN } ; 
  bool _pinl_76820__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_76821__flat_98__SSA5_1 { , NN } ; 
  bool _pinl_76985__flat_100__SSA5_4 { , NN } ; 
  bool _pinl_78324__flat_71__SSA2_1__SSA5_4 { , NN } ; 
  int _pinl_113593__flat_405__SSA5_4 { , NN } ; 
  int _pinl_78296_offset__SSA0_1__SSA2_1__SSA5_4 { , NN } ; 
  int _pinl_111172_offset__SSA0_1__SSA2_1__SSA5_4 { , NN } ; 
  bool _pinl_78324__flat_71__SSA2_3__SSA5_1 { , NN } ; 
  int _pinl_113609__flat_405__SSA5_1 { , NN } ; 
  int _pinl_78296_offset__SSA0_1__SSA2_3__SSA5_1 { , NN } ; 
  int _pinl_111172_offset__SSA0_1__SSA2_3__SSA5_1 { , NN } ; 
  bool _pinl_76985__flat_100__SSA5_2 { , NN } ; 
  bool _pinl_78324__flat_71__SSA2_1__SSA5_2 { , NN } ; 
  int _pinl_113593__flat_405__SSA5_2 { , NN } ; 
  int _pinl_78296_offset__SSA0_1__SSA2_1__SSA5_2 { , NN } ; 
  int _pinl_111172_offset__SSA0_1__SSA2_1__SSA5_2 { , NN } ; 
  bool _pinl_76985__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_78324__flat_71__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_113593__flat_405__SSA5_1 { , NN } ; 
  int _pinl_78296_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_111172_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  bool _pinl_77416__flat_100__SSA5_1 { , NN } ; 
  bool _pinl_77464__flat_71__SSA2_1__SSA5_1 { , NN } ; 
  int _pinl_113577__flat_405__SSA5_1 { , NN } ; 
  int _pinl_77441_offset__SSA0_1__SSA2_1__SSA5_1 { , NN } ; 
  int _dl_114549__SSA5_1 { , NN } ; 
  int _dl_114548__SSA5_1 { , NN } ; 
  bool _pinl_79684__flat_99__SSA5_1 { , NN } ; 
  bool _pinl_79740__flat_100__SSA2_1__SSA5_1 { , NN } ; 
  bool _pinl_81206__flat_71__SSA5_5 { , NN } ; 
  int _pinl_113439__flat_405__SSA5_5 { , NN } ; 
  int _pinl_81178_offset__SSA0_1__SSA5_5 { , NN } ; 
  int _pinl_111100_offset__SSA0_1__SSA5_5 { , NN } ; 
  bool _pinl_81206__flat_71__SSA5_3 { , NN } ; 
  int _pinl_113439__flat_405__SSA5_3 { , NN } ; 
  int _pinl_81178_offset__SSA0_1__SSA5_3 { , NN } ; 
  int _pinl_111100_offset__SSA0_1__SSA5_3 { , NN } ; 
  bool _pinl_81206__flat_71__SSA5_2 { , NN } ; 
  int _pinl_113439__flat_405__SSA5_2 { , NN } ; 
  int _pinl_81178_offset__SSA0_1__SSA5_2 { , NN } ; 
  int _pinl_111100_offset__SSA0_1__SSA5_2 { , NN } ; 
  bool _pinl_80360__flat_71__SSA5_1 { , NN } ; 
  int _pinl_113508__flat_405__SSA5_1 { , NN } ; 
  int _pinl_80337_offset__SSA0_1__SSA5_1 { , NN } ; 
  int _dl_114559__SSA5_1 { , NN } ; 
  int _dl_114558__SSA5_1 { , NN } ; 
  bool _pinl_80454__flat_715__SSA5_1 { , NN } ; 
  bool _pinl_80511__flat_715__SSA5_1 { , NN } ; 
  bool _pinl_82141__flat_98__SSA5_1 { , NN } ; 
  bool _pinl_82197__flat_100__SSA2_1__SSA5_1 { , NN } ; 
  bool _pinl_82697__flat_71__SSA5_1 { , NN } ; 
  int _pinl_113423__flat_405__SSA5_1 { , NN } ; 
  int _pinl_82674_offset__SSA0_1__SSA5_1 { , NN } ; 
  int _dl_114579__SSA5_1 { , NN } ; 
  int _dl_114578__SSA5_1 { , NN } ; 
  bool _pinl_115075__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_115072__flat_98 { , NN } ; 
  bool _pinl_115071__ea_60_res { , NN } ; 
  int _pinl_115070__eat_1279 { , NN } ; 
  int _pinl_115069__eat_1278 { , NN } ; 
  int _pinl_115068__eat_1277 { , NN } ; 
  bool _pinl_115067_res { , NN } ; 
  int[3] _pinl_115066_iv { , NN } ; 
  bool _pinl_115064__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_115061__flat_98 { , NN } ; 
  bool _pinl_115060__ea_60_res { , NN } ; 
  int _pinl_115059__eat_1279 { , NN } ; 
  int _pinl_115058__eat_1278 { , NN } ; 
  int _pinl_115057__eat_1277 { , NN } ; 
  bool _pinl_115056_res { , NN } ; 
  int[3] _pinl_115055_iv { , NN } ; 
  bool _pinl_115053__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_115050__flat_98 { , NN } ; 
  bool _pinl_115049__ea_60_res { , NN } ; 
  int _pinl_115048__eat_1279 { , NN } ; 
  int _pinl_115047__eat_1278 { , NN } ; 
  int _pinl_115046__eat_1277 { , NN } ; 
  bool _pinl_115045_res { , NN } ; 
  int[3] _pinl_115044_iv { , NN } ; 
  bool _pinl_115042__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_115040__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_115039__flat_98 { , NN } ; 
  bool _pinl_115038__ea_68_res { , NN } ; 
  int _pinl_115037__eat_1295 { , NN } ; 
  int _pinl_115036__eat_1294 { , NN } ; 
  bool _pinl_115035_res { , NN } ; 
  int[2] _pinl_115034_iv { , NN } ; 
  bool _pinl_115032__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_115029__flat_98 { , NN } ; 
  bool _pinl_115028__ea_60_res { , NN } ; 
  int _pinl_115027__eat_1279 { , NN } ; 
  int _pinl_115026__eat_1278 { , NN } ; 
  int _pinl_115025__eat_1277 { , NN } ; 
  bool _pinl_115024_res { , NN } ; 
  int[3] _pinl_115023_iv { , NN } ; 
  bool _pinl_115010__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_115007__flat_98 { , NN } ; 
  bool _pinl_115006__ea_60_res { , NN } ; 
  int _pinl_115005__eat_1279 { , NN } ; 
  int _pinl_115004__eat_1278 { , NN } ; 
  int _pinl_115003__eat_1277 { , NN } ; 
  bool _pinl_115002_res { , NN } ; 
  int[3] _pinl_115001_iv { , NN } ; 
  bool _pinl_114999__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114997__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_114996__flat_98 { , NN } ; 
  bool _pinl_114995__ea_68_res { , NN } ; 
  int _pinl_114994__eat_1295 { , NN } ; 
  int _pinl_114993__eat_1294 { , NN } ; 
  bool _pinl_114992_res { , NN } ; 
  int[2] _pinl_114991_iv { , NN } ; 
  bool _pinl_114989__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114986__flat_98 { , NN } ; 
  bool _pinl_114985__ea_60_res { , NN } ; 
  int _pinl_114984__eat_1279 { , NN } ; 
  int _pinl_114983__eat_1278 { , NN } ; 
  int _pinl_114982__eat_1277 { , NN } ; 
  bool _pinl_114981_res { , NN } ; 
  int[3] _pinl_114980_iv { , NN } ; 
  bool _pinl_114956__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114954__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_114953__flat_98 { , NN } ; 
  bool _pinl_114952__ea_68_res { , NN } ; 
  int _pinl_114951__eat_1295 { , NN } ; 
  int _pinl_114950__eat_1294 { , NN } ; 
  bool _pinl_114949_res { , NN } ; 
  int[2] _pinl_114948_iv { , NN } ; 
  bool _pinl_114946__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114943__flat_98 { , NN } ; 
  bool _pinl_114942__ea_60_res { , NN } ; 
  int _pinl_114941__eat_1279 { , NN } ; 
  int _pinl_114940__eat_1278 { , NN } ; 
  int _pinl_114939__eat_1277 { , NN } ; 
  bool _pinl_114938_res { , NN } ; 
  int[3] _pinl_114937_iv { , NN } ; 
  bool _pinl_114935__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114932__flat_98 { , NN } ; 
  bool _pinl_114931__ea_60_res { , NN } ; 
  int _pinl_114930__eat_1279 { , NN } ; 
  int _pinl_114929__eat_1278 { , NN } ; 
  int _pinl_114928__eat_1277 { , NN } ; 
  bool _pinl_114927_res { , NN } ; 
  int[3] _pinl_114926_iv { , NN } ; 
  bool _pinl_114924__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114921__flat_98 { , NN } ; 
  bool _pinl_114920__ea_60_res { , NN } ; 
  int _pinl_114919__eat_1279 { , NN } ; 
  int _pinl_114918__eat_1278 { , NN } ; 
  int _pinl_114917__eat_1277 { , NN } ; 
  bool _pinl_114916_res { , NN } ; 
  int[3] _pinl_114915_iv { , NN } ; 
  bool _pinl_114913__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114911__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_114910__flat_98 { , NN } ; 
  bool _pinl_114909__ea_68_res { , NN } ; 
  int _pinl_114908__eat_1295 { , NN } ; 
  int _pinl_114907__eat_1294 { , NN } ; 
  bool _pinl_114906_res { , NN } ; 
  int[2] _pinl_114905_iv { , NN } ; 
  bool _pinl_114903__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114900__flat_98 { , NN } ; 
  bool _pinl_114899__ea_60_res { , NN } ; 
  int _pinl_114898__eat_1279 { , NN } ; 
  int _pinl_114897__eat_1278 { , NN } ; 
  int _pinl_114896__eat_1277 { , NN } ; 
  bool _pinl_114895_res { , NN } ; 
  int[3] _pinl_114894_iv { , NN } ; 
  bool _pinl_114881__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114878__flat_98 { , NN } ; 
  bool _pinl_114877__ea_60_res { , NN } ; 
  int _pinl_114876__eat_1279 { , NN } ; 
  int _pinl_114875__eat_1278 { , NN } ; 
  int _pinl_114874__eat_1277 { , NN } ; 
  bool _pinl_114873_res { , NN } ; 
  int[3] _pinl_114872_iv { , NN } ; 
  bool _pinl_114870__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114868__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_114867__flat_98 { , NN } ; 
  bool _pinl_114866__ea_68_res { , NN } ; 
  int _pinl_114865__eat_1295 { , NN } ; 
  int _pinl_114864__eat_1294 { , NN } ; 
  bool _pinl_114863_res { , NN } ; 
  int[2] _pinl_114862_iv { , NN } ; 
  bool _pinl_114860__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114857__flat_98 { , NN } ; 
  bool _pinl_114856__ea_60_res { , NN } ; 
  int _pinl_114855__eat_1279 { , NN } ; 
  int _pinl_114854__eat_1278 { , NN } ; 
  int _pinl_114853__eat_1277 { , NN } ; 
  bool _pinl_114852_res { , NN } ; 
  int[3] _pinl_114851_iv { , NN } ; 
  bool _pinl_114849__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114846__flat_98 { , NN } ; 
  bool _pinl_114845__ea_60_res { , NN } ; 
  int _pinl_114844__eat_1279 { , NN } ; 
  int _pinl_114843__eat_1278 { , NN } ; 
  int _pinl_114842__eat_1277 { , NN } ; 
  bool _pinl_114841_res { , NN } ; 
  int[3] _pinl_114840_iv { , NN } ; 
  bool _pinl_114827__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114825__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_114824__flat_98 { , NN } ; 
  bool _pinl_114823__ea_68_res { , NN } ; 
  int _pinl_114822__eat_1295 { , NN } ; 
  int _pinl_114821__eat_1294 { , NN } ; 
  bool _pinl_114820_res { , NN } ; 
  int[2] _pinl_114819_iv { , NN } ; 
  bool _pinl_114817__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114814__flat_98 { , NN } ; 
  bool _pinl_114813__ea_60_res { , NN } ; 
  int _pinl_114812__eat_1279 { , NN } ; 
  int _pinl_114811__eat_1278 { , NN } ; 
  int _pinl_114810__eat_1277 { , NN } ; 
  bool _pinl_114809_res { , NN } ; 
  int[3] _pinl_114808_iv { , NN } ; 
  bool _pinl_114795__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114792__flat_98 { , NN } ; 
  bool _pinl_114791__ea_60_res { , NN } ; 
  int _pinl_114790__eat_1279 { , NN } ; 
  int _pinl_114789__eat_1278 { , NN } ; 
  int _pinl_114788__eat_1277 { , NN } ; 
  bool _pinl_114787_res { , NN } ; 
  int[3] _pinl_114786_iv { , NN } ; 
  bool _pinl_114784__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114782__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_114781__flat_98 { , NN } ; 
  bool _pinl_114780__ea_68_res { , NN } ; 
  int _pinl_114779__eat_1295 { , NN } ; 
  int _pinl_114778__eat_1294 { , NN } ; 
  bool _pinl_114777_res { , NN } ; 
  int[2] _pinl_114776_iv { , NN } ; 
  bool _pinl_114774__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114771__flat_98 { , NN } ; 
  bool _pinl_114770__ea_60_res { , NN } ; 
  int _pinl_114769__eat_1279 { , NN } ; 
  int _pinl_114768__eat_1278 { , NN } ; 
  int _pinl_114767__eat_1277 { , NN } ; 
  bool _pinl_114766_res { , NN } ; 
  int[3] _pinl_114765_iv { , NN } ; 
  bool _pinl_114763__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114760__flat_98 { , NN } ; 
  bool _pinl_114759__ea_60_res { , NN } ; 
  int _pinl_114758__eat_1279 { , NN } ; 
  int _pinl_114757__eat_1278 { , NN } ; 
  int _pinl_114756__eat_1277 { , NN } ; 
  bool _pinl_114755_res { , NN } ; 
  int[3] _pinl_114754_iv { , NN } ; 
  bool _pinl_114741__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114739__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_114738__flat_98 { , NN } ; 
  bool _pinl_114737__ea_68_res { , NN } ; 
  int _pinl_114736__eat_1295 { , NN } ; 
  int _pinl_114735__eat_1294 { , NN } ; 
  bool _pinl_114734_res { , NN } ; 
  int[2] _pinl_114733_iv { , NN } ; 
  bool _pinl_114731__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114728__flat_98 { , NN } ; 
  bool _pinl_114727__ea_60_res { , NN } ; 
  int _pinl_114726__eat_1279 { , NN } ; 
  int _pinl_114725__eat_1278 { , NN } ; 
  int _pinl_114724__eat_1277 { , NN } ; 
  bool _pinl_114723_res { , NN } ; 
  int[3] _pinl_114722_iv { , NN } ; 
  bool _pinl_114709__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114706__flat_98 { , NN } ; 
  bool _pinl_114705__ea_60_res { , NN } ; 
  int _pinl_114704__eat_1279 { , NN } ; 
  int _pinl_114703__eat_1278 { , NN } ; 
  int _pinl_114702__eat_1277 { , NN } ; 
  bool _pinl_114701_res { , NN } ; 
  int[3] _pinl_114700_iv { , NN } ; 
  bool _pinl_114698__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114696__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_114695__flat_98 { , NN } ; 
  bool _pinl_114694__ea_68_res { , NN } ; 
  int _pinl_114693__eat_1295 { , NN } ; 
  int _pinl_114692__eat_1294 { , NN } ; 
  bool _pinl_114691_res { , NN } ; 
  int[2] _pinl_114690_iv { , NN } ; 
  bool _pinl_114688__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114685__flat_98 { , NN } ; 
  bool _pinl_114684__ea_60_res { , NN } ; 
  int _pinl_114683__eat_1279 { , NN } ; 
  int _pinl_114682__eat_1278 { , NN } ; 
  int _pinl_114681__eat_1277 { , NN } ; 
  bool _pinl_114680_res { , NN } ; 
  int[3] _pinl_114679_iv { , NN } ; 
  bool _pinl_114655__flat_92__SSA2_1 { , NN } ; 
  bool _pinl_114653__flat_71__SSA2_1 { , NN } ; 
  bool _pinl_114652__flat_98 { , NN } ; 
  bool _pinl_114651__ea_68_res { , NN } ; 
  int _pinl_114650__eat_1295 { , NN } ; 
  int _pinl_114649__eat_1294 { , NN } ; 
  bool _pinl_114648_res { , NN } ; 
  int[2] _pinl_114647_iv { , NN } ; 
  bool[9] _pinl_58203_res__SSA4_8 { , NN } ; 
  bool[9] _pinl_60613_res__SSA4_8 { , NN } ; 
  bool[8]{1,0...} _pinl_61692_res__SSA4_8 { , NN } ; 
  bool[9] _pinl_63159_res__SSA4_8 { , NN } ; 
  bool[9] _pinl_65574_res__SSA4_8 { , NN } ; 
  bool[9] _pinl_68102_res__SSA4_8 { , NN } ; 
  bool[9] _pinl_70768_res__SSA4_8 { , NN } ; 
  bool[9] _pinl_73664_res__SSA4_8 { , NN } ; 
  bool[9] _pinl_76592_res__SSA4_8 { , NN } ; 
  bool[9] _pinl_79382_res__SSA4_8 { , NN } ; 
  bool[8]{1,1...} _pinl_80569_res__SSA4_8 { , NN } ; 
  bool[9] _pinl_81959_res__SSA4_8 { , NN } ; 
  bool[8]{0,1...} _pinl_82906_res__SSA4_8 { , NN } ; 
  bool _pinl_61696__flat_724__SSA2_4 { , NN } ; 
  bool _pinl_88461__flat_37__SSA2_4 { , NN } ; 
  bool _pinl_61696__flat_724__SSA2_2 { , NN } ; 
  bool _pinl_88461__flat_37__SSA2_2 { , NN } ; 
  bool _pinl_85010__flat_37__SSA2_4 { , NN } ; 
  bool _pinl_82910__flat_724__SSA2_6 { , NN } ; 
  bool _pinl_84546__flat_37__SSA2_6 { , NN } ; 
  bool _pinl_82910__flat_724__SSA2_4 { , NN } ; 
  bool _pinl_84546__flat_37__SSA2_4 { , NN } ; 
  bool _pinl_85010__flat_37__SSA2_2 { , NN } ; 
  bool _pinl_82910__flat_724__SSA2_2 { , NN } ; 
  bool _pinl_84546__flat_37__SSA2_2 { , NN } ; 
  bool[4] _pinl_58874_z__SSA1_4 { , NN } ; 
  bool _pinl_58877__flat_93__SSA1_2 { , NN } ; 
  bool[4] _pinl_61412_z__SSA1_4 { , NN } ; 
  bool[4] _pinl_63838_z__SSA1_4 { , NN } ; 
  bool[4] _pinl_66245_z__SSA1_4 { , NN } ; 
  bool _pinl_66248__flat_92__SSA1_2 { , NN } ; 
  bool[4] _pinl_68901_z__SSA1_4 { , NN } ; 
  bool[4] _pinl_71445_z__SSA1_4 { , NN } ; 
  bool[4] _pinl_74710_z__SSA1_4 { , NN } ; 
  bool[4] _pinl_77355_z__SSA1_4 { , NN } ; 
  bool _pinl_77359__flat_100__SSA1_2 { , NN } ; 
  bool[4] _pinl_80291_z__SSA1_4 { , NN } ; 
  bool[4] _pinl_82628_z__SSA1_4 { , NN } ; 
  bool[4]{0,0...} _pinl_82609_cell__SSA1_1 { , NN } ; 
  bool _pinl_89339__flat_328 { , NN } ; 
  int{1} _pinl_83594_wt { , NN } ; 
  int _pinl_82800__eat_1306 { , NN } ; 
  bool[16] _pinl_82798_res__SSA0_1 { , NN } ; 
  int[1] _pinl_82797_iv__SSA0_1 { , NN } ; 
  bool _pinl_82653__flat_71 { , NN } ; 
  int _pinl_82618__eat_1301 { , NN } ; 
  int[1] _pinl_82613_iv { , NN } ; 
  bool[4,4] _pinl_81329_A_102 { , NN } ; 
  int{2} _pinl_81293__flat_428 { , NN } ; 
  bool[3]{0,1...} _pinl_81290__flat_431 { , NN } ; 
  bool[4]{0,1...} _pinl_81289_BVR_0 { , NN } ; 
  bool[4]{0,0...} _pinl_81288_BVL_0 { , NN } ; 
  bool{1} _pinl_81287_BS1_0 { , NN } ; 
  bool{0} _pinl_81286_BS0_0 { , NN } ; 
  int _pinl_80463__eat_1306 { , NN } ; 
  bool[16] _pinl_80461_res__SSA0_1 { , NN } ; 
  int[1] _pinl_80460_iv__SSA0_1 { , NN } ; 
  bool _pinl_80316__flat_71 { , NN } ; 
  int _pinl_80281__eat_1189 { , NN } ; 
  int[1] _pinl_80276_iv { , NN } ; 
  bool[4,4] _pinl_78504_A_102 { , NN } ; 
  bool _pinl_77382__flat_71 { , NN } ; 
  int _pinl_77345__eat_1213 { , NN } ; 
  int[1] _pinl_77340_iv { , NN } ; 
  bool[4,4] _pinl_75862_A_107 { , NN } ; 
  bool _pinl_74737__flat_71 { , NN } ; 
  bool _pinl_74714__flat_100 { , NN } ; 
  int _pinl_74700__eat_1197 { , NN } ; 
  int[1] _pinl_74695_iv { , NN } ; 
  bool[4,4] _pinl_72553_A_107 { , NN } ; 
  int _pinl_71619__eat_1306 { , NN } ; 
  bool[16] _pinl_71617_res__SSA0_1 { , NN } ; 
  int[1] _pinl_71616_iv__SSA0_1 { , NN } ; 
  bool _pinl_71472__flat_71 { , NN } ; 
  bool _pinl_71450__flat_100 { , NN } ; 
  int _pinl_71435__eat_1223 { , NN } ; 
  int[1] _pinl_71430_iv { , NN } ; 
  bool[4,4] _pinl_70006_A_106 { , NN } ; 
  int _pinl_69075__eat_1306 { , NN } ; 
  bool[16] _pinl_69073_res__SSA0_1 { , NN } ; 
  int[1] _pinl_69072_iv__SSA0_1 { , NN } ; 
  bool _pinl_68928__flat_71 { , NN } ; 
  bool _pinl_68906__flat_100 { , NN } ; 
  int _pinl_68891__eat_1231 { , NN } ; 
  int[1] _pinl_68886_iv { , NN } ; 
  bool[4,4] _pinl_67340_A_106 { , NN } ; 
  int _pinl_66417__eat_1306 { , NN } ; 
  bool[16] _pinl_66415_res__SSA0_1 { , NN } ; 
  int[1] _pinl_66414_iv__SSA0_1 { , NN } ; 
  bool _pinl_66270__flat_71 { , NN } ; 
  bool _pinl_66248__flat_92 { , NN } ; 
  int _pinl_66235__eat_1252 { , NN } ; 
  int[1] _pinl_66230_iv { , NN } ; 
  bool[4,4] _pinl_64943_A_106 { , NN } ; 
  bool[4]{1,0...} _pinl_64938__flat_546 { , NN } ; 
  int _pinl_64012__eat_1306 { , NN } ; 
  bool[16] _pinl_64010_res__SSA0_1 { , NN } ; 
  int[1] _pinl_64009_iv__SSA0_1 { , NN } ; 
  bool _pinl_63865__flat_71 { , NN } ; 
  int _pinl_63828__eat_1247 { , NN } ; 
  int[1] _pinl_63823_iv { , NN } ; 
  bool[4,4] _pinl_62518_A_107 { , NN } ; 
  int _pinl_61586__eat_1306 { , NN } ; 
  bool[16] _pinl_61584_res__SSA0_1 { , NN } ; 
  int[1] _pinl_61583_iv__SSA0_1 { , NN } ; 
  bool _pinl_61439__flat_71 { , NN } ; 
  int _pinl_61402__eat_1239 { , NN } ; 
  int[1] _pinl_61397_iv { , NN } ; 
  bool[4,4] _pinl_59970_A_107 { , NN } ; 
  int _pinl_59046__eat_1306 { , NN } ; 
  bool[16] _pinl_59044_res__SSA0_1 { , NN } ; 
  int[1] _pinl_59043_iv__SSA0_1 { , NN } ; 
  bool _pinl_58899__flat_71 { , NN } ; 
  bool _pinl_58877__flat_93 { , NN } ; 
  int _pinl_58864__eat_1205 { , NN } ; 
  int[1] _pinl_58859_iv { , NN } ; 
  bool[4,4] _pinl_57572_A_106 { , NN } ; 
  int _pinl_57484__eat_1165 { , NN } ; 
  bool[140] _pinl_57482_res__SSA0_1 { , NN } ; 
  int[1] _pinl_57481_iv__SSA0_1 { , NN } ; 
  bool _pinl_57440__flat_71 { , NN } ; 
  bool _pinl_57429__flat_98 { , NN } ; 
  bool _pinl_57419__ea_49_z { , NN } ; 
  bool _pinl_57418__ea_48__flat_281 { , NN } ; 
  int _pinl_57417__eat_1163 { , NN } ; 
  bool _pinl_57416_z { , NN } ; 
  int[1] _pinl_57414_iv { , NN } ; 
  int _pinl_57407__flat_127 { , NN } ; 
  int _pinl_57405__flat_13 { , NN } ; 
  hidden _pinl_57401__rso_1142_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _pinl_57400__rso_1143_TheTerminal__SSA0_1 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_5_stdout__SSA0_3 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_6_TheTerminal__SSA0_3 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_5_stdout__SSA0_2 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_6_TheTerminal__SSA0_2 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_5_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_6_TheTerminal__SSA0_1 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_4_TheWorld__SSA0_1 { , NN } ;  /* declared: World::World */

  _isaa_117918__rso_4_TheWorld = 0; 
  _rso_4_TheWorld__SSA0_1, _rso_6_TheTerminal__SSA0_1, _rso_5_stdout__SSA0_1 = _MAIN:_INIT::init( _rso_4_TheWorld, _rso_6_TheTerminal, _rso_5_stdout) ; 
  _pinl_81286_BS0_0 = false; 
  _pinl_81287_BS1_0 = true; 
  _pinl_81288_BVL_0 = [ false, false, true, true ]; 
  _pinl_81289_BVR_0 = [ false, true, false, true ]; 
  _pinl_81290__flat_431 = [ false, true, false ]; 
  _pinl_81293__flat_428 = 2; 
  _pinl_83594_wt = 1; 
  _pinl_82906_res__SSA4_8 = [ false, true, false, true, false, false, false, false ]; 
  _pinl_82798_res__SSA0_1 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 2 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_82797_iv__SSA0_1=[_pinl_82800__eat_1306] (IDXS:_wlidx_122637__pinl_82798_res__SSA0_1) < [ 4 ] genwidth [ 4 ])
        { 
        } : _pinl_81286_BS0_0 ; 
        /* Partn */
        ([ 8 ] <= _pinl_82797_iv__SSA0_1=[_pinl_82800__eat_1306] (IDXS:_wlidx_122637__pinl_82798_res__SSA0_1) < [ 12 ] genwidth [ 4 ])
        { 
          _ivesli_122960 = _idxs2offset_( [ 8 ], _pinl_82800__eat_1306); 
          _ivesli_122961 = _add_SxS_( -8, _ivesli_122960); 
          _pinl_84546__flat_37__SSA2_2 = _idx_sel_( _ivesli_122961, _pinl_82906_res__SSA4_8); 
        } : _pinl_84546__flat_37__SSA2_2 ; 
        /* Partn */
        ([ 12 ] <= _pinl_82797_iv__SSA0_1=[_pinl_82800__eat_1306] (IDXS:_wlidx_122637__pinl_82798_res__SSA0_1) < [ 16 ] genwidth [ 4 ])
        { 
          _ivesli_122965 = _idxs2offset_( [ 4 ], _pinl_82800__eat_1306); 
          _ivesli_122966 = _add_SxS_( -12, _ivesli_122965); 
          _pinl_82910__flat_724__SSA2_2 = _idx_sel_( _ivesli_122966, _pinl_81289_BVR_0); 
        } : _pinl_82910__flat_724__SSA2_2 ; 
        /* Partn */
        ([ 4 ] <= _pinl_82797_iv__SSA0_1=[_pinl_82800__eat_1306] (IDXS:_wlidx_122637__pinl_82798_res__SSA0_1) < [ 8 ] genwidth [ 4 ])
        { 
        } : _pinl_81286_BS0_0 ; 
         } :
      genarray( [ 16 ], IDX(_wlidx_122637__pinl_82798_res__SSA0_1)); 
  _pinl_82609_cell__SSA1_1 = [ false, false, false, false ]; 
  _pinl_81329_A_102 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_82613_iv=[_pinl_82618__eat_1301] (IDXS:_wlidx_122638__pinl_81329_A_102) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122956 = _idxs2offset_( [ 4 ], _pinl_82618__eat_1301); 
          _pinl_82653__flat_71 = _idx_sel_( _ivesli_122956, _pinl_81288_BVL_0); 
          _pinl_82628_z__SSA1_4 = [ false, _pinl_82653__flat_71, false, _pinl_82653__flat_71 ]; 
        } : _pinl_82628_z__SSA1_4 ; 
         } :
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122638__pinl_81329_A_102)); 
  _pinl_114648_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_114647_iv=[_pinl_114650__eat_1295, _pinl_114649__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_114651__ea_68_res = _accu_( _pinl_114647_iv); 
          _ivesli_122955 = _idxs2offset_( [ 4, 4 ], _pinl_114650__eat_1295, _pinl_114649__eat_1294); 
          _pinl_114653__flat_71__SSA2_1 = _idx_sel_( _ivesli_122955, _pinl_81329_A_102); 
          _dl_114578__SSA5_1 = _mul_SxS_( _pinl_114650__eat_1295, 4); 
          _dl_114579__SSA5_1 = _add_SxS_( _dl_114578__SSA5_1, _pinl_114649__eat_1294); 
          _pinl_82674_offset__SSA0_1__SSA5_1 = _aplmod_SxS_( _dl_114579__SSA5_1, 16); 
          _pinl_113423__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_82674_offset__SSA0_1__SSA5_1, 16); 
          _pinl_82697__flat_71__SSA5_1 = _idx_sel_( _pinl_113423__flat_405__SSA5_1, _pinl_82798_res__SSA0_1); 
          _pinl_114655__flat_92__SSA2_1 = _eq_SxS_( _pinl_114653__flat_71__SSA2_1, _pinl_82697__flat_71__SSA5_1); 
          _pinl_114652__flat_98 = _and_SxS_( _pinl_114651__ea_68_res, _pinl_114655__flat_92__SSA2_1); 
        } : _pinl_114652__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _dlirmov_123783_shp = [ 2, 3, 4 ]; 
  _pinl_114680_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114679_iv=[_pinl_114683__eat_1279, _pinl_114682__eat_1278, _pinl_114681__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114684__ea_60_res = _accu_( _pinl_114679_iv); 
          _pinl_111028_offset__SSA0_1__SSA6_2 = UTDScalarB::_dup_117631_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114679_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_83515_offset__SSA0_1__SSA6_2 = _aplmod_SxS_( _pinl_111028_offset__SSA0_1__SSA6_2, 3); 
          _pinl_113354__flat_405__SSA6_2 = _aplmod_SxS_( _pinl_83515_offset__SSA0_1__SSA6_2, 3); 
          _pinl_83543__flat_71__SSA6_2 = _idx_sel_( _pinl_113354__flat_405__SSA6_2, _pinl_81290__flat_431); 
          _pinl_82197__flat_100__SSA2_1__SSA5_1 = _not_S_( _pinl_83543__flat_71__SSA6_2); 
          _pinl_82141__flat_98__SSA5_1 = _and_SxS_( _pinl_82197__flat_100__SSA2_1__SSA5_1, _pinl_83543__flat_71__SSA6_2); 
          _pinl_114688__flat_92__SSA2_1 = _eq_SxS_( false, _pinl_82141__flat_98__SSA5_1); 
          _pinl_114685__flat_98 = _and_SxS_( _pinl_114684__ea_60_res, _pinl_114688__flat_92__SSA2_1); 
        } : _pinl_114685__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_81959_res__SSA4_8 = [ true, true, true, true, _pinl_114648_res, true, true, _pinl_114680_res, false ]; 
  _pinl_80569_res__SSA4_8 = [ true, true, true, true, false, false, false, false ]; 
  _pinl_80461_res__SSA0_1 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 2 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_80460_iv__SSA0_1=[_pinl_80463__eat_1306] (IDXS:_wlidx_122639__pinl_80461_res__SSA0_1) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122950 = _idxs2offset_( [ 4 ], _pinl_80463__eat_1306); 
          _pinl_80454__flat_715__SSA5_1 = _idx_sel_( _ivesli_122950, _pinl_81289_BVR_0); 
        } : _pinl_80454__flat_715__SSA5_1 ; 
        /* Partn */
        ([ 8 ] <= _pinl_80460_iv__SSA0_1=[_pinl_80463__eat_1306] (IDXS:_wlidx_122639__pinl_80461_res__SSA0_1) < [ 12 ] genwidth [ 4 ])
        { 
          _ivesli_122943 = _idxs2offset_( [ 8 ], _pinl_80463__eat_1306); 
          _ivesli_122944 = _add_SxS_( -8, _ivesli_122943); 
          _pinl_85010__flat_37__SSA2_2 = _idx_sel_( _ivesli_122944, _pinl_80569_res__SSA4_8); 
        } : _pinl_85010__flat_37__SSA2_2 ; 
        /* Partn */
        ([ 12 ] <= _pinl_80460_iv__SSA0_1=[_pinl_80463__eat_1306] (IDXS:_wlidx_122639__pinl_80461_res__SSA0_1) < [ 16 ] genwidth [ 4 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 4 ] <= _pinl_80460_iv__SSA0_1=[_pinl_80463__eat_1306] (IDXS:_wlidx_122639__pinl_80461_res__SSA0_1) < [ 8 ] genwidth [ 4 ])
        { 
          _ivesli_122948 = _idxs2offset_( [ 4 ], _pinl_80463__eat_1306); 
          _ivesli_122949 = _add_SxS_( -4, _ivesli_122948); 
          _pinl_80511__flat_715__SSA5_1 = _idx_sel_( _ivesli_122949, _pinl_81289_BVR_0); 
        } : _pinl_80511__flat_715__SSA5_1 ; 
         } :
      genarray( [ 16 ], IDX(_wlidx_122639__pinl_80461_res__SSA0_1)); 
  _pinl_78504_A_102 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_80276_iv=[_pinl_80281__eat_1189] (IDXS:_wlidx_122640__pinl_78504_A_102) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122939 = _idxs2offset_( [ 4 ], _pinl_80281__eat_1189); 
          _pinl_80316__flat_71 = _idx_sel_( _ivesli_122939, _pinl_81288_BVL_0); 
          _pinl_80291_z__SSA1_4 = [ _pinl_80316__flat_71, true, _pinl_80316__flat_71, true ]; 
        } : _pinl_80291_z__SSA1_4 ; 
         } :
      /* ERC (_pinl_81329_A_102) */
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122640__pinl_78504_A_102)); 
  _pinl_114691_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_114690_iv=[_pinl_114693__eat_1295, _pinl_114692__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_114694__ea_68_res = _accu_( _pinl_114690_iv); 
          _ivesli_122938 = _idxs2offset_( [ 4, 4 ], _pinl_114693__eat_1295, _pinl_114692__eat_1294); 
          _pinl_114696__flat_71__SSA2_1 = _idx_sel_( _ivesli_122938, _pinl_78504_A_102); 
          _dl_114558__SSA5_1 = _mul_SxS_( _pinl_114693__eat_1295, 4); 
          _dl_114559__SSA5_1 = _add_SxS_( _dl_114558__SSA5_1, _pinl_114692__eat_1294); 
          _pinl_80337_offset__SSA0_1__SSA5_1 = _aplmod_SxS_( _dl_114559__SSA5_1, 16); 
          _pinl_113508__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_80337_offset__SSA0_1__SSA5_1, 16); 
          _pinl_80360__flat_71__SSA5_1 = _idx_sel_( _pinl_113508__flat_405__SSA5_1, _pinl_80461_res__SSA0_1); 
          _pinl_114698__flat_92__SSA2_1 = _eq_SxS_( _pinl_114696__flat_71__SSA2_1, _pinl_80360__flat_71__SSA5_1); 
          _pinl_114695__flat_98 = _and_SxS_( _pinl_114694__ea_68_res, _pinl_114698__flat_92__SSA2_1); 
        } : _pinl_114695__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114701_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114700_iv=[_pinl_114704__eat_1279, _pinl_114703__eat_1278, _pinl_114702__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114705__ea_60_res = _accu_( _pinl_114700_iv); 
          _pinl_111100_offset__SSA0_1__SSA5_2 = UTDScalarB::_dup_116237_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114700_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_81178_offset__SSA0_1__SSA5_2 = _aplmod_SxS_( _pinl_111100_offset__SSA0_1__SSA5_2, 3); 
          _pinl_113439__flat_405__SSA5_2 = _aplmod_SxS_( _pinl_81178_offset__SSA0_1__SSA5_2, 3); 
          _pinl_81206__flat_71__SSA5_2 = _idx_sel_( _pinl_113439__flat_405__SSA5_2, _pinl_81290__flat_431); 
          _pinl_111100_offset__SSA0_1__SSA5_3 = UTDScalarB::_dup_116238_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114700_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_81178_offset__SSA0_1__SSA5_3 = _aplmod_SxS_( _pinl_111100_offset__SSA0_1__SSA5_3, 3); 
          _pinl_113439__flat_405__SSA5_3 = _aplmod_SxS_( _pinl_81178_offset__SSA0_1__SSA5_3, 3); 
          _pinl_81206__flat_71__SSA5_3 = _idx_sel_( _pinl_113439__flat_405__SSA5_3, _pinl_81290__flat_431); 
          _pinl_114709__flat_92__SSA2_1 = _eq_SxS_( _pinl_81206__flat_71__SSA5_2, _pinl_81206__flat_71__SSA5_3); 
          _pinl_114706__flat_98 = _and_SxS_( _pinl_114705__ea_60_res, _pinl_114709__flat_92__SSA2_1); 
        } : _pinl_114706__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114723_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114722_iv=[_pinl_114726__eat_1279, _pinl_114725__eat_1278, _pinl_114724__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114727__ea_60_res = _accu_( _pinl_114722_iv); 
          _pinl_111100_offset__SSA0_1__SSA5_5 = UTDScalarB::_dup_116256_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114722_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_81178_offset__SSA0_1__SSA5_5 = _aplmod_SxS_( _pinl_111100_offset__SSA0_1__SSA5_5, 3); 
          _pinl_113439__flat_405__SSA5_5 = _aplmod_SxS_( _pinl_81178_offset__SSA0_1__SSA5_5, 3); 
          _pinl_81206__flat_71__SSA5_5 = _idx_sel_( _pinl_113439__flat_405__SSA5_5, _pinl_81290__flat_431); 
          _pinl_79740__flat_100__SSA2_1__SSA5_1 = _not_S_( _pinl_81206__flat_71__SSA5_5); 
          _pinl_79684__flat_99__SSA5_1 = _or_SxS_( _pinl_79740__flat_100__SSA2_1__SSA5_1, _pinl_81206__flat_71__SSA5_5); 
          _pinl_114731__flat_92__SSA2_1 = _eq_SxS_( _pinl_79684__flat_99__SSA5_1, true); 
          _pinl_114728__flat_98 = _and_SxS_( _pinl_114727__ea_60_res, _pinl_114731__flat_92__SSA2_1); 
        } : _pinl_114728__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_79382_res__SSA4_8 = [ true, true, true, true, _pinl_114691_res, _pinl_114701_res, true, _pinl_114723_res, false ]; 
  _pinl_75862_A_107 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_77340_iv=[_pinl_77345__eat_1213] (IDXS:_wlidx_122641__pinl_75862_A_107) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122929 = _idxs2offset_( [ 4 ], _pinl_77345__eat_1213); 
          _pinl_77382__flat_71 = _idx_sel_( _ivesli_122929, _pinl_81288_BVL_0); 
          _pinl_77359__flat_100__SSA1_2 = _not_S_( _pinl_77382__flat_71); 
          _pinl_77355_z__SSA1_4 = [ true, _pinl_77359__flat_100__SSA1_2, true, _pinl_77359__flat_100__SSA1_2 ]; 
        } : _pinl_77355_z__SSA1_4 ; 
         } :
      /* ERC (_pinl_78504_A_102, _pinl_81329_A_102) */
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122641__pinl_75862_A_107)); 
  _pinl_114734_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_114733_iv=[_pinl_114736__eat_1295, _pinl_114735__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_114737__ea_68_res = _accu_( _pinl_114733_iv); 
          _ivesli_122928 = _idxs2offset_( [ 4, 4 ], _pinl_114736__eat_1295, _pinl_114735__eat_1294); 
          _pinl_114739__flat_71__SSA2_1 = _idx_sel_( _ivesli_122928, _pinl_75862_A_107); 
          _dl_114548__SSA5_1 = _mul_SxS_( _pinl_114736__eat_1295, 4); 
          _dl_114549__SSA5_1 = _add_SxS_( _dl_114548__SSA5_1, _pinl_114735__eat_1294); 
          _pinl_77441_offset__SSA0_1__SSA2_1__SSA5_1 = _aplmod_SxS_( _dl_114549__SSA5_1, 16); 
          _pinl_113577__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_77441_offset__SSA0_1__SSA2_1__SSA5_1, 16); 
          _pinl_77464__flat_71__SSA2_1__SSA5_1 = _idx_sel_( _pinl_113577__flat_405__SSA5_1, _pinl_82798_res__SSA0_1); 
          _pinl_77416__flat_100__SSA5_1 = _not_S_( _pinl_77464__flat_71__SSA2_1__SSA5_1); 
          _pinl_114741__flat_92__SSA2_1 = _eq_SxS_( _pinl_114739__flat_71__SSA2_1, _pinl_77416__flat_100__SSA5_1); 
          _pinl_114738__flat_98 = _and_SxS_( _pinl_114737__ea_68_res, _pinl_114741__flat_92__SSA2_1); 
        } : _pinl_114738__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114755_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114754_iv=[_pinl_114758__eat_1279, _pinl_114757__eat_1278, _pinl_114756__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114759__ea_60_res = _accu_( _pinl_114754_iv); 
          _pinl_111172_offset__SSA0_1__SSA2_1__SSA5_1 = UTDScalarB::_dup_116295_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114754_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_78296_offset__SSA0_1__SSA2_1__SSA5_1 = _aplmod_SxS_( _pinl_111172_offset__SSA0_1__SSA2_1__SSA5_1, 3); 
          _pinl_113593__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_78296_offset__SSA0_1__SSA2_1__SSA5_1, 3); 
          _pinl_78324__flat_71__SSA2_1__SSA5_1 = _idx_sel_( _pinl_113593__flat_405__SSA5_1, _pinl_81290__flat_431); 
          _pinl_76985__flat_100__SSA5_1 = _not_S_( _pinl_78324__flat_71__SSA2_1__SSA5_1); 
          _pinl_111172_offset__SSA0_1__SSA2_1__SSA5_2 = UTDScalarB::_dup_116296_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114754_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_78296_offset__SSA0_1__SSA2_1__SSA5_2 = _aplmod_SxS_( _pinl_111172_offset__SSA0_1__SSA2_1__SSA5_2, 3); 
          _pinl_113593__flat_405__SSA5_2 = _aplmod_SxS_( _pinl_78296_offset__SSA0_1__SSA2_1__SSA5_2, 3); 
          _pinl_78324__flat_71__SSA2_1__SSA5_2 = _idx_sel_( _pinl_113593__flat_405__SSA5_2, _pinl_81290__flat_431); 
          _pinl_76985__flat_100__SSA5_2 = _not_S_( _pinl_78324__flat_71__SSA2_1__SSA5_2); 
          _pinl_114763__flat_92__SSA2_1 = _eq_SxS_( _pinl_76985__flat_100__SSA5_1, _pinl_76985__flat_100__SSA5_2); 
          _pinl_114760__flat_98 = _and_SxS_( _pinl_114759__ea_60_res, _pinl_114763__flat_92__SSA2_1); 
        } : _pinl_114760__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114766_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114765_iv=[_pinl_114769__eat_1279, _pinl_114768__eat_1278, _pinl_114767__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114770__ea_60_res = _accu_( _pinl_114765_iv); 
          _pinl_111172_offset__SSA0_1__SSA2_3__SSA5_1 = UTDScalarB::_dup_116310_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114765_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_78296_offset__SSA0_1__SSA2_3__SSA5_1 = _aplmod_SxS_( _pinl_111172_offset__SSA0_1__SSA2_3__SSA5_1, 3); 
          _pinl_113609__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_78296_offset__SSA0_1__SSA2_3__SSA5_1, 3); 
          _pinl_78324__flat_71__SSA2_3__SSA5_1 = _idx_sel_( _pinl_113609__flat_405__SSA5_1, _pinl_81290__flat_431); 
          _pinl_111172_offset__SSA0_1__SSA2_1__SSA5_4 = UTDScalarB::_dup_116311_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114765_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_78296_offset__SSA0_1__SSA2_1__SSA5_4 = _aplmod_SxS_( _pinl_111172_offset__SSA0_1__SSA2_1__SSA5_4, 3); 
          _pinl_113593__flat_405__SSA5_4 = _aplmod_SxS_( _pinl_78296_offset__SSA0_1__SSA2_1__SSA5_4, 3); 
          _pinl_78324__flat_71__SSA2_1__SSA5_4 = _idx_sel_( _pinl_113593__flat_405__SSA5_4, _pinl_81290__flat_431); 
          _pinl_76985__flat_100__SSA5_4 = _not_S_( _pinl_78324__flat_71__SSA2_1__SSA5_4); 
          _pinl_76821__flat_98__SSA5_1 = _and_SxS_( _pinl_76985__flat_100__SSA5_4, _pinl_78324__flat_71__SSA2_3__SSA5_1); 
          _pinl_76820__flat_100__SSA5_1 = _not_S_( _pinl_76821__flat_98__SSA5_1); 
          _pinl_114774__flat_92__SSA2_1 = _eq_SxS_( _pinl_76820__flat_100__SSA5_1, true); 
          _pinl_114771__flat_98 = _and_SxS_( _pinl_114770__ea_60_res, _pinl_114774__flat_92__SSA2_1); 
        } : _pinl_114771__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_76592_res__SSA4_8 = [ true, true, true, true, _pinl_114734_res, true, _pinl_114755_res, _pinl_114766_res, false ]; 
  _pinl_72553_A_107 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_74695_iv=[_pinl_74700__eat_1197] (IDXS:_wlidx_122642__pinl_72553_A_107) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122917 = _idxs2offset_( [ 4 ], _pinl_74700__eat_1197); 
          _pinl_74737__flat_71 = _idx_sel_( _ivesli_122917, _pinl_81288_BVL_0); 
          _pinl_74714__flat_100 = _not_S_( _pinl_74737__flat_71); 
          _pinl_74710_z__SSA1_4 = [ _pinl_74714__flat_100, false, _pinl_74714__flat_100, false ]; 
        } : _pinl_74710_z__SSA1_4 ; 
         } :
      /* ERC (_pinl_75862_A_107, _pinl_78504_A_102, _pinl_81329_A_102) */
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122642__pinl_72553_A_107)); 
  _pinl_114777_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_114776_iv=[_pinl_114779__eat_1295, _pinl_114778__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_114780__ea_68_res = _accu_( _pinl_114776_iv); 
          _ivesli_122916 = _idxs2offset_( [ 4, 4 ], _pinl_114779__eat_1295, _pinl_114778__eat_1294); 
          _pinl_114782__flat_71__SSA2_1 = _idx_sel_( _ivesli_122916, _pinl_72553_A_107); 
          _dl_114536__SSA5_1 = _mul_SxS_( _pinl_114779__eat_1295, 4); 
          _dl_114537__SSA5_1 = _add_SxS_( _dl_114536__SSA5_1, _pinl_114778__eat_1294); 
          _pinl_74796_offset__SSA0_1__SSA2_1__SSA5_1 = _aplmod_SxS_( _dl_114537__SSA5_1, 16); 
          _pinl_113678__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_74796_offset__SSA0_1__SSA2_1__SSA5_1, 16); 
          _pinl_74819__flat_71__SSA2_1__SSA5_1 = _idx_sel_( _pinl_113678__flat_405__SSA5_1, _pinl_80461_res__SSA0_1); 
          _pinl_74771__flat_100__SSA5_1 = _not_S_( _pinl_74819__flat_71__SSA2_1__SSA5_1); 
          _pinl_114784__flat_92__SSA2_1 = _eq_SxS_( _pinl_114782__flat_71__SSA2_1, _pinl_74771__flat_100__SSA5_1); 
          _pinl_114781__flat_98 = _and_SxS_( _pinl_114780__ea_68_res, _pinl_114784__flat_92__SSA2_1); 
        } : _pinl_114781__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114787_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114786_iv=[_pinl_114790__eat_1279, _pinl_114789__eat_1278, _pinl_114788__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114791__ea_60_res = _accu_( _pinl_114786_iv); 
          _pinl_111244_offset__SSA0_1__SSA2_1__SSA5_1 = UTDScalarB::_dup_116348_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114786_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_75651_offset__SSA0_1__SSA2_1__SSA5_1 = _aplmod_SxS_( _pinl_111244_offset__SSA0_1__SSA2_1__SSA5_1, 3); 
          _pinl_113694__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_75651_offset__SSA0_1__SSA2_1__SSA5_1, 3); 
          _pinl_75679__flat_71__SSA2_1__SSA5_1 = _idx_sel_( _pinl_113694__flat_405__SSA5_1, _pinl_81290__flat_431); 
          _pinl_74609__flat_100__SSA5_1 = _not_S_( _pinl_75679__flat_71__SSA2_1__SSA5_1); 
          _pinl_111244_offset__SSA0_1__SSA2_1__SSA5_2 = UTDScalarB::_dup_116349_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114786_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_75651_offset__SSA0_1__SSA2_1__SSA5_2 = _aplmod_SxS_( _pinl_111244_offset__SSA0_1__SSA2_1__SSA5_2, 3); 
          _pinl_113694__flat_405__SSA5_2 = _aplmod_SxS_( _pinl_75651_offset__SSA0_1__SSA2_1__SSA5_2, 3); 
          _pinl_75679__flat_71__SSA2_1__SSA5_2 = _idx_sel_( _pinl_113694__flat_405__SSA5_2, _pinl_81290__flat_431); 
          _pinl_74609__flat_100__SSA5_2 = _not_S_( _pinl_75679__flat_71__SSA2_1__SSA5_2); 
          _pinl_114795__flat_92__SSA2_1 = _eq_SxS_( _pinl_74609__flat_100__SSA5_1, _pinl_74609__flat_100__SSA5_2); 
          _pinl_114792__flat_98 = _and_SxS_( _pinl_114791__ea_60_res, _pinl_114795__flat_92__SSA2_1); 
        } : _pinl_114792__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114809_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114808_iv=[_pinl_114812__eat_1279, _pinl_114811__eat_1278, _pinl_114810__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114813__ea_60_res = _accu_( _pinl_114808_iv); 
          _pinl_111244_offset__SSA0_1__SSA2_3__SSA5_1 = UTDScalarB::_dup_116372_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114808_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_75651_offset__SSA0_1__SSA2_3__SSA5_1 = _aplmod_SxS_( _pinl_111244_offset__SSA0_1__SSA2_3__SSA5_1, 3); 
          _pinl_113710__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_75651_offset__SSA0_1__SSA2_3__SSA5_1, 3); 
          _pinl_75679__flat_71__SSA2_3__SSA5_1 = _idx_sel_( _pinl_113710__flat_405__SSA5_1, _pinl_81290__flat_431); 
          _pinl_111244_offset__SSA0_1__SSA2_1__SSA5_4 = UTDScalarB::_dup_116373_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114808_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_75651_offset__SSA0_1__SSA2_1__SSA5_4 = _aplmod_SxS_( _pinl_111244_offset__SSA0_1__SSA2_1__SSA5_4, 3); 
          _pinl_113694__flat_405__SSA5_4 = _aplmod_SxS_( _pinl_75651_offset__SSA0_1__SSA2_1__SSA5_4, 3); 
          _pinl_75679__flat_71__SSA2_1__SSA5_4 = _idx_sel_( _pinl_113694__flat_405__SSA5_4, _pinl_81290__flat_431); 
          _pinl_74609__flat_100__SSA5_4 = _not_S_( _pinl_75679__flat_71__SSA2_1__SSA5_4); 
          _pinl_74013__flat_99__SSA5_1 = _or_SxS_( _pinl_74609__flat_100__SSA5_4, _pinl_75679__flat_71__SSA2_3__SSA5_1); 
          _pinl_74012__flat_100__SSA5_1 = _not_S_( _pinl_74013__flat_99__SSA5_1); 
          _pinl_114817__flat_92__SSA2_1 = _eq_SxS_( _pinl_74012__flat_100__SSA5_1, false); 
          _pinl_114814__flat_98 = _and_SxS_( _pinl_114813__ea_60_res, _pinl_114817__flat_92__SSA2_1); 
        } : _pinl_114814__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_73664_res__SSA4_8 = [ true, true, true, true, _pinl_114777_res, _pinl_114787_res, true, _pinl_114809_res, false ]; 
  _pinl_71617_res__SSA0_1 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_71616_iv__SSA0_1=[_pinl_71619__eat_1306] (IDXS:_wlidx_122643__pinl_71617_res__SSA0_1) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122905 = _idxs2offset_( [ 4 ], _pinl_71619__eat_1306); 
          _pinl_80454__flat_715__SSA5_2 = _idx_sel_( _ivesli_122905, _pinl_81289_BVR_0); 
        } : _pinl_80454__flat_715__SSA5_2 ; 
        /* Partn */
        ([ 8 ] <= _pinl_71616_iv__SSA0_1=[_pinl_71619__eat_1306] (IDXS:_wlidx_122643__pinl_71617_res__SSA0_1) < [ 12 ] genwidth [ 4 ])
        { 
        } : _pinl_81286_BS0_0 ; 
        /* Partn */
        ([ 12 ] <= _pinl_71616_iv__SSA0_1=[_pinl_71619__eat_1306] (IDXS:_wlidx_122643__pinl_71617_res__SSA0_1) < [ 16 ] genwidth [ 4 ])
        { 
        } : _pinl_81286_BS0_0 ; 
        /* Partn */
        ([ 4 ] <= _pinl_71616_iv__SSA0_1=[_pinl_71619__eat_1306] (IDXS:_wlidx_122643__pinl_71617_res__SSA0_1) < [ 8 ] genwidth [ 4 ])
        { 
          _ivesli_122903 = _idxs2offset_( [ 4 ], _pinl_71619__eat_1306); 
          _ivesli_122904 = _add_SxS_( -4, _ivesli_122903); 
          _pinl_80511__flat_715__SSA5_2 = _idx_sel_( _ivesli_122904, _pinl_81289_BVR_0); 
        } : _pinl_80511__flat_715__SSA5_2 ; 
         } :
      /* ERC (_pinl_80461_res__SSA0_1, _pinl_82798_res__SSA0_1) */
      genarray( [ 16 ], IDX(_wlidx_122643__pinl_71617_res__SSA0_1)); 
  _pinl_70006_A_106 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_71430_iv=[_pinl_71435__eat_1223] (IDXS:_wlidx_122644__pinl_70006_A_106) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122899 = _idxs2offset_( [ 4 ], _pinl_71435__eat_1223); 
          _pinl_71472__flat_71 = _idx_sel_( _ivesli_122899, _pinl_81288_BVL_0); 
          _pinl_71450__flat_100 = _not_S_( _pinl_71472__flat_71); 
          _pinl_71445_z__SSA1_4 = [ false, _pinl_71450__flat_100, false, _pinl_71450__flat_100 ]; 
        } : _pinl_71445_z__SSA1_4 ; 
         } :
      /* ERC (_pinl_72553_A_107, _pinl_75862_A_107, _pinl_78504_A_102, _pinl_81329_A_102) */
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122644__pinl_70006_A_106)); 
  _pinl_114820_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_114819_iv=[_pinl_114822__eat_1295, _pinl_114821__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_114823__ea_68_res = _accu_( _pinl_114819_iv); 
          _ivesli_122898 = _idxs2offset_( [ 4, 4 ], _pinl_114822__eat_1295, _pinl_114821__eat_1294); 
          _pinl_114825__flat_71__SSA2_1 = _idx_sel_( _ivesli_122898, _pinl_70006_A_106); 
          _dl_114515__SSA5_1 = _mul_SxS_( _pinl_114822__eat_1295, 4); 
          _dl_114516__SSA5_1 = _add_SxS_( _dl_114515__SSA5_1, _pinl_114821__eat_1294); 
          _pinl_71493_offset__SSA0_1__SSA5_1 = _aplmod_SxS_( _dl_114516__SSA5_1, 16); 
          _pinl_113779__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_71493_offset__SSA0_1__SSA5_1, 16); 
          _pinl_71516__flat_71__SSA5_1 = _idx_sel_( _pinl_113779__flat_405__SSA5_1, _pinl_71617_res__SSA0_1); 
          _pinl_114827__flat_92__SSA2_1 = _eq_SxS_( _pinl_114825__flat_71__SSA2_1, _pinl_71516__flat_71__SSA5_1); 
          _pinl_114824__flat_98 = _and_SxS_( _pinl_114823__ea_68_res, _pinl_114827__flat_92__SSA2_1); 
        } : _pinl_114824__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114841_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114840_iv=[_pinl_114844__eat_1279, _pinl_114843__eat_1278, _pinl_114842__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114845__ea_60_res = _accu_( _pinl_114840_iv); 
          _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_1 = UTDScalarB::_dup_116425_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114840_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_1 = _aplmod_SxS_( _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_1, 3); 
          _pinl_113795__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_1, 3); 
          _pinl_72370__flat_71__SSA2_1__SSA5_1 = _idx_sel_( _pinl_113795__flat_405__SSA5_1, _pinl_81290__flat_431); 
          _pinl_71118__flat_100__SSA5_1 = _not_S_( _pinl_72370__flat_71__SSA2_1__SSA5_1); 
          _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_2 = UTDScalarB::_dup_116426_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114840_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_2 = _aplmod_SxS_( _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_2, 3); 
          _pinl_113795__flat_405__SSA5_2 = _aplmod_SxS_( _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_2, 3); 
          _pinl_72370__flat_71__SSA2_1__SSA5_2 = _idx_sel_( _pinl_113795__flat_405__SSA5_2, _pinl_81290__flat_431); 
          _pinl_71118__flat_100__SSA5_2 = _not_S_( _pinl_72370__flat_71__SSA2_1__SSA5_2); 
          _pinl_114849__flat_92__SSA2_1 = _eq_SxS_( _pinl_71118__flat_100__SSA5_1, _pinl_71118__flat_100__SSA5_2); 
          _pinl_114846__flat_98 = _and_SxS_( _pinl_114845__ea_60_res, _pinl_114849__flat_92__SSA2_1); 
        } : _pinl_114846__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114852_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114851_iv=[_pinl_114855__eat_1279, _pinl_114854__eat_1278, _pinl_114853__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114856__ea_60_res = _accu_( _pinl_114851_iv); 
          _pinl_111316_offset__SSA0_1__SSA2_3__SSA5_1 = UTDScalarB::_dup_116440_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114851_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_72342_offset__SSA0_1__SSA2_3__SSA5_1 = _aplmod_SxS_( _pinl_111316_offset__SSA0_1__SSA2_3__SSA5_1, 3); 
          _pinl_113811__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_72342_offset__SSA0_1__SSA2_3__SSA5_1, 3); 
          _pinl_72370__flat_71__SSA2_3__SSA5_1 = _idx_sel_( _pinl_113811__flat_405__SSA5_1, _pinl_81290__flat_431); 
          _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_4 = UTDScalarB::_dup_116441_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114851_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_4 = _aplmod_SxS_( _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_4, 3); 
          _pinl_113795__flat_405__SSA5_4 = _aplmod_SxS_( _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_4, 3); 
          _pinl_72370__flat_71__SSA2_1__SSA5_4 = _idx_sel_( _pinl_113795__flat_405__SSA5_4, _pinl_81290__flat_431); 
          _pinl_71118__flat_100__SSA5_4 = _not_S_( _pinl_72370__flat_71__SSA2_1__SSA5_4); 
          _pinl_70954__flat_100__SSA5_1 = _not_S_( _pinl_72370__flat_71__SSA2_3__SSA5_1); 
          _pinl_70953__flat_98__SSA5_1 = _and_SxS_( _pinl_70954__flat_100__SSA5_1, _pinl_71118__flat_100__SSA5_4); 
          _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_5 = UTDScalarB::_dup_116442_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114851_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_5 = _aplmod_SxS_( _pinl_111316_offset__SSA0_1__SSA2_1__SSA5_5, 3); 
          _pinl_113795__flat_405__SSA5_5 = _aplmod_SxS_( _pinl_72342_offset__SSA0_1__SSA2_1__SSA5_5, 3); 
          _pinl_72370__flat_71__SSA2_1__SSA5_5 = _idx_sel_( _pinl_113795__flat_405__SSA5_5, _pinl_81290__flat_431); 
          _pinl_71118__flat_100__SSA5_5 = _not_S_( _pinl_72370__flat_71__SSA2_1__SSA5_5); 
          _pinl_114860__flat_92__SSA2_1 = _eq_SxS_( _pinl_70953__flat_98__SSA5_1, _pinl_71118__flat_100__SSA5_5); 
          _pinl_114857__flat_98 = _and_SxS_( _pinl_114856__ea_60_res, _pinl_114860__flat_92__SSA2_1); 
        } : _pinl_114857__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_70768_res__SSA4_8 = [ true, true, true, true, _pinl_114820_res, true, _pinl_114841_res, _pinl_114852_res, false ]; 
  _pinl_69073_res__SSA0_1 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_69072_iv__SSA0_1=[_pinl_69075__eat_1306] (IDXS:_wlidx_122645__pinl_69073_res__SSA0_1) < [ 4 ] genwidth [ 4 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 8 ] <= _pinl_69072_iv__SSA0_1=[_pinl_69075__eat_1306] (IDXS:_wlidx_122645__pinl_69073_res__SSA0_1) < [ 12 ] genwidth [ 4 ])
        { 
          _ivesli_122879 = _idxs2offset_( [ 8 ], _pinl_69075__eat_1306); 
          _ivesli_122880 = _add_SxS_( -8, _ivesli_122879); 
          _pinl_84546__flat_37__SSA2_4 = _idx_sel_( _ivesli_122880, _pinl_82906_res__SSA4_8); 
        } : _pinl_84546__flat_37__SSA2_4 ; 
        /* Partn */
        ([ 12 ] <= _pinl_69072_iv__SSA0_1=[_pinl_69075__eat_1306] (IDXS:_wlidx_122645__pinl_69073_res__SSA0_1) < [ 16 ] genwidth [ 4 ])
        { 
          _ivesli_122884 = _idxs2offset_( [ 4 ], _pinl_69075__eat_1306); 
          _ivesli_122885 = _add_SxS_( -12, _ivesli_122884); 
          _pinl_82910__flat_724__SSA2_4 = _idx_sel_( _ivesli_122885, _pinl_81289_BVR_0); 
        } : _pinl_82910__flat_724__SSA2_4 ; 
        /* Partn */
        ([ 4 ] <= _pinl_69072_iv__SSA0_1=[_pinl_69075__eat_1306] (IDXS:_wlidx_122645__pinl_69073_res__SSA0_1) < [ 8 ] genwidth [ 4 ])
        { 
        } : _pinl_81287_BS1_0 ; 
         } :
      /* ERC (_pinl_71617_res__SSA0_1, _pinl_80461_res__SSA0_1, _pinl_82798_res__SSA0_1) */
      genarray( [ 16 ], IDX(_wlidx_122645__pinl_69073_res__SSA0_1)); 
  _pinl_67340_A_106 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_68886_iv=[_pinl_68891__eat_1231] (IDXS:_wlidx_122646__pinl_67340_A_106) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122875 = _idxs2offset_( [ 4 ], _pinl_68891__eat_1231); 
          _pinl_68928__flat_71 = _idx_sel_( _ivesli_122875, _pinl_81288_BVL_0); 
          _pinl_68906__flat_100 = _not_S_( _pinl_68928__flat_71); 
          _pinl_68901_z__SSA1_4 = [ _pinl_68906__flat_100, true, _pinl_68906__flat_100, true ]; 
        } : _pinl_68901_z__SSA1_4 ; 
         } :
      /* ERC (_pinl_70006_A_106, _pinl_72553_A_107, _pinl_75862_A_107, _pinl_78504_A_102, _pinl_81329_A_102) */
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122646__pinl_67340_A_106)); 
  _pinl_114863_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_114862_iv=[_pinl_114865__eat_1295, _pinl_114864__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_114866__ea_68_res = _accu_( _pinl_114862_iv); 
          _ivesli_122874 = _idxs2offset_( [ 4, 4 ], _pinl_114865__eat_1295, _pinl_114864__eat_1294); 
          _pinl_114868__flat_71__SSA2_1 = _idx_sel_( _ivesli_122874, _pinl_67340_A_106); 
          _dl_114477__SSA5_1 = _mul_SxS_( _pinl_114865__eat_1295, 4); 
          _dl_114478__SSA5_1 = _add_SxS_( _dl_114477__SSA5_1, _pinl_114864__eat_1294); 
          _pinl_68949_offset__SSA0_1__SSA5_1 = _aplmod_SxS_( _dl_114478__SSA5_1, 16); 
          _pinl_113880__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_68949_offset__SSA0_1__SSA5_1, 16); 
          _pinl_68972__flat_71__SSA5_1 = _idx_sel_( _pinl_113880__flat_405__SSA5_1, _pinl_69073_res__SSA0_1); 
          _pinl_114870__flat_92__SSA2_1 = _eq_SxS_( _pinl_114868__flat_71__SSA2_1, _pinl_68972__flat_71__SSA5_1); 
          _pinl_114867__flat_98 = _and_SxS_( _pinl_114866__ea_68_res, _pinl_114870__flat_92__SSA2_1); 
        } : _pinl_114867__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114873_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114872_iv=[_pinl_114876__eat_1279, _pinl_114875__eat_1278, _pinl_114874__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114877__ea_60_res = _accu_( _pinl_114872_iv); 
          _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_1 = UTDScalarB::_dup_116495_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114872_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_1 = _aplmod_SxS_( _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_1, 3); 
          _pinl_113896__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_1, 3); 
          _pinl_69826__flat_71__SSA2_1__SSA5_1 = _idx_sel_( _pinl_113896__flat_405__SSA5_1, _pinl_81290__flat_431); 
          _pinl_68800__flat_100__SSA5_1 = _not_S_( _pinl_69826__flat_71__SSA2_1__SSA5_1); 
          _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_2 = UTDScalarB::_dup_116496_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114872_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_2 = _aplmod_SxS_( _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_2, 3); 
          _pinl_113896__flat_405__SSA5_2 = _aplmod_SxS_( _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_2, 3); 
          _pinl_69826__flat_71__SSA2_1__SSA5_2 = _idx_sel_( _pinl_113896__flat_405__SSA5_2, _pinl_81290__flat_431); 
          _pinl_68800__flat_100__SSA5_2 = _not_S_( _pinl_69826__flat_71__SSA2_1__SSA5_2); 
          _pinl_114881__flat_92__SSA2_1 = _eq_SxS_( _pinl_68800__flat_100__SSA5_1, _pinl_68800__flat_100__SSA5_2); 
          _pinl_114878__flat_98 = _and_SxS_( _pinl_114877__ea_60_res, _pinl_114881__flat_92__SSA2_1); 
        } : _pinl_114878__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114895_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114894_iv=[_pinl_114898__eat_1279, _pinl_114897__eat_1278, _pinl_114896__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114899__ea_60_res = _accu_( _pinl_114894_iv); 
          _pinl_111388_offset__SSA0_1__SSA2_3__SSA5_1 = UTDScalarB::_dup_116516_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114894_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_69798_offset__SSA0_1__SSA2_3__SSA5_1 = _aplmod_SxS_( _pinl_111388_offset__SSA0_1__SSA2_3__SSA5_1, 3); 
          _pinl_113912__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_69798_offset__SSA0_1__SSA2_3__SSA5_1, 3); 
          _pinl_69826__flat_71__SSA2_3__SSA5_1 = _idx_sel_( _pinl_113912__flat_405__SSA5_1, _pinl_81290__flat_431); 
          _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_4 = UTDScalarB::_dup_116517_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114894_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_4 = _aplmod_SxS_( _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_4, 3); 
          _pinl_113896__flat_405__SSA5_4 = _aplmod_SxS_( _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_4, 3); 
          _pinl_69826__flat_71__SSA2_1__SSA5_4 = _idx_sel_( _pinl_113896__flat_405__SSA5_4, _pinl_81290__flat_431); 
          _pinl_68800__flat_100__SSA5_4 = _not_S_( _pinl_69826__flat_71__SSA2_1__SSA5_4); 
          _pinl_68408__flat_100__SSA5_1 = _not_S_( _pinl_69826__flat_71__SSA2_3__SSA5_1); 
          _pinl_68407__flat_99__SSA5_1 = _or_SxS_( _pinl_68408__flat_100__SSA5_1, _pinl_68800__flat_100__SSA5_4); 
          _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_5 = UTDScalarB::_dup_116518_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114894_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_5 = _aplmod_SxS_( _pinl_111388_offset__SSA0_1__SSA2_1__SSA5_5, 3); 
          _pinl_113896__flat_405__SSA5_5 = _aplmod_SxS_( _pinl_69798_offset__SSA0_1__SSA2_1__SSA5_5, 3); 
          _pinl_69826__flat_71__SSA2_1__SSA5_5 = _idx_sel_( _pinl_113896__flat_405__SSA5_5, _pinl_81290__flat_431); 
          _pinl_68800__flat_100__SSA5_5 = _not_S_( _pinl_69826__flat_71__SSA2_1__SSA5_5); 
          _pinl_114903__flat_92__SSA2_1 = _eq_SxS_( _pinl_68407__flat_99__SSA5_1, _pinl_68800__flat_100__SSA5_5); 
          _pinl_114900__flat_98 = _and_SxS_( _pinl_114899__ea_60_res, _pinl_114903__flat_92__SSA2_1); 
        } : _pinl_114900__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_68102_res__SSA4_8 = [ true, true, true, true, _pinl_114863_res, _pinl_114873_res, true, _pinl_114895_res, false ]; 
  _pinl_64938__flat_546 = [ true, false, true, false ]; 
  _pinl_66415_res__SSA0_1 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_66414_iv__SSA0_1=[_pinl_66417__eat_1306] (IDXS:_wlidx_122647__pinl_66415_res__SSA0_1) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122861 = _idxs2offset_( [ 4 ], _pinl_66417__eat_1306); 
          _pinl_66408__flat_715__SSA5_1 = _idx_sel_( _ivesli_122861, _pinl_64938__flat_546); 
        } : _pinl_66408__flat_715__SSA5_1 ; 
        /* Partn */
        ([ 8 ] <= _pinl_66414_iv__SSA0_1=[_pinl_66417__eat_1306] (IDXS:_wlidx_122647__pinl_66415_res__SSA0_1) < [ 12 ] genwidth [ 4 ])
        { 
          _ivesli_122849 = _idxs2offset_( [ 8 ], _pinl_66417__eat_1306); 
          _ivesli_122850 = _add_SxS_( -8, _ivesli_122849); 
          _pinl_84546__flat_37__SSA2_6 = _idx_sel_( _ivesli_122850, _pinl_82906_res__SSA4_8); 
        } : _pinl_84546__flat_37__SSA2_6 ; 
        /* Partn */
        ([ 12 ] <= _pinl_66414_iv__SSA0_1=[_pinl_66417__eat_1306] (IDXS:_wlidx_122647__pinl_66415_res__SSA0_1) < [ 16 ] genwidth [ 4 ])
        { 
          _ivesli_122854 = _idxs2offset_( [ 4 ], _pinl_66417__eat_1306); 
          _ivesli_122855 = _add_SxS_( -12, _ivesli_122854); 
          _pinl_82910__flat_724__SSA2_6 = _idx_sel_( _ivesli_122855, _pinl_81289_BVR_0); 
        } : _pinl_82910__flat_724__SSA2_6 ; 
        /* Partn */
        ([ 4 ] <= _pinl_66414_iv__SSA0_1=[_pinl_66417__eat_1306] (IDXS:_wlidx_122647__pinl_66415_res__SSA0_1) < [ 8 ] genwidth [ 4 ])
        { 
          _ivesli_122859 = _idxs2offset_( [ 4 ], _pinl_66417__eat_1306); 
          _ivesli_122860 = _add_SxS_( -4, _ivesli_122859); 
          _pinl_66465__flat_715__SSA5_1 = _idx_sel_( _ivesli_122860, _pinl_64938__flat_546); 
        } : _pinl_66465__flat_715__SSA5_1 ; 
         } :
      /* ERC (_pinl_69073_res__SSA0_1, _pinl_71617_res__SSA0_1, _pinl_80461_res__SSA0_1, _pinl_82798_res__SSA0_1) */
      genarray( [ 16 ], IDX(_wlidx_122647__pinl_66415_res__SSA0_1)); 
  _pinl_64943_A_106 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_66230_iv=[_pinl_66235__eat_1252] (IDXS:_wlidx_122648__pinl_64943_A_106) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122845 = _idxs2offset_( [ 4 ], _pinl_66235__eat_1252); 
          _pinl_66270__flat_71 = _idx_sel_( _ivesli_122845, _pinl_81288_BVL_0); 
          _pinl_66248__flat_92 = _eq_SxS_( _pinl_66270__flat_71, false); 
          _pinl_66248__flat_92__SSA1_2 = _eq_SxS_( _pinl_66270__flat_71, true); 
          _pinl_66245_z__SSA1_4 = [ _pinl_66248__flat_92, _pinl_66248__flat_92__SSA1_2, _pinl_66248__flat_92, _pinl_66248__flat_92__SSA1_2 ]; 
        } : _pinl_66245_z__SSA1_4 ; 
         } :
      /* ERC (_pinl_67340_A_106, _pinl_70006_A_106, _pinl_72553_A_107, _pinl_75862_A_107, _pinl_78504_A_102, _pinl_81329_A_102) */
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122648__pinl_64943_A_106)); 
  _pinl_114906_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_114905_iv=[_pinl_114908__eat_1295, _pinl_114907__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_114909__ea_68_res = _accu_( _pinl_114905_iv); 
          _ivesli_122844 = _idxs2offset_( [ 4, 4 ], _pinl_114908__eat_1295, _pinl_114907__eat_1294); 
          _pinl_114911__flat_71__SSA2_1 = _idx_sel_( _ivesli_122844, _pinl_64943_A_106); 
          _dl_114438__SSA5_1 = _mul_SxS_( _pinl_114908__eat_1295, 4); 
          _dl_114439__SSA5_1 = _add_SxS_( _dl_114438__SSA5_1, _pinl_114907__eat_1294); 
          _pinl_66291_offset__SSA0_1__SSA5_1 = _aplmod_SxS_( _dl_114439__SSA5_1, 16); 
          _pinl_113997__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_66291_offset__SSA0_1__SSA5_1, 16); 
          _pinl_66314__flat_71__SSA5_1 = _idx_sel_( _pinl_113997__flat_405__SSA5_1, _pinl_66415_res__SSA0_1); 
          _pinl_114913__flat_92__SSA2_1 = _eq_SxS_( _pinl_114911__flat_71__SSA2_1, _pinl_66314__flat_71__SSA5_1); 
          _pinl_114910__flat_98 = _and_SxS_( _pinl_114909__ea_68_res, _pinl_114913__flat_92__SSA2_1); 
        } : _pinl_114910__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114916_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114915_iv=[_pinl_114919__eat_1279, _pinl_114918__eat_1278, _pinl_114917__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114920__ea_60_res = _accu_( _pinl_114915_iv); 
          _pinl_111460_offset__SSA0_1__SSA5_3 = UTDScalarB::_dup_116586_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114915_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_67132_offset__SSA0_1__SSA5_3 = _aplmod_SxS_( _pinl_111460_offset__SSA0_1__SSA5_3, 3); 
          _pinl_113928__flat_405__SSA5_3 = _aplmod_SxS_( _pinl_67132_offset__SSA0_1__SSA5_3, 3); 
          _pinl_67160__flat_71__SSA5_3 = _idx_sel_( _pinl_113928__flat_405__SSA5_3, _pinl_81290__flat_431); 
          _pinl_66101__flat_92__SSA5_1 = _eq_SxS_( _pinl_67160__flat_71__SSA5_3, false); 
          _pinl_111460_offset__SSA0_1__SSA5_4 = UTDScalarB::_dup_116587_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114915_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_67132_offset__SSA0_1__SSA5_4 = _aplmod_SxS_( _pinl_111460_offset__SSA0_1__SSA5_4, 3); 
          _pinl_113928__flat_405__SSA5_4 = _aplmod_SxS_( _pinl_67132_offset__SSA0_1__SSA5_4, 3); 
          _pinl_67160__flat_71__SSA5_4 = _idx_sel_( _pinl_113928__flat_405__SSA5_4, _pinl_81290__flat_431); 
          _pinl_66144__flat_100__SSA5_1 = _not_S_( _pinl_67160__flat_71__SSA5_4); 
          _pinl_114924__flat_92__SSA2_1 = _eq_SxS_( _pinl_66101__flat_92__SSA5_1, _pinl_66144__flat_100__SSA5_1); 
          _pinl_114921__flat_98 = _and_SxS_( _pinl_114920__ea_60_res, _pinl_114924__flat_92__SSA2_1); 
        } : _pinl_114921__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114927_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114926_iv=[_pinl_114930__eat_1279, _pinl_114929__eat_1278, _pinl_114928__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114931__ea_60_res = _accu_( _pinl_114926_iv); 
          _pinl_111460_offset__SSA0_1__SSA5_6 = UTDScalarB::_dup_116599_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114926_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_67132_offset__SSA0_1__SSA5_6 = _aplmod_SxS_( _pinl_111460_offset__SSA0_1__SSA5_6, 3); 
          _pinl_113928__flat_405__SSA5_6 = _aplmod_SxS_( _pinl_67132_offset__SSA0_1__SSA5_6, 3); 
          _pinl_67160__flat_71__SSA5_6 = _idx_sel_( _pinl_113928__flat_405__SSA5_6, _pinl_81290__flat_431); 
          _pinl_65995__flat_92__SSA5_1 = _eq_SxS_( _pinl_67160__flat_71__SSA5_6, true); 
          _pinl_111460_offset__SSA0_1__SSA5_7 = UTDScalarB::_dup_116600_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114926_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_67132_offset__SSA0_1__SSA5_7 = _aplmod_SxS_( _pinl_111460_offset__SSA0_1__SSA5_7, 3); 
          _pinl_113928__flat_405__SSA5_7 = _aplmod_SxS_( _pinl_67132_offset__SSA0_1__SSA5_7, 3); 
          _pinl_67160__flat_71__SSA5_7 = _idx_sel_( _pinl_113928__flat_405__SSA5_7, _pinl_81290__flat_431); 
          _pinl_114935__flat_92__SSA2_1 = _eq_SxS_( _pinl_65995__flat_92__SSA5_1, _pinl_67160__flat_71__SSA5_7); 
          _pinl_114932__flat_98 = _and_SxS_( _pinl_114931__ea_60_res, _pinl_114935__flat_92__SSA2_1); 
        } : _pinl_114932__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114938_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114937_iv=[_pinl_114941__eat_1279, _pinl_114940__eat_1278, _pinl_114939__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114942__ea_60_res = _accu_( _pinl_114937_iv); 
          _pinl_111460_offset__SSA0_1__SSA5_10 = UTDScalarB::_dup_116618_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114937_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_67132_offset__SSA0_1__SSA5_10 = _aplmod_SxS_( _pinl_111460_offset__SSA0_1__SSA5_10, 3); 
          _pinl_113928__flat_405__SSA5_10 = _aplmod_SxS_( _pinl_67132_offset__SSA0_1__SSA5_10, 3); 
          _pinl_67160__flat_71__SSA5_10 = _idx_sel_( _pinl_113928__flat_405__SSA5_10, _pinl_81290__flat_431); 
          _pinl_111460_offset__SSA0_1__SSA5_11 = UTDScalarB::_dup_116619_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114937_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_67132_offset__SSA0_1__SSA5_11 = _aplmod_SxS_( _pinl_111460_offset__SSA0_1__SSA5_11, 3); 
          _pinl_113928__flat_405__SSA5_11 = _aplmod_SxS_( _pinl_67132_offset__SSA0_1__SSA5_11, 3); 
          _pinl_67160__flat_71__SSA5_11 = _idx_sel_( _pinl_113928__flat_405__SSA5_11, _pinl_81290__flat_431); 
          _pinl_66144__flat_100__SSA5_3 = _not_S_( _pinl_67160__flat_71__SSA5_11); 
          _pinl_65756__flat_92__SSA5_1 = _eq_SxS_( _pinl_66144__flat_100__SSA5_3, _pinl_67160__flat_71__SSA5_10); 
          _pinl_114946__flat_92__SSA2_1 = _eq_SxS_( _pinl_65756__flat_92__SSA5_1, false); 
          _pinl_114943__flat_98 = _and_SxS_( _pinl_114942__ea_60_res, _pinl_114946__flat_92__SSA2_1); 
        } : _pinl_114943__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_65574_res__SSA4_8 = [ true, true, true, true, _pinl_114906_res, _pinl_114916_res, _pinl_114927_res, _pinl_114938_res, false ]; 
  _pinl_64010_res__SSA0_1 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_64009_iv__SSA0_1=[_pinl_64012__eat_1306] (IDXS:_wlidx_122649__pinl_64010_res__SSA0_1) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122829 = _idxs2offset_( [ 4 ], _pinl_64012__eat_1306); 
          _pinl_66408__flat_715__SSA5_2 = _idx_sel_( _ivesli_122829, _pinl_64938__flat_546); 
        } : _pinl_66408__flat_715__SSA5_2 ; 
        /* Partn */
        ([ 8 ] <= _pinl_64009_iv__SSA0_1=[_pinl_64012__eat_1306] (IDXS:_wlidx_122649__pinl_64010_res__SSA0_1) < [ 12 ] genwidth [ 4 ])
        { 
          _ivesli_122822 = _idxs2offset_( [ 8 ], _pinl_64012__eat_1306); 
          _ivesli_122823 = _add_SxS_( -8, _ivesli_122822); 
          _pinl_85010__flat_37__SSA2_4 = _idx_sel_( _ivesli_122823, _pinl_80569_res__SSA4_8); 
        } : _pinl_85010__flat_37__SSA2_4 ; 
        /* Partn */
        ([ 12 ] <= _pinl_64009_iv__SSA0_1=[_pinl_64012__eat_1306] (IDXS:_wlidx_122649__pinl_64010_res__SSA0_1) < [ 16 ] genwidth [ 4 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 4 ] <= _pinl_64009_iv__SSA0_1=[_pinl_64012__eat_1306] (IDXS:_wlidx_122649__pinl_64010_res__SSA0_1) < [ 8 ] genwidth [ 4 ])
        { 
          _ivesli_122827 = _idxs2offset_( [ 4 ], _pinl_64012__eat_1306); 
          _ivesli_122828 = _add_SxS_( -4, _ivesli_122827); 
          _pinl_66465__flat_715__SSA5_2 = _idx_sel_( _ivesli_122828, _pinl_64938__flat_546); 
        } : _pinl_66465__flat_715__SSA5_2 ; 
         } :
      /* ERC (_pinl_66415_res__SSA0_1, _pinl_69073_res__SSA0_1, _pinl_71617_res__SSA0_1, _pinl_80461_res__SSA0_1, _pinl_82798_res__SSA0_1) */
      genarray( [ 16 ], IDX(_wlidx_122649__pinl_64010_res__SSA0_1)); 
  _pinl_62518_A_107 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_63823_iv=[_pinl_63828__eat_1247] (IDXS:_wlidx_122650__pinl_62518_A_107) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122818 = _idxs2offset_( [ 4 ], _pinl_63828__eat_1247); 
          _pinl_63865__flat_71 = _idx_sel_( _ivesli_122818, _pinl_81288_BVL_0); 
          _pinl_63838_z__SSA1_4 = [ true, _pinl_63865__flat_71, true, _pinl_63865__flat_71 ]; 
        } : _pinl_63838_z__SSA1_4 ; 
         } :
      /* ERC (_pinl_64943_A_106, _pinl_67340_A_106, _pinl_70006_A_106, _pinl_72553_A_107, _pinl_75862_A_107, _pinl_78504_A_102, _pinl_81329_A_102) */
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122650__pinl_62518_A_107)); 
  _pinl_114949_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_114948_iv=[_pinl_114951__eat_1295, _pinl_114950__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_114952__ea_68_res = _accu_( _pinl_114948_iv); 
          _ivesli_122817 = _idxs2offset_( [ 4, 4 ], _pinl_114951__eat_1295, _pinl_114950__eat_1294); 
          _pinl_114954__flat_71__SSA2_1 = _idx_sel_( _ivesli_122817, _pinl_62518_A_107); 
          _dl_114418__SSA5_1 = _mul_SxS_( _pinl_114951__eat_1295, 4); 
          _dl_114419__SSA5_1 = _add_SxS_( _dl_114418__SSA5_1, _pinl_114950__eat_1294); 
          _pinl_63886_offset__SSA0_1__SSA5_1 = _aplmod_SxS_( _dl_114419__SSA5_1, 16); 
          _pinl_114082__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_63886_offset__SSA0_1__SSA5_1, 16); 
          _pinl_63909__flat_71__SSA5_1 = _idx_sel_( _pinl_114082__flat_405__SSA5_1, _pinl_64010_res__SSA0_1); 
          _pinl_114956__flat_92__SSA2_1 = _eq_SxS_( _pinl_114954__flat_71__SSA2_1, _pinl_63909__flat_71__SSA5_1); 
          _pinl_114953__flat_98 = _and_SxS_( _pinl_114952__ea_68_res, _pinl_114956__flat_92__SSA2_1); 
        } : _pinl_114953__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_114981_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_114980_iv=[_pinl_114984__eat_1279, _pinl_114983__eat_1278, _pinl_114982__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_114985__ea_60_res = _accu_( _pinl_114980_iv); 
          _pinl_111532_offset__SSA0_1__SSA6_2 = UTDScalarB::_dup_117639_V2O__Loop_2( _dlirmov_123783_shp, _pinl_114980_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_64735_offset__SSA0_1__SSA6_2 = _aplmod_SxS_( _pinl_111532_offset__SSA0_1__SSA6_2, 3); 
          _pinl_114013__flat_405__SSA6_2 = _aplmod_SxS_( _pinl_64735_offset__SSA0_1__SSA6_2, 3); 
          _pinl_64763__flat_71__SSA6_2 = _idx_sel_( _pinl_114013__flat_405__SSA6_2, _pinl_81290__flat_431); 
          _pinl_63401__flat_100__SSA2_1__SSA5_1 = _not_S_( _pinl_64763__flat_71__SSA6_2); 
          _pinl_63345__flat_100__SSA5_1 = _not_S_( _pinl_63401__flat_100__SSA2_1__SSA5_1); 
          _pinl_63344__flat_99__SSA5_1 = _or_SxS_( _pinl_63345__flat_100__SSA5_1, _pinl_64763__flat_71__SSA6_2); 
          _pinl_114989__flat_92__SSA2_1 = _eq_SxS_( _pinl_63344__flat_99__SSA5_1, _pinl_64763__flat_71__SSA6_2); 
          _pinl_114986__flat_98 = _and_SxS_( _pinl_114985__ea_60_res, _pinl_114989__flat_92__SSA2_1); 
        } : _pinl_114986__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_63159_res__SSA4_8 = [ true, true, true, true, _pinl_114949_res, true, true, _pinl_114981_res, false ]; 
  _pinl_61692_res__SSA4_8 = [ true, false, true, false, false, false, false, false ]; 
  _pinl_61584_res__SSA0_1 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_61583_iv__SSA0_1=[_pinl_61586__eat_1306] (IDXS:_wlidx_122651__pinl_61584_res__SSA0_1) < [ 4 ] genwidth [ 4 ])
        { 
        } : _pinl_81286_BS0_0 ; 
        /* Partn */
        ([ 8 ] <= _pinl_61583_iv__SSA0_1=[_pinl_61586__eat_1306] (IDXS:_wlidx_122651__pinl_61584_res__SSA0_1) < [ 12 ] genwidth [ 4 ])
        { 
          _ivesli_122806 = _idxs2offset_( [ 8 ], _pinl_61586__eat_1306); 
          _ivesli_122807 = _add_SxS_( -8, _ivesli_122806); 
          _pinl_88461__flat_37__SSA2_2 = _idx_sel_( _ivesli_122807, _pinl_61692_res__SSA4_8); 
        } : _pinl_88461__flat_37__SSA2_2 ; 
        /* Partn */
        ([ 12 ] <= _pinl_61583_iv__SSA0_1=[_pinl_61586__eat_1306] (IDXS:_wlidx_122651__pinl_61584_res__SSA0_1) < [ 16 ] genwidth [ 4 ])
        { 
          _ivesli_122811 = _idxs2offset_( [ 4 ], _pinl_61586__eat_1306); 
          _ivesli_122812 = _add_SxS_( -12, _ivesli_122811); 
          _pinl_61696__flat_724__SSA2_2 = _idx_sel_( _ivesli_122812, _pinl_64938__flat_546); 
        } : _pinl_61696__flat_724__SSA2_2 ; 
        /* Partn */
        ([ 4 ] <= _pinl_61583_iv__SSA0_1=[_pinl_61586__eat_1306] (IDXS:_wlidx_122651__pinl_61584_res__SSA0_1) < [ 8 ] genwidth [ 4 ])
        { 
        } : _pinl_81286_BS0_0 ; 
         } :
      /* ERC (_pinl_64010_res__SSA0_1, _pinl_66415_res__SSA0_1, _pinl_69073_res__SSA0_1, _pinl_71617_res__SSA0_1, _pinl_80461_res__SSA0_1, _pinl_82798_res__SSA0_1) */
      genarray( [ 16 ], IDX(_wlidx_122651__pinl_61584_res__SSA0_1)); 
  _pinl_59970_A_107 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_61397_iv=[_pinl_61402__eat_1239] (IDXS:_wlidx_122652__pinl_59970_A_107) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122802 = _idxs2offset_( [ 4 ], _pinl_61402__eat_1239); 
          _pinl_61439__flat_71 = _idx_sel_( _ivesli_122802, _pinl_81288_BVL_0); 
          _pinl_61412_z__SSA1_4 = [ _pinl_61439__flat_71, false, _pinl_61439__flat_71, false ]; 
        } : _pinl_61412_z__SSA1_4 ; 
         } :
      /* ERC (_pinl_62518_A_107, _pinl_64943_A_106, _pinl_67340_A_106, _pinl_70006_A_106, _pinl_72553_A_107, _pinl_75862_A_107, _pinl_78504_A_102, _pinl_81329_A_102) */
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122652__pinl_59970_A_107)); 
  _pinl_114992_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_114991_iv=[_pinl_114994__eat_1295, _pinl_114993__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_114995__ea_68_res = _accu_( _pinl_114991_iv); 
          _ivesli_122801 = _idxs2offset_( [ 4, 4 ], _pinl_114994__eat_1295, _pinl_114993__eat_1294); 
          _pinl_114997__flat_71__SSA2_1 = _idx_sel_( _ivesli_122801, _pinl_59970_A_107); 
          _dl_114381__SSA5_1 = _mul_SxS_( _pinl_114994__eat_1295, 4); 
          _dl_114382__SSA5_1 = _add_SxS_( _dl_114381__SSA5_1, _pinl_114993__eat_1294); 
          _pinl_61460_offset__SSA0_1__SSA5_1 = _aplmod_SxS_( _dl_114382__SSA5_1, 16); 
          _pinl_114167__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_61460_offset__SSA0_1__SSA5_1, 16); 
          _pinl_61483__flat_71__SSA5_1 = _idx_sel_( _pinl_114167__flat_405__SSA5_1, _pinl_61584_res__SSA0_1); 
          _pinl_114999__flat_92__SSA2_1 = _eq_SxS_( _pinl_114997__flat_71__SSA2_1, _pinl_61483__flat_71__SSA5_1); 
          _pinl_114996__flat_98 = _and_SxS_( _pinl_114995__ea_68_res, _pinl_114999__flat_92__SSA2_1); 
        } : _pinl_114996__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_115002_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_115001_iv=[_pinl_115005__eat_1279, _pinl_115004__eat_1278, _pinl_115003__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_115006__ea_60_res = _accu_( _pinl_115001_iv); 
          _pinl_111604_offset__SSA0_1__SSA5_2 = UTDScalarB::_dup_116765_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115001_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_62309_offset__SSA0_1__SSA5_2 = _aplmod_SxS_( _pinl_111604_offset__SSA0_1__SSA5_2, 3); 
          _pinl_114098__flat_405__SSA5_2 = _aplmod_SxS_( _pinl_62309_offset__SSA0_1__SSA5_2, 3); 
          _pinl_62337__flat_71__SSA5_2 = _idx_sel_( _pinl_114098__flat_405__SSA5_2, _pinl_81290__flat_431); 
          _pinl_111604_offset__SSA0_1__SSA5_3 = UTDScalarB::_dup_116766_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115001_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_62309_offset__SSA0_1__SSA5_3 = _aplmod_SxS_( _pinl_111604_offset__SSA0_1__SSA5_3, 3); 
          _pinl_114098__flat_405__SSA5_3 = _aplmod_SxS_( _pinl_62309_offset__SSA0_1__SSA5_3, 3); 
          _pinl_62337__flat_71__SSA5_3 = _idx_sel_( _pinl_114098__flat_405__SSA5_3, _pinl_81290__flat_431); 
          _pinl_115010__flat_92__SSA2_1 = _eq_SxS_( _pinl_62337__flat_71__SSA5_2, _pinl_62337__flat_71__SSA5_3); 
          _pinl_115007__flat_98 = _and_SxS_( _pinl_115006__ea_60_res, _pinl_115010__flat_92__SSA2_1); 
        } : _pinl_115007__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_115024_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_115023_iv=[_pinl_115027__eat_1279, _pinl_115026__eat_1278, _pinl_115025__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_115028__ea_60_res = _accu_( _pinl_115023_iv); 
          _pinl_111604_offset__SSA0_1__SSA5_5 = UTDScalarB::_dup_116784_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115023_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_62309_offset__SSA0_1__SSA5_5 = _aplmod_SxS_( _pinl_111604_offset__SSA0_1__SSA5_5, 3); 
          _pinl_114098__flat_405__SSA5_5 = _aplmod_SxS_( _pinl_62309_offset__SSA0_1__SSA5_5, 3); 
          _pinl_62337__flat_71__SSA5_5 = _idx_sel_( _pinl_114098__flat_405__SSA5_5, _pinl_81290__flat_431); 
          _pinl_60975__flat_100__SSA2_1__SSA5_1 = _not_S_( _pinl_62337__flat_71__SSA5_5); 
          _pinl_60919__flat_100__SSA5_1 = _not_S_( _pinl_60975__flat_100__SSA2_1__SSA5_1); 
          _pinl_60918__flat_98__SSA5_1 = _and_SxS_( _pinl_60919__flat_100__SSA5_1, _pinl_62337__flat_71__SSA5_5); 
          _pinl_111604_offset__SSA0_1__SSA5_6 = UTDScalarB::_dup_116785_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115023_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_62309_offset__SSA0_1__SSA5_6 = _aplmod_SxS_( _pinl_111604_offset__SSA0_1__SSA5_6, 3); 
          _pinl_114098__flat_405__SSA5_6 = _aplmod_SxS_( _pinl_62309_offset__SSA0_1__SSA5_6, 3); 
          _pinl_62337__flat_71__SSA5_6 = _idx_sel_( _pinl_114098__flat_405__SSA5_6, _pinl_81290__flat_431); 
          _pinl_115032__flat_92__SSA2_1 = _eq_SxS_( _pinl_60918__flat_98__SSA5_1, _pinl_62337__flat_71__SSA5_6); 
          _pinl_115029__flat_98 = _and_SxS_( _pinl_115028__ea_60_res, _pinl_115032__flat_92__SSA2_1); 
        } : _pinl_115029__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_60613_res__SSA4_8 = [ true, true, true, true, _pinl_114992_res, _pinl_115002_res, true, _pinl_115024_res, false ]; 
  _pinl_59044_res__SSA0_1 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_59043_iv__SSA0_1=[_pinl_59046__eat_1306] (IDXS:_wlidx_122653__pinl_59044_res__SSA0_1) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122790 = _idxs2offset_( [ 4 ], _pinl_59046__eat_1306); 
          _pinl_80454__flat_715__SSA5_3 = _idx_sel_( _ivesli_122790, _pinl_81289_BVR_0); 
        } : _pinl_80454__flat_715__SSA5_3 ; 
        /* Partn */
        ([ 8 ] <= _pinl_59043_iv__SSA0_1=[_pinl_59046__eat_1306] (IDXS:_wlidx_122653__pinl_59044_res__SSA0_1) < [ 12 ] genwidth [ 4 ])
        { 
          _ivesli_122778 = _idxs2offset_( [ 8 ], _pinl_59046__eat_1306); 
          _ivesli_122779 = _add_SxS_( -8, _ivesli_122778); 
          _pinl_88461__flat_37__SSA2_4 = _idx_sel_( _ivesli_122779, _pinl_61692_res__SSA4_8); 
        } : _pinl_88461__flat_37__SSA2_4 ; 
        /* Partn */
        ([ 12 ] <= _pinl_59043_iv__SSA0_1=[_pinl_59046__eat_1306] (IDXS:_wlidx_122653__pinl_59044_res__SSA0_1) < [ 16 ] genwidth [ 4 ])
        { 
          _ivesli_122783 = _idxs2offset_( [ 4 ], _pinl_59046__eat_1306); 
          _ivesli_122784 = _add_SxS_( -12, _ivesli_122783); 
          _pinl_61696__flat_724__SSA2_4 = _idx_sel_( _ivesli_122784, _pinl_64938__flat_546); 
        } : _pinl_61696__flat_724__SSA2_4 ; 
        /* Partn */
        ([ 4 ] <= _pinl_59043_iv__SSA0_1=[_pinl_59046__eat_1306] (IDXS:_wlidx_122653__pinl_59044_res__SSA0_1) < [ 8 ] genwidth [ 4 ])
        { 
          _ivesli_122788 = _idxs2offset_( [ 4 ], _pinl_59046__eat_1306); 
          _ivesli_122789 = _add_SxS_( -4, _ivesli_122788); 
          _pinl_80511__flat_715__SSA5_3 = _idx_sel_( _ivesli_122789, _pinl_81289_BVR_0); 
        } : _pinl_80511__flat_715__SSA5_3 ; 
         } :
      /* ERC (_pinl_61584_res__SSA0_1, _pinl_64010_res__SSA0_1, _pinl_66415_res__SSA0_1, _pinl_69073_res__SSA0_1, _pinl_71617_res__SSA0_1, _pinl_80461_res__SSA0_1, _pinl_82798_res__SSA0_1) */
      genarray( [ 16 ], IDX(_wlidx_122653__pinl_59044_res__SSA0_1)); 
  _pinl_57572_A_106 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_58859_iv=[_pinl_58864__eat_1205] (IDXS:_wlidx_122654__pinl_57572_A_106) < [ 4 ] genwidth [ 4 ])
        { 
          _ivesli_122774 = _idxs2offset_( [ 4 ], _pinl_58864__eat_1205); 
          _pinl_58899__flat_71 = _idx_sel_( _ivesli_122774, _pinl_81288_BVL_0); 
          _pinl_58877__flat_93 = _neq_SxS_( _pinl_58899__flat_71, false); 
          _pinl_58877__flat_93__SSA1_2 = _neq_SxS_( _pinl_58899__flat_71, true); 
          _pinl_58874_z__SSA1_4 = [ _pinl_58877__flat_93, _pinl_58877__flat_93__SSA1_2, _pinl_58877__flat_93, _pinl_58877__flat_93__SSA1_2 ]; 
        } : _pinl_58874_z__SSA1_4 ; 
         } :
      /* ERC (_pinl_59970_A_107, _pinl_62518_A_107, _pinl_64943_A_106, _pinl_67340_A_106, _pinl_70006_A_106, _pinl_72553_A_107, _pinl_75862_A_107, _pinl_78504_A_102, _pinl_81329_A_102) */
      genarray( [ 4 ], _pinl_82609_cell__SSA1_1, IDX(_wlidx_122654__pinl_57572_A_106)); 
  _pinl_115035_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0 ] <= _pinl_115034_iv=[_pinl_115037__eat_1295, _pinl_115036__eat_1294] < [ 4, 4 ] genwidth [ 4, 4 ])
        { 
          _pinl_115038__ea_68_res = _accu_( _pinl_115034_iv); 
          _ivesli_122773 = _idxs2offset_( [ 4, 4 ], _pinl_115037__eat_1295, _pinl_115036__eat_1294); 
          _pinl_115040__flat_71__SSA2_1 = _idx_sel_( _ivesli_122773, _pinl_57572_A_106); 
          _dl_114344__SSA5_1 = _mul_SxS_( _pinl_115037__eat_1295, 4); 
          _dl_114345__SSA5_1 = _add_SxS_( _dl_114344__SSA5_1, _pinl_115036__eat_1294); 
          _pinl_58920_offset__SSA0_1__SSA5_1 = _aplmod_SxS_( _dl_114345__SSA5_1, 16); 
          _pinl_114252__flat_405__SSA5_1 = _aplmod_SxS_( _pinl_58920_offset__SSA0_1__SSA5_1, 16); 
          _pinl_58943__flat_71__SSA5_1 = _idx_sel_( _pinl_114252__flat_405__SSA5_1, _pinl_59044_res__SSA0_1); 
          _pinl_115042__flat_92__SSA2_1 = _eq_SxS_( _pinl_115040__flat_71__SSA2_1, _pinl_58943__flat_71__SSA5_1); 
          _pinl_115039__flat_98 = _and_SxS_( _pinl_115038__ea_68_res, _pinl_115042__flat_92__SSA2_1); 
        } : _pinl_115039__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_115045_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_115044_iv=[_pinl_115048__eat_1279, _pinl_115047__eat_1278, _pinl_115046__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_115049__ea_60_res = _accu_( _pinl_115044_iv); 
          _pinl_111676_offset__SSA0_1__SSA5_2 = UTDScalarB::_dup_116870_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115044_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_59761_offset__SSA0_1__SSA5_2 = _aplmod_SxS_( _pinl_111676_offset__SSA0_1__SSA5_2, 3); 
          _pinl_114183__flat_405__SSA5_2 = _aplmod_SxS_( _pinl_59761_offset__SSA0_1__SSA5_2, 3); 
          _pinl_59789__flat_71__SSA5_2 = _idx_sel_( _pinl_114183__flat_405__SSA5_2, _pinl_81290__flat_431); 
          _pinl_58773__flat_93__SSA5_1 = _neq_SxS_( _pinl_59789__flat_71__SSA5_2, false); 
          _pinl_111676_offset__SSA0_1__SSA5_3 = UTDScalarB::_dup_116871_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115044_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_59761_offset__SSA0_1__SSA5_3 = _aplmod_SxS_( _pinl_111676_offset__SSA0_1__SSA5_3, 3); 
          _pinl_114183__flat_405__SSA5_3 = _aplmod_SxS_( _pinl_59761_offset__SSA0_1__SSA5_3, 3); 
          _pinl_59789__flat_71__SSA5_3 = _idx_sel_( _pinl_114183__flat_405__SSA5_3, _pinl_81290__flat_431); 
          _pinl_115053__flat_92__SSA2_1 = _eq_SxS_( _pinl_58773__flat_93__SSA5_1, _pinl_59789__flat_71__SSA5_3); 
          _pinl_115050__flat_98 = _and_SxS_( _pinl_115049__ea_60_res, _pinl_115053__flat_92__SSA2_1); 
        } : _pinl_115050__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_115056_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_115055_iv=[_pinl_115059__eat_1279, _pinl_115058__eat_1278, _pinl_115057__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_115060__ea_60_res = _accu_( _pinl_115055_iv); 
          _pinl_111676_offset__SSA0_1__SSA5_6 = UTDScalarB::_dup_116887_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115055_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_59761_offset__SSA0_1__SSA5_6 = _aplmod_SxS_( _pinl_111676_offset__SSA0_1__SSA5_6, 3); 
          _pinl_114183__flat_405__SSA5_6 = _aplmod_SxS_( _pinl_59761_offset__SSA0_1__SSA5_6, 3); 
          _pinl_59789__flat_71__SSA5_6 = _idx_sel_( _pinl_114183__flat_405__SSA5_6, _pinl_81290__flat_431); 
          _pinl_58624__flat_93__SSA5_1 = _neq_SxS_( _pinl_59789__flat_71__SSA5_6, true); 
          _pinl_111676_offset__SSA0_1__SSA5_7 = UTDScalarB::_dup_116888_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115055_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_59761_offset__SSA0_1__SSA5_7 = _aplmod_SxS_( _pinl_111676_offset__SSA0_1__SSA5_7, 3); 
          _pinl_114183__flat_405__SSA5_7 = _aplmod_SxS_( _pinl_59761_offset__SSA0_1__SSA5_7, 3); 
          _pinl_59789__flat_71__SSA5_7 = _idx_sel_( _pinl_114183__flat_405__SSA5_7, _pinl_81290__flat_431); 
          _pinl_58667__flat_100__SSA5_1 = _not_S_( _pinl_59789__flat_71__SSA5_7); 
          _pinl_115064__flat_92__SSA2_1 = _eq_SxS_( _pinl_58624__flat_93__SSA5_1, _pinl_58667__flat_100__SSA5_1); 
          _pinl_115061__flat_98 = _and_SxS_( _pinl_115060__ea_60_res, _pinl_115064__flat_92__SSA2_1); 
        } : _pinl_115061__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_115067_res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0, 0, 0 ] <= _pinl_115066_iv=[_pinl_115070__eat_1279, _pinl_115069__eat_1278, _pinl_115068__eat_1277] < [ 2, 3, 4 ] genwidth [ 2, 3, 4 ])
        { 
          _pinl_115071__ea_60_res = _accu_( _pinl_115066_iv); 
          _pinl_111676_offset__SSA0_1__SSA5_10 = UTDScalarB::_dup_116906_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115066_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_59761_offset__SSA0_1__SSA5_10 = _aplmod_SxS_( _pinl_111676_offset__SSA0_1__SSA5_10, 3); 
          _pinl_114183__flat_405__SSA5_10 = _aplmod_SxS_( _pinl_59761_offset__SSA0_1__SSA5_10, 3); 
          _pinl_59789__flat_71__SSA5_10 = _idx_sel_( _pinl_114183__flat_405__SSA5_10, _pinl_81290__flat_431); 
          _pinl_111676_offset__SSA0_1__SSA5_11 = UTDScalarB::_dup_116907_V2O__Loop_2( _dlirmov_123783_shp, _pinl_115066_iv, _isaa_117918__rso_4_TheWorld, _pinl_83594_wt, _pinl_81293__flat_428) ; 
          _pinl_59761_offset__SSA0_1__SSA5_11 = _aplmod_SxS_( _pinl_111676_offset__SSA0_1__SSA5_11, 3); 
          _pinl_114183__flat_405__SSA5_11 = _aplmod_SxS_( _pinl_59761_offset__SSA0_1__SSA5_11, 3); 
          _pinl_59789__flat_71__SSA5_11 = _idx_sel_( _pinl_114183__flat_405__SSA5_11, _pinl_81290__flat_431); 
          _pinl_58667__flat_100__SSA5_3 = _not_S_( _pinl_59789__flat_71__SSA5_11); 
          _pinl_58385__flat_93__SSA5_1 = _neq_SxS_( _pinl_58667__flat_100__SSA5_3, _pinl_59789__flat_71__SSA5_10); 
          _pinl_115075__flat_92__SSA2_1 = _eq_SxS_( _pinl_58385__flat_93__SSA5_1, true); 
          _pinl_115072__flat_98 = _and_SxS_( _pinl_115071__ea_60_res, _pinl_115075__flat_92__SSA2_1); 
        } : _pinl_115072__flat_98 ; 
         } :
      fold( ScalarArith::&(), _pinl_81287_BS1_0); 
  _pinl_58203_res__SSA4_8 = [ true, true, true, true, _pinl_115035_res, _pinl_115045_res, _pinl_115056_res, _pinl_115067_res, false ]; 
  _pinl_57482_res__SSA0_1 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 2 (total num refs) **/
 {
        /* Partn */
        ([ 112 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 120 ] genwidth [ 8 ])
        { 
          _ivesli_122721 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _ivesli_122722 = _add_SxS_( -112, _ivesli_122721); 
          _pinl_88664__flat_37__SSA2_1__SSA5_6 = _idx_sel_( _ivesli_122722, _pinl_60613_res__SSA4_8); 
        } : _pinl_88664__flat_37__SSA2_1__SSA5_6 ; 
        /* Partn */
        ([ 120 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 121 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 121 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 122 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 122 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 123 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 123 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 124 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 124 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 125 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 125 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 126 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 98 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 106 ] genwidth [ 8 ])
        { 
          _ivesli_122726 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _ivesli_122727 = _add_SxS_( -98, _ivesli_122726); 
          _pinl_88171__flat_37__SSA2_1__SSA5_7 = _idx_sel_( _ivesli_122727, _pinl_63159_res__SSA4_8); 
        } : _pinl_88171__flat_37__SSA2_1__SSA5_7 ; 
        /* Partn */
        ([ 106 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 107 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 107 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 108 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 108 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 109 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 109 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 110 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 110 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 111 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 111 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 112 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 84 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 92 ] genwidth [ 8 ])
        { 
          _ivesli_122731 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _ivesli_122732 = _add_SxS_( -84, _ivesli_122731); 
          _pinl_87678__flat_37__SSA2_1__SSA5_8 = _idx_sel_( _ivesli_122732, _pinl_65574_res__SSA4_8); 
        } : _pinl_87678__flat_37__SSA2_1__SSA5_8 ; 
        /* Partn */
        ([ 92 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 93 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 93 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 94 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 94 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 95 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 95 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 96 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 96 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 97 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 97 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 98 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 70 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 78 ] genwidth [ 8 ])
        { 
          _ivesli_122736 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _ivesli_122737 = _add_SxS_( -70, _ivesli_122736); 
          _pinl_87185__flat_37__SSA2_1__SSA5_9 = _idx_sel_( _ivesli_122737, _pinl_68102_res__SSA4_8); 
        } : _pinl_87185__flat_37__SSA2_1__SSA5_9 ; 
        /* Partn */
        ([ 78 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 79 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 79 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 80 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 80 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 81 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 81 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 82 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 82 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 83 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 83 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 84 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 56 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 64 ] genwidth [ 8 ])
        { 
          _ivesli_122741 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _ivesli_122742 = _add_SxS_( -56, _ivesli_122741); 
          _pinl_86692__flat_37__SSA2_1__SSA5_10 = _idx_sel_( _ivesli_122742, _pinl_70768_res__SSA4_8); 
        } : _pinl_86692__flat_37__SSA2_1__SSA5_10 ; 
        /* Partn */
        ([ 64 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 65 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 65 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 66 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 66 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 67 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 67 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 68 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 68 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 69 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 69 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 70 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 42 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 50 ] genwidth [ 8 ])
        { 
          _ivesli_122746 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _ivesli_122747 = _add_SxS_( -42, _ivesli_122746); 
          _pinl_86199__flat_37__SSA2_1__SSA5_11 = _idx_sel_( _ivesli_122747, _pinl_73664_res__SSA4_8); 
        } : _pinl_86199__flat_37__SSA2_1__SSA5_11 ; 
        /* Partn */
        ([ 50 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 51 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 51 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 52 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 52 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 53 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 53 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 54 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 54 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 55 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 55 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 56 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 28 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 36 ] genwidth [ 8 ])
        { 
          _ivesli_122751 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _ivesli_122752 = _add_SxS_( -28, _ivesli_122751); 
          _pinl_85706__flat_37__SSA2_1__SSA5_12 = _idx_sel_( _ivesli_122752, _pinl_76592_res__SSA4_8); 
        } : _pinl_85706__flat_37__SSA2_1__SSA5_12 ; 
        /* Partn */
        ([ 36 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 37 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 37 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 38 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 38 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 39 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 39 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 40 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 40 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 41 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 41 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 42 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 14 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 22 ] genwidth [ 8 ])
        { 
          _ivesli_122756 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _ivesli_122757 = _add_SxS_( -14, _ivesli_122756); 
          _pinl_85213__flat_37__SSA2_1__SSA5_13 = _idx_sel_( _ivesli_122757, _pinl_79382_res__SSA4_8); 
        } : _pinl_85213__flat_37__SSA2_1__SSA5_13 ; 
        /* Partn */
        ([ 22 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 23 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 23 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 24 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 24 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 25 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 25 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 26 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 26 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 27 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 27 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 28 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 0 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 8 ] genwidth [ 8 ])
        { 
          _ivesli_122758 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _pinl_84749__flat_37__SSA2_1__SSA5_14 = _idx_sel_( _ivesli_122758, _pinl_81959_res__SSA4_8); 
        } : _pinl_84749__flat_37__SSA2_1__SSA5_14 ; 
        /* Partn */
        ([ 8 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 9 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 9 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 10 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 10 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 11 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 11 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 12 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 12 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 13 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 13 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 14 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 126 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 134 ] genwidth [ 8 ])
        { 
          _ivesli_122716 = _idxs2offset_( [ 9 ], _pinl_57484__eat_1165); 
          _ivesli_122717 = _add_SxS_( -126, _ivesli_122716); 
          _pinl_89157__flat_37__SSA2_1__SSA5_5 = _idx_sel_( _ivesli_122717, _pinl_58203_res__SSA4_8); 
        } : _pinl_89157__flat_37__SSA2_1__SSA5_5 ; 
        /* Partn */
        ([ 134 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 135 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 135 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 136 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 136 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 137 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 137 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 138 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 138 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 139 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
        /* Partn */
        ([ 139 ] <= _pinl_57481_iv__SSA0_1=[_pinl_57484__eat_1165] (IDXS:_wlidx_122655__pinl_57482_res__SSA0_1) < [ 140 ] genwidth [ 1 ])
        { 
        } : _pinl_81287_BS1_0 ; 
         } :
      genarray( [ 140 ], IDX(_wlidx_122655__pinl_57482_res__SSA0_1)); 
  _pinl_57400__rso_1143_TheTerminal__SSA0_1, _pinl_57401__rso_1142_stdout__SSA0_1 = UTDScalarB:StdIO::show( _rso_6_TheTerminal__SSA0_1, _rso_5_stdout__SSA0_1, _pinl_57482_res__SSA0_1) ; 
  _pinl_57416_z, _pinl_57418__ea_48__flat_281 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _pinl_57414_iv=[_pinl_57417__eat_1163] < [ 140 ] genwidth [ 140 ])
        { 
          _pinl_57419__ea_49_z = _accu_( _pinl_57414_iv); 
          _ivesli_122712 = _idxs2offset_( [ 140 ], _pinl_57417__eat_1163); 
          _pinl_57440__flat_71 = _idx_sel_( _ivesli_122712, _pinl_57482_res__SSA0_1); 
          _pinl_57429__flat_98 = _and_SxS_( _pinl_57419__ea_49_z, _pinl_57440__flat_71); 
          _pinl_89339__flat_328 = _eq_SxS_( _pinl_57429__flat_98, false); 
        } : _pinl_57429__flat_98, _pinl_89339__flat_328 ; 
         } :
      fold( UTDScalarB::andBBB(), _pinl_81287_BS1_0),
      break(); 
  _pinl_57407__flat_127 = _toi_S_( _pinl_57416_z); 
  _pinl_57405__flat_13 = _sub_SxS_( 1, _pinl_57407__flat_127); 
  _rso_6_TheTerminal__SSA0_2, _rso_5_stdout__SSA0_2 = StdIO::show( _pinl_57400__rso_1143_TheTerminal__SSA0_1, _pinl_57401__rso_1142_stdout__SSA0_1, _pinl_57405__flat_13) ; 
  _rso_6_TheTerminal__SSA0_3, _rso_5_stdout__SSA0_3 = StdIO::show( _rso_6_TheTerminal__SSA0_2, _rso_5_stdout__SSA0_2, _pinl_57405__flat_13) ; 
  return( _rso_6_TheTerminal__SSA0_3, _rso_5_stdout__SSA0_3, _rso_4_TheWorld__SSA0_1, _isaa_117918__rso_4_TheWorld); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_117639_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_117639_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_117639_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_117639_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_117631_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_117631_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_117631_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_117631_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116907_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116907_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116907_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116907_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116906_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116906_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116906_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116906_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116888_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116888_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116888_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116888_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116887_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116887_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116887_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116887_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116871_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116871_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116871_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116871_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116870_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116870_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116870_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116870_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116785_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116785_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116785_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116785_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116784_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116784_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116784_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116784_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116766_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116766_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116766_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116766_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116765_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116765_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116765_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116765_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116619_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116619_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116619_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116619_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116618_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116618_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116618_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116618_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116600_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116600_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116600_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116600_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116599_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116599_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116599_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116599_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116587_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116587_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116587_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116587_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116586_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116586_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116586_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116586_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116518_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116518_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116518_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116518_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116517_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116517_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116517_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116517_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116516_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116516_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116516_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116516_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116496_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116496_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116496_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116496_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116495_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116495_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116495_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116495_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116442_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116442_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116442_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116442_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116441_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116441_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116441_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116441_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116440_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116440_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116440_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116440_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116426_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116426_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116426_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116426_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116425_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116425_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116425_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116425_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116373_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116373_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116373_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116373_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116372_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116372_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116372_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116372_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116349_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116349_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116349_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116349_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116348_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116348_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116348_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116348_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116311_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116311_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116311_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116311_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116310_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116310_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116310_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116310_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116296_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116296_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116296_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116296_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116295_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116295_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116295_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116295_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116256_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116256_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116256_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116256_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116238_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116238_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116238_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116238_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * Loop function with Loop Count 3:
 * UTDScalarB::_dup_116237_V2O__Loop_2(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_116237_V2O__Loop_2( int[3]{2,3...} shp { ,NN } , int[3] iv { ,NN } , int offset { ,NN } , int wt { ,NN } , int i { ,NN } )
/*
 *  _dup_116237_V2O__Loop_2 ::  ---
 */
{ 
  int _pinl_1515__flat_26 { , NN } ; 
  int _pinl_1516__flat_14 { , NN } ; 
  int _pinl_1517__flat_12 { , NN } ; 
  int _pinl_1528__flat_26 { , NN } ; 
  int _pinl_1529__flat_14 { , NN } ; 
  int _pinl_1531__flat_48 { , NN } ; 
  bool _pinl_1532__flat_67 { , NN } ; 
  int offset__SSA0_3 { , NN } ; 
  int offset__SSA0_2 { , NN } ; 

  _pinl_1515__flat_26 = _idx_sel_( i, iv); 
  _pinl_1516__flat_14 = _mul_SxS_( _pinl_1515__flat_26, wt); 
  _pinl_1517__flat_12 = _add_SxS_( _pinl_1516__flat_14, offset); 
  _pinl_1528__flat_26 = _idx_sel_( i, shp); 
  _pinl_1529__flat_14 = _mul_SxS_( _pinl_1528__flat_26, wt); 
  _pinl_1531__flat_48 = _add_SxS_( -1, i); 
  _pinl_1532__flat_67 = _ge_SxS_( _pinl_1531__flat_48, 0); 
  if (_pinl_1532__flat_67) 
  { 
    offset__SSA0_2 = UTDScalarB::_dup_116237_V2O__Loop_2( shp, iv, _pinl_1517__flat_12, _pinl_1529__flat_14, _pinl_1531__flat_48) ; 
  }
  else
  { 
  }
  offset__SSA0_3 = ( _pinl_1532__flat_67 ? offset__SSA0_2 : _pinl_1517__flat_12 ); 
  return( offset__SSA0_3); 
}



/****************************************************************************
 * _MAIN:_INIT::init(...) [ body ]
 ****************************************************************************/
hidden *, hidden *, hidden * _MAIN:_INIT::init( hidden *_rso_9_TheWorld { ,NN } , hidden *_rso_8_TheTerminal { ,NN } , hidden *_rso_7_stdout { ,NN } )
/*
 *  init ::  ---
 */
{ 
  hidden _rso_7_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_8_TheTerminal__SSA0_2 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_8_TheTerminal__SSA0_1 { , NN } ;  /* declared: Terminal::Terminal */
  hidden _rso_9_TheWorld__SSA0_2 { , NN } ;  /* declared: World::World */
  hidden _rso_9_TheWorld__SSA0_1 { , NN } ;  /* declared: World::World */

  _rso_9_TheWorld__SSA0_1 = World:_INIT::init_TheWorld( _rso_9_TheWorld) ; 
  _rso_9_TheWorld__SSA0_2, _rso_8_TheTerminal__SSA0_1 = Terminal:_INIT::init_TheTerminal( _rso_9_TheWorld__SSA0_1, _rso_8_TheTerminal) ; 
  _rso_8_TheTerminal__SSA0_2, _rso_7_stdout__SSA0_1 = TermFile:_INIT::init_stdout( _rso_8_TheTerminal__SSA0_1, _rso_7_stdout) ; 
  return( _rso_9_TheWorld__SSA0_2, _rso_8_TheTerminal__SSA0_2, _rso_7_stdout__SSA0_1); 
}



/****************************************************************************
 * ScalarIO::show(...) [ body ]
 ****************************************************************************/
inline
hidden *, hidden * ScalarIO::show( hidden *_rso_981_TheTerminal { ,NN } , hidden *_rso_980_stdout { ,NN } , int n { ,NN } )
/*
 *  show ::  ---
 */
{ 
  hidden _rso_980_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_981_TheTerminal__SSA0_1 { , NN } ;  /* declared: Terminal::Terminal */
  enclosed(String::string) _flat_222 { , NN } ; 
  char[4]{%,d...} _flat_223 { , NN } ; 
  int{3} _flat_228 { , NN } ; 

  _flat_228 = 3; 
  _flat_223 = [ '%', 'd', '\n', '\0' ]; 
  _flat_222 = String::to_string( _flat_223, _flat_228) ; 
  _rso_981_TheTerminal__SSA0_1, _rso_980_stdout__SSA0_1 = TermFile::printf( _rso_981_TheTerminal, _rso_980_stdout, _flat_222, n) ; 
  return( _rso_981_TheTerminal__SSA0_1, _rso_980_stdout__SSA0_1); 
}



/****************************************************************************
 * StdIO::show(...) [ body ]
 ****************************************************************************/
inline
hidden *, hidden * StdIO::show( hidden *_rso_338_TheTerminal { ,NN } , hidden *_rso_337_stdout { ,NN } , int n { ,NN } )
/*
 *  show ::  ---
 */
{ 
  hidden _rso_337_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  hidden _rso_338_TheTerminal__SSA0_1 { , NN } ;  /* declared: Terminal::Terminal */

  _rso_338_TheTerminal__SSA0_1, _rso_337_stdout__SSA0_1 = ScalarIO::show( _rso_338_TheTerminal, _rso_337_stdout, n) ; 
  return( _rso_338_TheTerminal__SSA0_1, _rso_337_stdout__SSA0_1); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulonglong[*] sacprelude_p::sel( int[.] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123045 { , NN } ; 
  int _wlidx_122656_res { , NN } ; 
  int[1] _isaa_118494_idx { , NN } ; 
  int[.] _isaa_118491_array { , NN } ; 
  ulonglong[*] res { , NN } ; 
  ulonglong _flat_127 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ulonglong{0} _flat_124 { , NN } ; 
  int[.] _flat_125 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_119 { , NN } ; 
  int{0} _flat_121 { , NN } ; 

  _isaa_118491_array = _shape_A_( array); 
  _isaa_118494_idx = _shape_A_( idx); 
  _flat_121 = 0; 
  _flat_119 = _idx_sel_( _flat_121, _isaa_118494_idx); 
  new_shape = _drop_SxV_( _flat_119, _isaa_118491_array); 
  _flat_125 = _mul_SxV_( 0, new_shape); 
  _flat_124 = 0ULL; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_125 <= iv (IDXS:_wlidx_122656_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123045 = _vect2offset_( _isaa_118491_array, new_idx); 
          _flat_127 = _idx_sel_( _ivesli_123045, array); 
        } : _flat_127 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122656_res) ):
        { 
        } : _flat_124 ; 
         } :
      genarray( new_shape, _flat_124, IDX(_wlidx_122656_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulong[*] sacprelude_p::sel( int[.] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123046 { , NN } ; 
  int _wlidx_122657_res { , NN } ; 
  int[1] _isaa_118526_idx { , NN } ; 
  int[.] _isaa_118523_array { , NN } ; 
  ulong[*] res { , NN } ; 
  ulong _flat_118 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ulong{0} _flat_115 { , NN } ; 
  int[.] _flat_116 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_110 { , NN } ; 
  int{0} _flat_112 { , NN } ; 

  _isaa_118523_array = _shape_A_( array); 
  _isaa_118526_idx = _shape_A_( idx); 
  _flat_112 = 0; 
  _flat_110 = _idx_sel_( _flat_112, _isaa_118526_idx); 
  new_shape = _drop_SxV_( _flat_110, _isaa_118523_array); 
  _flat_116 = _mul_SxV_( 0, new_shape); 
  _flat_115 = 0ul; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_116 <= iv (IDXS:_wlidx_122657_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123046 = _vect2offset_( _isaa_118523_array, new_idx); 
          _flat_118 = _idx_sel_( _ivesli_123046, array); 
        } : _flat_118 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122657_res) ):
        { 
        } : _flat_115 ; 
         } :
      genarray( new_shape, _flat_115, IDX(_wlidx_122657_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
uint[*] sacprelude_p::sel( int[.] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123047 { , NN } ; 
  int _wlidx_122658_res { , NN } ; 
  int[1] _isaa_118558_idx { , NN } ; 
  int[.] _isaa_118555_array { , NN } ; 
  uint[*] res { , NN } ; 
  uint _flat_109 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  uint{0} _flat_106 { , NN } ; 
  int[.] _flat_107 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_101 { , NN } ; 
  int{0} _flat_103 { , NN } ; 

  _isaa_118555_array = _shape_A_( array); 
  _isaa_118558_idx = _shape_A_( idx); 
  _flat_103 = 0; 
  _flat_101 = _idx_sel_( _flat_103, _isaa_118558_idx); 
  new_shape = _drop_SxV_( _flat_101, _isaa_118555_array); 
  _flat_107 = _mul_SxV_( 0, new_shape); 
  _flat_106 = 0ui; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_107 <= iv (IDXS:_wlidx_122658_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123047 = _vect2offset_( _isaa_118555_array, new_idx); 
          _flat_109 = _idx_sel_( _ivesli_123047, array); 
        } : _flat_109 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122658_res) ):
        { 
        } : _flat_106 ; 
         } :
      genarray( new_shape, _flat_106, IDX(_wlidx_122658_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ushort[*] sacprelude_p::sel( int[.] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123048 { , NN } ; 
  int _wlidx_122659_res { , NN } ; 
  int[1] _isaa_118590_idx { , NN } ; 
  int[.] _isaa_118587_array { , NN } ; 
  ushort[*] res { , NN } ; 
  ushort _flat_100 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ushort{0} _flat_97 { , NN } ; 
  int[.] _flat_98 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_92 { , NN } ; 
  int{0} _flat_94 { , NN } ; 

  _isaa_118587_array = _shape_A_( array); 
  _isaa_118590_idx = _shape_A_( idx); 
  _flat_94 = 0; 
  _flat_92 = _idx_sel_( _flat_94, _isaa_118590_idx); 
  new_shape = _drop_SxV_( _flat_92, _isaa_118587_array); 
  _flat_98 = _mul_SxV_( 0, new_shape); 
  _flat_97 = 0us; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_98 <= iv (IDXS:_wlidx_122659_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123048 = _vect2offset_( _isaa_118587_array, new_idx); 
          _flat_100 = _idx_sel_( _ivesli_123048, array); 
        } : _flat_100 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122659_res) ):
        { 
        } : _flat_97 ; 
         } :
      genarray( new_shape, _flat_97, IDX(_wlidx_122659_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ubyte[*] sacprelude_p::sel( int[.] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123049 { , NN } ; 
  int _wlidx_122660_res { , NN } ; 
  int[1] _isaa_118622_idx { , NN } ; 
  int[.] _isaa_118619_array { , NN } ; 
  ubyte[*] res { , NN } ; 
  ubyte _flat_91 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ubyte{} _flat_88 { , NN } ; 
  int[.] _flat_89 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_83 { , NN } ; 
  int{0} _flat_85 { , NN } ; 

  _isaa_118619_array = _shape_A_( array); 
  _isaa_118622_idx = _shape_A_( idx); 
  _flat_85 = 0; 
  _flat_83 = _idx_sel_( _flat_85, _isaa_118622_idx); 
  new_shape = _drop_SxV_( _flat_83, _isaa_118619_array); 
  _flat_89 = _mul_SxV_( 0, new_shape); 
  _flat_88 = 0ub; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_89 <= iv (IDXS:_wlidx_122660_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123049 = _vect2offset_( _isaa_118619_array, new_idx); 
          _flat_91 = _idx_sel_( _ivesli_123049, array); 
        } : _flat_91 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122660_res) ):
        { 
        } : _flat_88 ; 
         } :
      genarray( new_shape, _flat_88, IDX(_wlidx_122660_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
longlong[*] sacprelude_p::sel( int[.] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123050 { , NN } ; 
  int _wlidx_122661_res { , NN } ; 
  int[1] _isaa_118654_idx { , NN } ; 
  int[.] _isaa_118651_array { , NN } ; 
  longlong[*] res { , NN } ; 
  longlong _flat_82 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  longlong{0} _flat_79 { , NN } ; 
  int[.] _flat_80 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_74 { , NN } ; 
  int{0} _flat_76 { , NN } ; 

  _isaa_118651_array = _shape_A_( array); 
  _isaa_118654_idx = _shape_A_( idx); 
  _flat_76 = 0; 
  _flat_74 = _idx_sel_( _flat_76, _isaa_118654_idx); 
  new_shape = _drop_SxV_( _flat_74, _isaa_118651_array); 
  _flat_80 = _mul_SxV_( 0, new_shape); 
  _flat_79 = 0LL; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_80 <= iv (IDXS:_wlidx_122661_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123050 = _vect2offset_( _isaa_118651_array, new_idx); 
          _flat_82 = _idx_sel_( _ivesli_123050, array); 
        } : _flat_82 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122661_res) ):
        { 
        } : _flat_79 ; 
         } :
      genarray( new_shape, _flat_79, IDX(_wlidx_122661_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
long[*] sacprelude_p::sel( int[.] idx { ,NN } , long[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123051 { , NN } ; 
  int _wlidx_122662_res { , NN } ; 
  int[1] _isaa_118686_idx { , NN } ; 
  int[.] _isaa_118683_array { , NN } ; 
  long[*] res { , NN } ; 
  long _flat_73 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  long{0} _flat_70 { , NN } ; 
  int[.] _flat_71 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_65 { , NN } ; 
  int{0} _flat_67 { , NN } ; 

  _isaa_118683_array = _shape_A_( array); 
  _isaa_118686_idx = _shape_A_( idx); 
  _flat_67 = 0; 
  _flat_65 = _idx_sel_( _flat_67, _isaa_118686_idx); 
  new_shape = _drop_SxV_( _flat_65, _isaa_118683_array); 
  _flat_71 = _mul_SxV_( 0, new_shape); 
  _flat_70 = 0l; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_71 <= iv (IDXS:_wlidx_122662_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123051 = _vect2offset_( _isaa_118683_array, new_idx); 
          _flat_73 = _idx_sel_( _ivesli_123051, array); 
        } : _flat_73 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122662_res) ):
        { 
        } : _flat_70 ; 
         } :
      genarray( new_shape, _flat_70, IDX(_wlidx_122662_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
short[*] sacprelude_p::sel( int[.] idx { ,NN } , short[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123052 { , NN } ; 
  int _wlidx_122663_res { , NN } ; 
  int[1] _isaa_118718_idx { , NN } ; 
  int[.] _isaa_118715_array { , NN } ; 
  short[*] res { , NN } ; 
  short _flat_64 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  short{0} _flat_61 { , NN } ; 
  int[.] _flat_62 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_56 { , NN } ; 
  int{0} _flat_58 { , NN } ; 

  _isaa_118715_array = _shape_A_( array); 
  _isaa_118718_idx = _shape_A_( idx); 
  _flat_58 = 0; 
  _flat_56 = _idx_sel_( _flat_58, _isaa_118718_idx); 
  new_shape = _drop_SxV_( _flat_56, _isaa_118715_array); 
  _flat_62 = _mul_SxV_( 0, new_shape); 
  _flat_61 = 0s; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_62 <= iv (IDXS:_wlidx_122663_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123052 = _vect2offset_( _isaa_118715_array, new_idx); 
          _flat_64 = _idx_sel_( _ivesli_123052, array); 
        } : _flat_64 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122663_res) ):
        { 
        } : _flat_61 ; 
         } :
      genarray( new_shape, _flat_61, IDX(_wlidx_122663_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
byte[*] sacprelude_p::sel( int[.] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123053 { , NN } ; 
  int _wlidx_122664_res { , NN } ; 
  int[1] _isaa_118750_idx { , NN } ; 
  int[.] _isaa_118747_array { , NN } ; 
  byte[*] res { , NN } ; 
  byte _flat_55 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  byte{} _flat_52 { , NN } ; 
  int[.] _flat_53 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_47 { , NN } ; 
  int{0} _flat_49 { , NN } ; 

  _isaa_118747_array = _shape_A_( array); 
  _isaa_118750_idx = _shape_A_( idx); 
  _flat_49 = 0; 
  _flat_47 = _idx_sel_( _flat_49, _isaa_118750_idx); 
  new_shape = _drop_SxV_( _flat_47, _isaa_118747_array); 
  _flat_53 = _mul_SxV_( 0, new_shape); 
  _flat_52 = 0b; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_53 <= iv (IDXS:_wlidx_122664_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123053 = _vect2offset_( _isaa_118747_array, new_idx); 
          _flat_55 = _idx_sel_( _ivesli_123053, array); 
        } : _flat_55 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122664_res) ):
        { 
        } : _flat_52 ; 
         } :
      genarray( new_shape, _flat_52, IDX(_wlidx_122664_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
char[*] sacprelude_p::sel( int[.] idx { ,NN } , char[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123054 { , NN } ; 
  int _wlidx_122665_res { , NN } ; 
  int[1] _isaa_118782_idx { , NN } ; 
  int[.] _isaa_118779_array { , NN } ; 
  char[*] res { , NN } ; 
  char _flat_46 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  char{ } _flat_43 { , NN } ; 
  int[.] _flat_44 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_38 { , NN } ; 
  int{0} _flat_40 { , NN } ; 

  _isaa_118779_array = _shape_A_( array); 
  _isaa_118782_idx = _shape_A_( idx); 
  _flat_40 = 0; 
  _flat_38 = _idx_sel_( _flat_40, _isaa_118782_idx); 
  new_shape = _drop_SxV_( _flat_38, _isaa_118779_array); 
  _flat_44 = _mul_SxV_( 0, new_shape); 
  _flat_43 = ' '; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_44 <= iv (IDXS:_wlidx_122665_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123054 = _vect2offset_( _isaa_118779_array, new_idx); 
          _flat_46 = _idx_sel_( _ivesli_123054, array); 
        } : _flat_46 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122665_res) ):
        { 
        } : _flat_43 ; 
         } :
      genarray( new_shape, _flat_43, IDX(_wlidx_122665_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[*] sacprelude_p::sel( int[.] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123055 { , NN } ; 
  int _wlidx_122666_res { , NN } ; 
  int[1] _isaa_118814_idx { , NN } ; 
  int[.] _isaa_118811_array { , NN } ; 
  bool[*] res { , NN } ; 
  bool _flat_37 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  bool{0} _flat_34 { , NN } ; 
  int[.] _flat_35 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_29 { , NN } ; 
  int{0} _flat_31 { , NN } ; 

  _isaa_118811_array = _shape_A_( array); 
  _isaa_118814_idx = _shape_A_( idx); 
  _flat_31 = 0; 
  _flat_29 = _idx_sel_( _flat_31, _isaa_118814_idx); 
  new_shape = _drop_SxV_( _flat_29, _isaa_118811_array); 
  _flat_35 = _mul_SxV_( 0, new_shape); 
  _flat_34 = false; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_35 <= iv (IDXS:_wlidx_122666_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123055 = _vect2offset_( _isaa_118811_array, new_idx); 
          _flat_37 = _idx_sel_( _ivesli_123055, array); 
        } : _flat_37 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122666_res) ):
        { 
        } : _flat_34 ; 
         } :
      genarray( new_shape, _flat_34, IDX(_wlidx_122666_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
double[*] sacprelude_p::sel( int[.] idx { ,NN } , double[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123056 { , NN } ; 
  int _wlidx_122667_res { , NN } ; 
  int[1] _isaa_118846_idx { , NN } ; 
  int[.] _isaa_118843_array { , NN } ; 
  double[*] res { , NN } ; 
  double _flat_28 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  double{0.0...} _flat_25 { , NN } ; 
  int[.] _flat_26 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_20 { , NN } ; 
  int{0} _flat_22 { , NN } ; 

  _isaa_118843_array = _shape_A_( array); 
  _isaa_118846_idx = _shape_A_( idx); 
  _flat_22 = 0; 
  _flat_20 = _idx_sel_( _flat_22, _isaa_118846_idx); 
  new_shape = _drop_SxV_( _flat_20, _isaa_118843_array); 
  _flat_26 = _mul_SxV_( 0, new_shape); 
  _flat_25 = 0.0; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_26 <= iv (IDXS:_wlidx_122667_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123056 = _vect2offset_( _isaa_118843_array, new_idx); 
          _flat_28 = _idx_sel_( _ivesli_123056, array); 
        } : _flat_28 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122667_res) ):
        { 
        } : _flat_25 ; 
         } :
      genarray( new_shape, _flat_25, IDX(_wlidx_122667_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
float[*] sacprelude_p::sel( int[.] idx { ,NN } , float[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123057 { , NN } ; 
  int _wlidx_122668_res { , NN } ; 
  int[1] _isaa_118878_idx { , NN } ; 
  int[.] _isaa_118875_array { , NN } ; 
  float[*] res { , NN } ; 
  float _flat_19 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  float{0.0...} _flat_16 { , NN } ; 
  int[.] _flat_17 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_11 { , NN } ; 
  int{0} _flat_13 { , NN } ; 

  _isaa_118875_array = _shape_A_( array); 
  _isaa_118878_idx = _shape_A_( idx); 
  _flat_13 = 0; 
  _flat_11 = _idx_sel_( _flat_13, _isaa_118878_idx); 
  new_shape = _drop_SxV_( _flat_11, _isaa_118875_array); 
  _flat_17 = _mul_SxV_( 0, new_shape); 
  _flat_16 = 0.0f; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_17 <= iv (IDXS:_wlidx_122668_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123057 = _vect2offset_( _isaa_118875_array, new_idx); 
          _flat_19 = _idx_sel_( _ivesli_123057, array); 
        } : _flat_19 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122668_res) ):
        { 
        } : _flat_16 ; 
         } :
      genarray( new_shape, _flat_16, IDX(_wlidx_122668_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::sel(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[*] sacprelude_p::sel( int[.] idx { ,NN } , int[*] array { ,NN } )
/*
 *  sel ::  ---
 */
{ 
  int _ivesli_123058 { , NN } ; 
  int _wlidx_122669_res { , NN } ; 
  int[1] _isaa_118910_idx { , NN } ; 
  int[.] _isaa_118907_array { , NN } ; 
  int[*] res { , NN } ; 
  int _flat_10 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  int[.] _flat_8 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_2 { , NN } ; 
  int{0} _flat_4 { , NN } ; 

  _isaa_118907_array = _shape_A_( array); 
  _isaa_118910_idx = _shape_A_( idx); 
  _flat_4 = 0; 
  _flat_2 = _idx_sel_( _flat_4, _isaa_118910_idx); 
  new_shape = _drop_SxV_( _flat_2, _isaa_118907_array); 
  _flat_8 = _mul_SxV_( 0, new_shape); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_8 <= iv (IDXS:_wlidx_122669_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123058 = _vect2offset_( _isaa_118907_array, new_idx); 
          _flat_10 = _idx_sel_( _ivesli_123058, array); 
        } : _flat_10 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122669_res) ):
        { 
        } : _flat_4 ; 
         } :
      genarray( new_shape, _flat_4, IDX(_wlidx_122669_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulonglong[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123059 { , NN } ; 
  int _wlidx_122670_res { , NN } ; 
  int[.] _isaa_118939_array { , NN } ; 
  ulonglong[*] res { , NN } ; 
  ulonglong _flat_253 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ulonglong{0} _flat_250 { , NN } ; 
  int[.] _flat_251 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_118939_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_118939_array); 
  _flat_251 = _mul_SxV_( 0, new_shape); 
  _flat_250 = 0ULL; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_251 <= iv (IDXS:_wlidx_122670_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123059 = _vect2offset_( _isaa_118939_array, new_idx); 
          _flat_253 = _idx_sel_( _ivesli_123059, array); 
        } : _flat_253 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122670_res) ):
        { 
        } : _flat_250 ; 
         } :
      genarray( new_shape, _flat_250, IDX(_wlidx_122670_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulonglong[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123060 { , NN } ; 
  int _wlidx_122671_res { , NN } ; 
  int[1] _isaa_118967_idx { , NN } ; 
  int[.] _isaa_118964_array { , NN } ; 
  ulonglong[*] res { , NN } ; 
  ulonglong _flat_253 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ulonglong{0} _flat_250 { , NN } ; 
  int[.] _flat_251 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_245 { , NN } ; 
  int{0} _flat_247 { , NN } ; 

  _isaa_118964_array = _shape_A_( array); 
  _isaa_118967_idx = _shape_A_( idx); 
  _flat_247 = 0; 
  _flat_245 = _idx_sel_( _flat_247, _isaa_118967_idx); 
  new_shape = _drop_SxV_( _flat_245, _isaa_118964_array); 
  _flat_251 = _mul_SxV_( 0, new_shape); 
  _flat_250 = 0ULL; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_251 <= iv (IDXS:_wlidx_122671_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123060 = _vect2offset_( _isaa_118964_array, new_idx); 
          _flat_253 = _idx_sel_( _ivesli_123060, array); 
        } : _flat_253 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122671_res) ):
        { 
        } : _flat_250 ; 
         } :
      genarray( new_shape, _flat_250, IDX(_wlidx_122671_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulong[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123061 { , NN } ; 
  int _wlidx_122672_res { , NN } ; 
  int[.] _isaa_118996_array { , NN } ; 
  ulong[*] res { , NN } ; 
  ulong _flat_244 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ulong{0} _flat_241 { , NN } ; 
  int[.] _flat_242 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_118996_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_118996_array); 
  _flat_242 = _mul_SxV_( 0, new_shape); 
  _flat_241 = 0ul; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_242 <= iv (IDXS:_wlidx_122672_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123061 = _vect2offset_( _isaa_118996_array, new_idx); 
          _flat_244 = _idx_sel_( _ivesli_123061, array); 
        } : _flat_244 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122672_res) ):
        { 
        } : _flat_241 ; 
         } :
      genarray( new_shape, _flat_241, IDX(_wlidx_122672_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulong[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123062 { , NN } ; 
  int _wlidx_122673_res { , NN } ; 
  int[1] _isaa_119024_idx { , NN } ; 
  int[.] _isaa_119021_array { , NN } ; 
  ulong[*] res { , NN } ; 
  ulong _flat_244 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ulong{0} _flat_241 { , NN } ; 
  int[.] _flat_242 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_236 { , NN } ; 
  int{0} _flat_238 { , NN } ; 

  _isaa_119021_array = _shape_A_( array); 
  _isaa_119024_idx = _shape_A_( idx); 
  _flat_238 = 0; 
  _flat_236 = _idx_sel_( _flat_238, _isaa_119024_idx); 
  new_shape = _drop_SxV_( _flat_236, _isaa_119021_array); 
  _flat_242 = _mul_SxV_( 0, new_shape); 
  _flat_241 = 0ul; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_242 <= iv (IDXS:_wlidx_122673_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123062 = _vect2offset_( _isaa_119021_array, new_idx); 
          _flat_244 = _idx_sel_( _ivesli_123062, array); 
        } : _flat_244 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122673_res) ):
        { 
        } : _flat_241 ; 
         } :
      genarray( new_shape, _flat_241, IDX(_wlidx_122673_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
uint[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123063 { , NN } ; 
  int _wlidx_122674_res { , NN } ; 
  int[.] _isaa_119053_array { , NN } ; 
  uint[*] res { , NN } ; 
  uint _flat_235 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  uint{0} _flat_232 { , NN } ; 
  int[.] _flat_233 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119053_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119053_array); 
  _flat_233 = _mul_SxV_( 0, new_shape); 
  _flat_232 = 0ui; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_233 <= iv (IDXS:_wlidx_122674_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123063 = _vect2offset_( _isaa_119053_array, new_idx); 
          _flat_235 = _idx_sel_( _ivesli_123063, array); 
        } : _flat_235 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122674_res) ):
        { 
        } : _flat_232 ; 
         } :
      genarray( new_shape, _flat_232, IDX(_wlidx_122674_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
uint[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123064 { , NN } ; 
  int _wlidx_122675_res { , NN } ; 
  int[1] _isaa_119081_idx { , NN } ; 
  int[.] _isaa_119078_array { , NN } ; 
  uint[*] res { , NN } ; 
  uint _flat_235 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  uint{0} _flat_232 { , NN } ; 
  int[.] _flat_233 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_227 { , NN } ; 
  int{0} _flat_229 { , NN } ; 

  _isaa_119078_array = _shape_A_( array); 
  _isaa_119081_idx = _shape_A_( idx); 
  _flat_229 = 0; 
  _flat_227 = _idx_sel_( _flat_229, _isaa_119081_idx); 
  new_shape = _drop_SxV_( _flat_227, _isaa_119078_array); 
  _flat_233 = _mul_SxV_( 0, new_shape); 
  _flat_232 = 0ui; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_233 <= iv (IDXS:_wlidx_122675_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123064 = _vect2offset_( _isaa_119078_array, new_idx); 
          _flat_235 = _idx_sel_( _ivesli_123064, array); 
        } : _flat_235 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122675_res) ):
        { 
        } : _flat_232 ; 
         } :
      genarray( new_shape, _flat_232, IDX(_wlidx_122675_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ushort[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123065 { , NN } ; 
  int _wlidx_122676_res { , NN } ; 
  int[.] _isaa_119110_array { , NN } ; 
  ushort[*] res { , NN } ; 
  ushort _flat_226 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ushort{0} _flat_223 { , NN } ; 
  int[.] _flat_224 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119110_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119110_array); 
  _flat_224 = _mul_SxV_( 0, new_shape); 
  _flat_223 = 0us; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_224 <= iv (IDXS:_wlidx_122676_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123065 = _vect2offset_( _isaa_119110_array, new_idx); 
          _flat_226 = _idx_sel_( _ivesli_123065, array); 
        } : _flat_226 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122676_res) ):
        { 
        } : _flat_223 ; 
         } :
      genarray( new_shape, _flat_223, IDX(_wlidx_122676_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ushort[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123066 { , NN } ; 
  int _wlidx_122677_res { , NN } ; 
  int[1] _isaa_119138_idx { , NN } ; 
  int[.] _isaa_119135_array { , NN } ; 
  ushort[*] res { , NN } ; 
  ushort _flat_226 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ushort{0} _flat_223 { , NN } ; 
  int[.] _flat_224 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_218 { , NN } ; 
  int{0} _flat_220 { , NN } ; 

  _isaa_119135_array = _shape_A_( array); 
  _isaa_119138_idx = _shape_A_( idx); 
  _flat_220 = 0; 
  _flat_218 = _idx_sel_( _flat_220, _isaa_119138_idx); 
  new_shape = _drop_SxV_( _flat_218, _isaa_119135_array); 
  _flat_224 = _mul_SxV_( 0, new_shape); 
  _flat_223 = 0us; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_224 <= iv (IDXS:_wlidx_122677_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123066 = _vect2offset_( _isaa_119135_array, new_idx); 
          _flat_226 = _idx_sel_( _ivesli_123066, array); 
        } : _flat_226 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122677_res) ):
        { 
        } : _flat_223 ; 
         } :
      genarray( new_shape, _flat_223, IDX(_wlidx_122677_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ubyte[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123067 { , NN } ; 
  int _wlidx_122678_res { , NN } ; 
  int[.] _isaa_119167_array { , NN } ; 
  ubyte[*] res { , NN } ; 
  ubyte _flat_217 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ubyte{} _flat_214 { , NN } ; 
  int[.] _flat_215 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119167_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119167_array); 
  _flat_215 = _mul_SxV_( 0, new_shape); 
  _flat_214 = 0ub; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_215 <= iv (IDXS:_wlidx_122678_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123067 = _vect2offset_( _isaa_119167_array, new_idx); 
          _flat_217 = _idx_sel_( _ivesli_123067, array); 
        } : _flat_217 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122678_res) ):
        { 
        } : _flat_214 ; 
         } :
      genarray( new_shape, _flat_214, IDX(_wlidx_122678_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ubyte[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123068 { , NN } ; 
  int _wlidx_122679_res { , NN } ; 
  int[1] _isaa_119195_idx { , NN } ; 
  int[.] _isaa_119192_array { , NN } ; 
  ubyte[*] res { , NN } ; 
  ubyte _flat_217 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  ubyte{} _flat_214 { , NN } ; 
  int[.] _flat_215 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_209 { , NN } ; 
  int{0} _flat_211 { , NN } ; 

  _isaa_119192_array = _shape_A_( array); 
  _isaa_119195_idx = _shape_A_( idx); 
  _flat_211 = 0; 
  _flat_209 = _idx_sel_( _flat_211, _isaa_119195_idx); 
  new_shape = _drop_SxV_( _flat_209, _isaa_119192_array); 
  _flat_215 = _mul_SxV_( 0, new_shape); 
  _flat_214 = 0ub; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_215 <= iv (IDXS:_wlidx_122679_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123068 = _vect2offset_( _isaa_119192_array, new_idx); 
          _flat_217 = _idx_sel_( _ivesli_123068, array); 
        } : _flat_217 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122679_res) ):
        { 
        } : _flat_214 ; 
         } :
      genarray( new_shape, _flat_214, IDX(_wlidx_122679_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
longlong[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123069 { , NN } ; 
  int _wlidx_122680_res { , NN } ; 
  int[.] _isaa_119224_array { , NN } ; 
  longlong[*] res { , NN } ; 
  longlong _flat_208 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  longlong{0} _flat_205 { , NN } ; 
  int[.] _flat_206 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119224_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119224_array); 
  _flat_206 = _mul_SxV_( 0, new_shape); 
  _flat_205 = 0LL; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_206 <= iv (IDXS:_wlidx_122680_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123069 = _vect2offset_( _isaa_119224_array, new_idx); 
          _flat_208 = _idx_sel_( _ivesli_123069, array); 
        } : _flat_208 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122680_res) ):
        { 
        } : _flat_205 ; 
         } :
      genarray( new_shape, _flat_205, IDX(_wlidx_122680_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
longlong[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123070 { , NN } ; 
  int _wlidx_122681_res { , NN } ; 
  int[1] _isaa_119252_idx { , NN } ; 
  int[.] _isaa_119249_array { , NN } ; 
  longlong[*] res { , NN } ; 
  longlong _flat_208 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  longlong{0} _flat_205 { , NN } ; 
  int[.] _flat_206 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_200 { , NN } ; 
  int{0} _flat_202 { , NN } ; 

  _isaa_119249_array = _shape_A_( array); 
  _isaa_119252_idx = _shape_A_( idx); 
  _flat_202 = 0; 
  _flat_200 = _idx_sel_( _flat_202, _isaa_119252_idx); 
  new_shape = _drop_SxV_( _flat_200, _isaa_119249_array); 
  _flat_206 = _mul_SxV_( 0, new_shape); 
  _flat_205 = 0LL; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_206 <= iv (IDXS:_wlidx_122681_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123070 = _vect2offset_( _isaa_119249_array, new_idx); 
          _flat_208 = _idx_sel_( _ivesli_123070, array); 
        } : _flat_208 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122681_res) ):
        { 
        } : _flat_205 ; 
         } :
      genarray( new_shape, _flat_205, IDX(_wlidx_122681_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
long[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , long[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123071 { , NN } ; 
  int _wlidx_122682_res { , NN } ; 
  int[.] _isaa_119281_array { , NN } ; 
  long[*] res { , NN } ; 
  long _flat_199 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  long{0} _flat_196 { , NN } ; 
  int[.] _flat_197 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119281_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119281_array); 
  _flat_197 = _mul_SxV_( 0, new_shape); 
  _flat_196 = 0l; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_197 <= iv (IDXS:_wlidx_122682_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123071 = _vect2offset_( _isaa_119281_array, new_idx); 
          _flat_199 = _idx_sel_( _ivesli_123071, array); 
        } : _flat_199 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122682_res) ):
        { 
        } : _flat_196 ; 
         } :
      genarray( new_shape, _flat_196, IDX(_wlidx_122682_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
long[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , long[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123072 { , NN } ; 
  int _wlidx_122683_res { , NN } ; 
  int[1] _isaa_119309_idx { , NN } ; 
  int[.] _isaa_119306_array { , NN } ; 
  long[*] res { , NN } ; 
  long _flat_199 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  long{0} _flat_196 { , NN } ; 
  int[.] _flat_197 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_191 { , NN } ; 
  int{0} _flat_193 { , NN } ; 

  _isaa_119306_array = _shape_A_( array); 
  _isaa_119309_idx = _shape_A_( idx); 
  _flat_193 = 0; 
  _flat_191 = _idx_sel_( _flat_193, _isaa_119309_idx); 
  new_shape = _drop_SxV_( _flat_191, _isaa_119306_array); 
  _flat_197 = _mul_SxV_( 0, new_shape); 
  _flat_196 = 0l; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_197 <= iv (IDXS:_wlidx_122683_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123072 = _vect2offset_( _isaa_119306_array, new_idx); 
          _flat_199 = _idx_sel_( _ivesli_123072, array); 
        } : _flat_199 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122683_res) ):
        { 
        } : _flat_196 ; 
         } :
      genarray( new_shape, _flat_196, IDX(_wlidx_122683_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
short[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , short[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123073 { , NN } ; 
  int _wlidx_122684_res { , NN } ; 
  int[.] _isaa_119338_array { , NN } ; 
  short[*] res { , NN } ; 
  short _flat_190 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  short{0} _flat_187 { , NN } ; 
  int[.] _flat_188 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119338_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119338_array); 
  _flat_188 = _mul_SxV_( 0, new_shape); 
  _flat_187 = 0s; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_188 <= iv (IDXS:_wlidx_122684_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123073 = _vect2offset_( _isaa_119338_array, new_idx); 
          _flat_190 = _idx_sel_( _ivesli_123073, array); 
        } : _flat_190 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122684_res) ):
        { 
        } : _flat_187 ; 
         } :
      genarray( new_shape, _flat_187, IDX(_wlidx_122684_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
short[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , short[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123074 { , NN } ; 
  int _wlidx_122685_res { , NN } ; 
  int[1] _isaa_119366_idx { , NN } ; 
  int[.] _isaa_119363_array { , NN } ; 
  short[*] res { , NN } ; 
  short _flat_190 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  short{0} _flat_187 { , NN } ; 
  int[.] _flat_188 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_182 { , NN } ; 
  int{0} _flat_184 { , NN } ; 

  _isaa_119363_array = _shape_A_( array); 
  _isaa_119366_idx = _shape_A_( idx); 
  _flat_184 = 0; 
  _flat_182 = _idx_sel_( _flat_184, _isaa_119366_idx); 
  new_shape = _drop_SxV_( _flat_182, _isaa_119363_array); 
  _flat_188 = _mul_SxV_( 0, new_shape); 
  _flat_187 = 0s; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_188 <= iv (IDXS:_wlidx_122685_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123074 = _vect2offset_( _isaa_119363_array, new_idx); 
          _flat_190 = _idx_sel_( _ivesli_123074, array); 
        } : _flat_190 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122685_res) ):
        { 
        } : _flat_187 ; 
         } :
      genarray( new_shape, _flat_187, IDX(_wlidx_122685_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
byte[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123075 { , NN } ; 
  int _wlidx_122686_res { , NN } ; 
  int[.] _isaa_119395_array { , NN } ; 
  byte[*] res { , NN } ; 
  byte _flat_181 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  byte{} _flat_178 { , NN } ; 
  int[.] _flat_179 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119395_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119395_array); 
  _flat_179 = _mul_SxV_( 0, new_shape); 
  _flat_178 = 0b; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_179 <= iv (IDXS:_wlidx_122686_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123075 = _vect2offset_( _isaa_119395_array, new_idx); 
          _flat_181 = _idx_sel_( _ivesli_123075, array); 
        } : _flat_181 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122686_res) ):
        { 
        } : _flat_178 ; 
         } :
      genarray( new_shape, _flat_178, IDX(_wlidx_122686_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
byte[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123076 { , NN } ; 
  int _wlidx_122687_res { , NN } ; 
  int[1] _isaa_119423_idx { , NN } ; 
  int[.] _isaa_119420_array { , NN } ; 
  byte[*] res { , NN } ; 
  byte _flat_181 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  byte{} _flat_178 { , NN } ; 
  int[.] _flat_179 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_173 { , NN } ; 
  int{0} _flat_175 { , NN } ; 

  _isaa_119420_array = _shape_A_( array); 
  _isaa_119423_idx = _shape_A_( idx); 
  _flat_175 = 0; 
  _flat_173 = _idx_sel_( _flat_175, _isaa_119423_idx); 
  new_shape = _drop_SxV_( _flat_173, _isaa_119420_array); 
  _flat_179 = _mul_SxV_( 0, new_shape); 
  _flat_178 = 0b; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_179 <= iv (IDXS:_wlidx_122687_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123076 = _vect2offset_( _isaa_119420_array, new_idx); 
          _flat_181 = _idx_sel_( _ivesli_123076, array); 
        } : _flat_181 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122687_res) ):
        { 
        } : _flat_178 ; 
         } :
      genarray( new_shape, _flat_178, IDX(_wlidx_122687_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
char[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , char[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123077 { , NN } ; 
  int _wlidx_122688_res { , NN } ; 
  int[.] _isaa_119452_array { , NN } ; 
  char[*] res { , NN } ; 
  char _flat_172 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  char{ } _flat_169 { , NN } ; 
  int[.] _flat_170 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119452_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119452_array); 
  _flat_170 = _mul_SxV_( 0, new_shape); 
  _flat_169 = ' '; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_170 <= iv (IDXS:_wlidx_122688_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123077 = _vect2offset_( _isaa_119452_array, new_idx); 
          _flat_172 = _idx_sel_( _ivesli_123077, array); 
        } : _flat_172 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122688_res) ):
        { 
        } : _flat_169 ; 
         } :
      genarray( new_shape, _flat_169, IDX(_wlidx_122688_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
char[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , char[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123078 { , NN } ; 
  int _wlidx_122689_res { , NN } ; 
  int[1] _isaa_119480_idx { , NN } ; 
  int[.] _isaa_119477_array { , NN } ; 
  char[*] res { , NN } ; 
  char _flat_172 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  char{ } _flat_169 { , NN } ; 
  int[.] _flat_170 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_164 { , NN } ; 
  int{0} _flat_166 { , NN } ; 

  _isaa_119477_array = _shape_A_( array); 
  _isaa_119480_idx = _shape_A_( idx); 
  _flat_166 = 0; 
  _flat_164 = _idx_sel_( _flat_166, _isaa_119480_idx); 
  new_shape = _drop_SxV_( _flat_164, _isaa_119477_array); 
  _flat_170 = _mul_SxV_( 0, new_shape); 
  _flat_169 = ' '; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_170 <= iv (IDXS:_wlidx_122689_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123078 = _vect2offset_( _isaa_119477_array, new_idx); 
          _flat_172 = _idx_sel_( _ivesli_123078, array); 
        } : _flat_172 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122689_res) ):
        { 
        } : _flat_169 ; 
         } :
      genarray( new_shape, _flat_169, IDX(_wlidx_122689_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123079 { , NN } ; 
  int _wlidx_122690_res { , NN } ; 
  int[.] _isaa_119509_array { , NN } ; 
  bool[*] res { , NN } ; 
  bool _flat_163 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  bool{0} _flat_160 { , NN } ; 
  int[.] _flat_161 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119509_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119509_array); 
  _flat_161 = _mul_SxV_( 0, new_shape); 
  _flat_160 = false; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_161 <= iv (IDXS:_wlidx_122690_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123079 = _vect2offset_( _isaa_119509_array, new_idx); 
          _flat_163 = _idx_sel_( _ivesli_123079, array); 
        } : _flat_163 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122690_res) ):
        { 
        } : _flat_160 ; 
         } :
      genarray( new_shape, _flat_160, IDX(_wlidx_122690_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123080 { , NN } ; 
  int _wlidx_122691_res { , NN } ; 
  int[1] _isaa_119537_idx { , NN } ; 
  int[.] _isaa_119534_array { , NN } ; 
  bool[*] res { , NN } ; 
  bool _flat_163 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  bool{0} _flat_160 { , NN } ; 
  int[.] _flat_161 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_155 { , NN } ; 
  int{0} _flat_157 { , NN } ; 

  _isaa_119534_array = _shape_A_( array); 
  _isaa_119537_idx = _shape_A_( idx); 
  _flat_157 = 0; 
  _flat_155 = _idx_sel_( _flat_157, _isaa_119537_idx); 
  new_shape = _drop_SxV_( _flat_155, _isaa_119534_array); 
  _flat_161 = _mul_SxV_( 0, new_shape); 
  _flat_160 = false; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_161 <= iv (IDXS:_wlidx_122691_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123080 = _vect2offset_( _isaa_119534_array, new_idx); 
          _flat_163 = _idx_sel_( _ivesli_123080, array); 
        } : _flat_163 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122691_res) ):
        { 
        } : _flat_160 ; 
         } :
      genarray( new_shape, _flat_160, IDX(_wlidx_122691_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
double[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , double[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123081 { , NN } ; 
  int _wlidx_122692_res { , NN } ; 
  int[.] _isaa_119566_array { , NN } ; 
  double[*] res { , NN } ; 
  double _flat_154 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  double{0.0...} _flat_151 { , NN } ; 
  int[.] _flat_152 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119566_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119566_array); 
  _flat_152 = _mul_SxV_( 0, new_shape); 
  _flat_151 = 0.0; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_152 <= iv (IDXS:_wlidx_122692_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123081 = _vect2offset_( _isaa_119566_array, new_idx); 
          _flat_154 = _idx_sel_( _ivesli_123081, array); 
        } : _flat_154 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122692_res) ):
        { 
        } : _flat_151 ; 
         } :
      genarray( new_shape, _flat_151, IDX(_wlidx_122692_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
double[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , double[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123082 { , NN } ; 
  int _wlidx_122693_res { , NN } ; 
  int[1] _isaa_119594_idx { , NN } ; 
  int[.] _isaa_119591_array { , NN } ; 
  double[*] res { , NN } ; 
  double _flat_154 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  double{0.0...} _flat_151 { , NN } ; 
  int[.] _flat_152 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_146 { , NN } ; 
  int{0} _flat_148 { , NN } ; 

  _isaa_119591_array = _shape_A_( array); 
  _isaa_119594_idx = _shape_A_( idx); 
  _flat_148 = 0; 
  _flat_146 = _idx_sel_( _flat_148, _isaa_119594_idx); 
  new_shape = _drop_SxV_( _flat_146, _isaa_119591_array); 
  _flat_152 = _mul_SxV_( 0, new_shape); 
  _flat_151 = 0.0; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_152 <= iv (IDXS:_wlidx_122693_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123082 = _vect2offset_( _isaa_119591_array, new_idx); 
          _flat_154 = _idx_sel_( _ivesli_123082, array); 
        } : _flat_154 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122693_res) ):
        { 
        } : _flat_151 ; 
         } :
      genarray( new_shape, _flat_151, IDX(_wlidx_122693_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
float[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , float[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123083 { , NN } ; 
  int _wlidx_122694_res { , NN } ; 
  int[.] _isaa_119623_array { , NN } ; 
  float[*] res { , NN } ; 
  float _flat_145 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  float{0.0...} _flat_142 { , NN } ; 
  int[.] _flat_143 { , NN } ; 
  int[.] new_shape { , NN } ; 

  _isaa_119623_array = _shape_A_( array); 
  new_shape = _drop_SxV_( 1, _isaa_119623_array); 
  _flat_143 = _mul_SxV_( 0, new_shape); 
  _flat_142 = 0.0f; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_143 <= iv (IDXS:_wlidx_122694_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123083 = _vect2offset_( _isaa_119623_array, new_idx); 
          _flat_145 = _idx_sel_( _ivesli_123083, array); 
        } : _flat_145 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122694_res) ):
        { 
        } : _flat_142 ; 
         } :
      genarray( new_shape, _flat_142, IDX(_wlidx_122694_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
float[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , float[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123084 { , NN } ; 
  int _wlidx_122695_res { , NN } ; 
  int[1] _isaa_119651_idx { , NN } ; 
  int[.] _isaa_119648_array { , NN } ; 
  float[*] res { , NN } ; 
  float _flat_145 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  float{0.0...} _flat_142 { , NN } ; 
  int[.] _flat_143 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_137 { , NN } ; 
  int{0} _flat_139 { , NN } ; 

  _isaa_119648_array = _shape_A_( array); 
  _isaa_119651_idx = _shape_A_( idx); 
  _flat_139 = 0; 
  _flat_137 = _idx_sel_( _flat_139, _isaa_119651_idx); 
  new_shape = _drop_SxV_( _flat_137, _isaa_119648_array); 
  _flat_143 = _mul_SxV_( 0, new_shape); 
  _flat_142 = 0.0f; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_143 <= iv (IDXS:_wlidx_122695_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123084 = _vect2offset_( _isaa_119648_array, new_idx); 
          _flat_145 = _idx_sel_( _ivesli_123084, array); 
        } : _flat_145 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122695_res) ):
        { 
        } : _flat_142 ; 
         } :
      genarray( new_shape, _flat_142, IDX(_wlidx_122695_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[*] sacprelude_p::_selVxADistmemLocal( int[1] idx { ,NN } , int[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123085 { , NN } ; 
  int _wlidx_122696_res { , NN } ; 
  int[.] _isaa_119680_array { , NN } ; 
  int[*] res { , NN } ; 
  int _flat_136 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  int[.] _flat_134 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int{0} _flat_130 { , NN } ; 

  _isaa_119680_array = _shape_A_( array); 
  _flat_130 = 0; 
  new_shape = _drop_SxV_( 1, _isaa_119680_array); 
  _flat_134 = _mul_SxV_( 0, new_shape); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_134 <= iv (IDXS:_wlidx_122696_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123085 = _vect2offset_( _isaa_119680_array, new_idx); 
          _flat_136 = _idx_sel_( _ivesli_123085, array); 
        } : _flat_136 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122696_res) ):
        { 
        } : _flat_130 ; 
         } :
      genarray( new_shape, _flat_130, IDX(_wlidx_122696_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selVxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[*] sacprelude_p::_selVxADistmemLocal( int[.] idx { ,NN } , int[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123086 { , NN } ; 
  int _wlidx_122697_res { , NN } ; 
  int[1] _isaa_119708_idx { , NN } ; 
  int[.] _isaa_119705_array { , NN } ; 
  int[*] res { , NN } ; 
  int _flat_136 { , NN } ; 
  int[.] new_idx { , NN } ; 
  int[.] iv { , NN } ; 
  int[.] _flat_134 { , NN } ; 
  int[.] new_shape { , NN } ; 
  int _flat_128 { , NN } ; 
  int{0} _flat_130 { , NN } ; 

  _isaa_119705_array = _shape_A_( array); 
  _isaa_119708_idx = _shape_A_( idx); 
  _flat_130 = 0; 
  _flat_128 = _idx_sel_( _flat_130, _isaa_119708_idx); 
  new_shape = _drop_SxV_( _flat_128, _isaa_119705_array); 
  _flat_134 = _mul_SxV_( 0, new_shape); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_134 <= iv (IDXS:_wlidx_122697_res) < new_shape)
        { 
          new_idx = _cat_VxV_( idx, iv); 
          _ivesli_123086 = _vect2offset_( _isaa_119705_array, new_idx); 
          _flat_136 = _idx_sel_( _ivesli_123086, array); 
        } : _flat_136 ; 
        /* Partn */
        default partition( iv (IDXS:_wlidx_122697_res) ):
        { 
        } : _flat_130 ; 
         } :
      genarray( new_shape, _flat_130, IDX(_wlidx_122697_res)); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulonglong[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123087 { , NN } ; 
  int _wlidx_122698__flat_280 { , NN } ; 
  int[.] _isaa_119737_array { , NN } ; 
  ulonglong _pinl_84267__flat_253 { , NN } ; 
  int[.] _pinl_84266_new_idx { , NN } ; 
  int[.] _pinl_84265_iv { , NN } ; 
  ulonglong{0} _pinl_84264__flat_250 { , NN } ; 
  int[.] _pinl_84263__flat_251 { , NN } ; 
  int[.] _pinl_84262_new_shape { , NN } ; 
  ulonglong[*] _flat_280 { , NN } ; 
  int[1] _flat_281 { , NN } ; 

  _isaa_119737_array = _shape_A_( array); 
  _flat_281 = [ idx ]; 
  _pinl_84262_new_shape = _drop_SxV_( 1, _isaa_119737_array); 
  _pinl_84263__flat_251 = _mul_SxV_( 0, _pinl_84262_new_shape); 
  _pinl_84264__flat_250 = 0ULL; 
  _flat_280 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84263__flat_251 <= _pinl_84265_iv (IDXS:_wlidx_122698__flat_280) < _pinl_84262_new_shape)
        { 
          _pinl_84266_new_idx = _cat_VxV_( _flat_281, _pinl_84265_iv); 
          _ivesli_123087 = _vect2offset_( _isaa_119737_array, _pinl_84266_new_idx); 
          _pinl_84267__flat_253 = _idx_sel_( _ivesli_123087, array); 
        } : _pinl_84267__flat_253 ; 
        /* Partn */
        default partition( _pinl_84265_iv (IDXS:_wlidx_122698__flat_280) ):
        { 
        } : _pinl_84264__flat_250 ; 
         } :
      genarray( _pinl_84262_new_shape, _pinl_84264__flat_250, IDX(_wlidx_122698__flat_280)); 
  return( _flat_280); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulong[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123088 { , NN } ; 
  int _wlidx_122699__flat_278 { , NN } ; 
  int[.] _isaa_119769_array { , NN } ; 
  ulong _pinl_84278__flat_244 { , NN } ; 
  int[.] _pinl_84277_new_idx { , NN } ; 
  int[.] _pinl_84276_iv { , NN } ; 
  ulong{0} _pinl_84275__flat_241 { , NN } ; 
  int[.] _pinl_84274__flat_242 { , NN } ; 
  int[.] _pinl_84273_new_shape { , NN } ; 
  ulong[*] _flat_278 { , NN } ; 
  int[1] _flat_279 { , NN } ; 

  _isaa_119769_array = _shape_A_( array); 
  _flat_279 = [ idx ]; 
  _pinl_84273_new_shape = _drop_SxV_( 1, _isaa_119769_array); 
  _pinl_84274__flat_242 = _mul_SxV_( 0, _pinl_84273_new_shape); 
  _pinl_84275__flat_241 = 0ul; 
  _flat_278 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84274__flat_242 <= _pinl_84276_iv (IDXS:_wlidx_122699__flat_278) < _pinl_84273_new_shape)
        { 
          _pinl_84277_new_idx = _cat_VxV_( _flat_279, _pinl_84276_iv); 
          _ivesli_123088 = _vect2offset_( _isaa_119769_array, _pinl_84277_new_idx); 
          _pinl_84278__flat_244 = _idx_sel_( _ivesli_123088, array); 
        } : _pinl_84278__flat_244 ; 
        /* Partn */
        default partition( _pinl_84276_iv (IDXS:_wlidx_122699__flat_278) ):
        { 
        } : _pinl_84275__flat_241 ; 
         } :
      genarray( _pinl_84273_new_shape, _pinl_84275__flat_241, IDX(_wlidx_122699__flat_278)); 
  return( _flat_278); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
uint[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , uint[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123089 { , NN } ; 
  int _wlidx_122700__flat_276 { , NN } ; 
  int[.] _isaa_119801_array { , NN } ; 
  uint _pinl_84289__flat_235 { , NN } ; 
  int[.] _pinl_84288_new_idx { , NN } ; 
  int[.] _pinl_84287_iv { , NN } ; 
  uint{0} _pinl_84286__flat_232 { , NN } ; 
  int[.] _pinl_84285__flat_233 { , NN } ; 
  int[.] _pinl_84284_new_shape { , NN } ; 
  uint[*] _flat_276 { , NN } ; 
  int[1] _flat_277 { , NN } ; 

  _isaa_119801_array = _shape_A_( array); 
  _flat_277 = [ idx ]; 
  _pinl_84284_new_shape = _drop_SxV_( 1, _isaa_119801_array); 
  _pinl_84285__flat_233 = _mul_SxV_( 0, _pinl_84284_new_shape); 
  _pinl_84286__flat_232 = 0ui; 
  _flat_276 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84285__flat_233 <= _pinl_84287_iv (IDXS:_wlidx_122700__flat_276) < _pinl_84284_new_shape)
        { 
          _pinl_84288_new_idx = _cat_VxV_( _flat_277, _pinl_84287_iv); 
          _ivesli_123089 = _vect2offset_( _isaa_119801_array, _pinl_84288_new_idx); 
          _pinl_84289__flat_235 = _idx_sel_( _ivesli_123089, array); 
        } : _pinl_84289__flat_235 ; 
        /* Partn */
        default partition( _pinl_84287_iv (IDXS:_wlidx_122700__flat_276) ):
        { 
        } : _pinl_84286__flat_232 ; 
         } :
      genarray( _pinl_84284_new_shape, _pinl_84286__flat_232, IDX(_wlidx_122700__flat_276)); 
  return( _flat_276); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ushort[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123090 { , NN } ; 
  int _wlidx_122701__flat_274 { , NN } ; 
  int[.] _isaa_119833_array { , NN } ; 
  ushort _pinl_84300__flat_226 { , NN } ; 
  int[.] _pinl_84299_new_idx { , NN } ; 
  int[.] _pinl_84298_iv { , NN } ; 
  ushort{0} _pinl_84297__flat_223 { , NN } ; 
  int[.] _pinl_84296__flat_224 { , NN } ; 
  int[.] _pinl_84295_new_shape { , NN } ; 
  ushort[*] _flat_274 { , NN } ; 
  int[1] _flat_275 { , NN } ; 

  _isaa_119833_array = _shape_A_( array); 
  _flat_275 = [ idx ]; 
  _pinl_84295_new_shape = _drop_SxV_( 1, _isaa_119833_array); 
  _pinl_84296__flat_224 = _mul_SxV_( 0, _pinl_84295_new_shape); 
  _pinl_84297__flat_223 = 0us; 
  _flat_274 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84296__flat_224 <= _pinl_84298_iv (IDXS:_wlidx_122701__flat_274) < _pinl_84295_new_shape)
        { 
          _pinl_84299_new_idx = _cat_VxV_( _flat_275, _pinl_84298_iv); 
          _ivesli_123090 = _vect2offset_( _isaa_119833_array, _pinl_84299_new_idx); 
          _pinl_84300__flat_226 = _idx_sel_( _ivesli_123090, array); 
        } : _pinl_84300__flat_226 ; 
        /* Partn */
        default partition( _pinl_84298_iv (IDXS:_wlidx_122701__flat_274) ):
        { 
        } : _pinl_84297__flat_223 ; 
         } :
      genarray( _pinl_84295_new_shape, _pinl_84297__flat_223, IDX(_wlidx_122701__flat_274)); 
  return( _flat_274); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ubyte[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123091 { , NN } ; 
  int _wlidx_122702__flat_272 { , NN } ; 
  int[.] _isaa_119865_array { , NN } ; 
  ubyte _pinl_84311__flat_217 { , NN } ; 
  int[.] _pinl_84310_new_idx { , NN } ; 
  int[.] _pinl_84309_iv { , NN } ; 
  ubyte{} _pinl_84308__flat_214 { , NN } ; 
  int[.] _pinl_84307__flat_215 { , NN } ; 
  int[.] _pinl_84306_new_shape { , NN } ; 
  ubyte[*] _flat_272 { , NN } ; 
  int[1] _flat_273 { , NN } ; 

  _isaa_119865_array = _shape_A_( array); 
  _flat_273 = [ idx ]; 
  _pinl_84306_new_shape = _drop_SxV_( 1, _isaa_119865_array); 
  _pinl_84307__flat_215 = _mul_SxV_( 0, _pinl_84306_new_shape); 
  _pinl_84308__flat_214 = 0ub; 
  _flat_272 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84307__flat_215 <= _pinl_84309_iv (IDXS:_wlidx_122702__flat_272) < _pinl_84306_new_shape)
        { 
          _pinl_84310_new_idx = _cat_VxV_( _flat_273, _pinl_84309_iv); 
          _ivesli_123091 = _vect2offset_( _isaa_119865_array, _pinl_84310_new_idx); 
          _pinl_84311__flat_217 = _idx_sel_( _ivesli_123091, array); 
        } : _pinl_84311__flat_217 ; 
        /* Partn */
        default partition( _pinl_84309_iv (IDXS:_wlidx_122702__flat_272) ):
        { 
        } : _pinl_84308__flat_214 ; 
         } :
      genarray( _pinl_84306_new_shape, _pinl_84308__flat_214, IDX(_wlidx_122702__flat_272)); 
  return( _flat_272); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
longlong[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123092 { , NN } ; 
  int _wlidx_122703__flat_270 { , NN } ; 
  int[.] _isaa_119897_array { , NN } ; 
  longlong _pinl_84322__flat_208 { , NN } ; 
  int[.] _pinl_84321_new_idx { , NN } ; 
  int[.] _pinl_84320_iv { , NN } ; 
  longlong{0} _pinl_84319__flat_205 { , NN } ; 
  int[.] _pinl_84318__flat_206 { , NN } ; 
  int[.] _pinl_84317_new_shape { , NN } ; 
  longlong[*] _flat_270 { , NN } ; 
  int[1] _flat_271 { , NN } ; 

  _isaa_119897_array = _shape_A_( array); 
  _flat_271 = [ idx ]; 
  _pinl_84317_new_shape = _drop_SxV_( 1, _isaa_119897_array); 
  _pinl_84318__flat_206 = _mul_SxV_( 0, _pinl_84317_new_shape); 
  _pinl_84319__flat_205 = 0LL; 
  _flat_270 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84318__flat_206 <= _pinl_84320_iv (IDXS:_wlidx_122703__flat_270) < _pinl_84317_new_shape)
        { 
          _pinl_84321_new_idx = _cat_VxV_( _flat_271, _pinl_84320_iv); 
          _ivesli_123092 = _vect2offset_( _isaa_119897_array, _pinl_84321_new_idx); 
          _pinl_84322__flat_208 = _idx_sel_( _ivesli_123092, array); 
        } : _pinl_84322__flat_208 ; 
        /* Partn */
        default partition( _pinl_84320_iv (IDXS:_wlidx_122703__flat_270) ):
        { 
        } : _pinl_84319__flat_205 ; 
         } :
      genarray( _pinl_84317_new_shape, _pinl_84319__flat_205, IDX(_wlidx_122703__flat_270)); 
  return( _flat_270); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
long[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , long[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123093 { , NN } ; 
  int _wlidx_122704__flat_268 { , NN } ; 
  int[.] _isaa_119929_array { , NN } ; 
  long _pinl_84333__flat_199 { , NN } ; 
  int[.] _pinl_84332_new_idx { , NN } ; 
  int[.] _pinl_84331_iv { , NN } ; 
  long{0} _pinl_84330__flat_196 { , NN } ; 
  int[.] _pinl_84329__flat_197 { , NN } ; 
  int[.] _pinl_84328_new_shape { , NN } ; 
  long[*] _flat_268 { , NN } ; 
  int[1] _flat_269 { , NN } ; 

  _isaa_119929_array = _shape_A_( array); 
  _flat_269 = [ idx ]; 
  _pinl_84328_new_shape = _drop_SxV_( 1, _isaa_119929_array); 
  _pinl_84329__flat_197 = _mul_SxV_( 0, _pinl_84328_new_shape); 
  _pinl_84330__flat_196 = 0l; 
  _flat_268 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84329__flat_197 <= _pinl_84331_iv (IDXS:_wlidx_122704__flat_268) < _pinl_84328_new_shape)
        { 
          _pinl_84332_new_idx = _cat_VxV_( _flat_269, _pinl_84331_iv); 
          _ivesli_123093 = _vect2offset_( _isaa_119929_array, _pinl_84332_new_idx); 
          _pinl_84333__flat_199 = _idx_sel_( _ivesli_123093, array); 
        } : _pinl_84333__flat_199 ; 
        /* Partn */
        default partition( _pinl_84331_iv (IDXS:_wlidx_122704__flat_268) ):
        { 
        } : _pinl_84330__flat_196 ; 
         } :
      genarray( _pinl_84328_new_shape, _pinl_84330__flat_196, IDX(_wlidx_122704__flat_268)); 
  return( _flat_268); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
short[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , short[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123094 { , NN } ; 
  int _wlidx_122705__flat_266 { , NN } ; 
  int[.] _isaa_119961_array { , NN } ; 
  short _pinl_84344__flat_190 { , NN } ; 
  int[.] _pinl_84343_new_idx { , NN } ; 
  int[.] _pinl_84342_iv { , NN } ; 
  short{0} _pinl_84341__flat_187 { , NN } ; 
  int[.] _pinl_84340__flat_188 { , NN } ; 
  int[.] _pinl_84339_new_shape { , NN } ; 
  short[*] _flat_266 { , NN } ; 
  int[1] _flat_267 { , NN } ; 

  _isaa_119961_array = _shape_A_( array); 
  _flat_267 = [ idx ]; 
  _pinl_84339_new_shape = _drop_SxV_( 1, _isaa_119961_array); 
  _pinl_84340__flat_188 = _mul_SxV_( 0, _pinl_84339_new_shape); 
  _pinl_84341__flat_187 = 0s; 
  _flat_266 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84340__flat_188 <= _pinl_84342_iv (IDXS:_wlidx_122705__flat_266) < _pinl_84339_new_shape)
        { 
          _pinl_84343_new_idx = _cat_VxV_( _flat_267, _pinl_84342_iv); 
          _ivesli_123094 = _vect2offset_( _isaa_119961_array, _pinl_84343_new_idx); 
          _pinl_84344__flat_190 = _idx_sel_( _ivesli_123094, array); 
        } : _pinl_84344__flat_190 ; 
        /* Partn */
        default partition( _pinl_84342_iv (IDXS:_wlidx_122705__flat_266) ):
        { 
        } : _pinl_84341__flat_187 ; 
         } :
      genarray( _pinl_84339_new_shape, _pinl_84341__flat_187, IDX(_wlidx_122705__flat_266)); 
  return( _flat_266); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
byte[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , byte[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123095 { , NN } ; 
  int _wlidx_122706__flat_264 { , NN } ; 
  int[.] _isaa_119993_array { , NN } ; 
  byte _pinl_84355__flat_181 { , NN } ; 
  int[.] _pinl_84354_new_idx { , NN } ; 
  int[.] _pinl_84353_iv { , NN } ; 
  byte{} _pinl_84352__flat_178 { , NN } ; 
  int[.] _pinl_84351__flat_179 { , NN } ; 
  int[.] _pinl_84350_new_shape { , NN } ; 
  byte[*] _flat_264 { , NN } ; 
  int[1] _flat_265 { , NN } ; 

  _isaa_119993_array = _shape_A_( array); 
  _flat_265 = [ idx ]; 
  _pinl_84350_new_shape = _drop_SxV_( 1, _isaa_119993_array); 
  _pinl_84351__flat_179 = _mul_SxV_( 0, _pinl_84350_new_shape); 
  _pinl_84352__flat_178 = 0b; 
  _flat_264 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84351__flat_179 <= _pinl_84353_iv (IDXS:_wlidx_122706__flat_264) < _pinl_84350_new_shape)
        { 
          _pinl_84354_new_idx = _cat_VxV_( _flat_265, _pinl_84353_iv); 
          _ivesli_123095 = _vect2offset_( _isaa_119993_array, _pinl_84354_new_idx); 
          _pinl_84355__flat_181 = _idx_sel_( _ivesli_123095, array); 
        } : _pinl_84355__flat_181 ; 
        /* Partn */
        default partition( _pinl_84353_iv (IDXS:_wlidx_122706__flat_264) ):
        { 
        } : _pinl_84352__flat_178 ; 
         } :
      genarray( _pinl_84350_new_shape, _pinl_84352__flat_178, IDX(_wlidx_122706__flat_264)); 
  return( _flat_264); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
char[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , char[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123096 { , NN } ; 
  int _wlidx_122707__flat_262 { , NN } ; 
  int[.] _isaa_120025_array { , NN } ; 
  char _pinl_84366__flat_172 { , NN } ; 
  int[.] _pinl_84365_new_idx { , NN } ; 
  int[.] _pinl_84364_iv { , NN } ; 
  char{ } _pinl_84363__flat_169 { , NN } ; 
  int[.] _pinl_84362__flat_170 { , NN } ; 
  int[.] _pinl_84361_new_shape { , NN } ; 
  char[*] _flat_262 { , NN } ; 
  int[1] _flat_263 { , NN } ; 

  _isaa_120025_array = _shape_A_( array); 
  _flat_263 = [ idx ]; 
  _pinl_84361_new_shape = _drop_SxV_( 1, _isaa_120025_array); 
  _pinl_84362__flat_170 = _mul_SxV_( 0, _pinl_84361_new_shape); 
  _pinl_84363__flat_169 = ' '; 
  _flat_262 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84362__flat_170 <= _pinl_84364_iv (IDXS:_wlidx_122707__flat_262) < _pinl_84361_new_shape)
        { 
          _pinl_84365_new_idx = _cat_VxV_( _flat_263, _pinl_84364_iv); 
          _ivesli_123096 = _vect2offset_( _isaa_120025_array, _pinl_84365_new_idx); 
          _pinl_84366__flat_172 = _idx_sel_( _ivesli_123096, array); 
        } : _pinl_84366__flat_172 ; 
        /* Partn */
        default partition( _pinl_84364_iv (IDXS:_wlidx_122707__flat_262) ):
        { 
        } : _pinl_84363__flat_169 ; 
         } :
      genarray( _pinl_84361_new_shape, _pinl_84363__flat_169, IDX(_wlidx_122707__flat_262)); 
  return( _flat_262); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , bool[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123097 { , NN } ; 
  int _wlidx_122708__flat_260 { , NN } ; 
  int[.] _isaa_120057_array { , NN } ; 
  bool _pinl_84377__flat_163 { , NN } ; 
  int[.] _pinl_84376_new_idx { , NN } ; 
  int[.] _pinl_84375_iv { , NN } ; 
  bool{0} _pinl_84374__flat_160 { , NN } ; 
  int[.] _pinl_84373__flat_161 { , NN } ; 
  int[.] _pinl_84372_new_shape { , NN } ; 
  bool[*] _flat_260 { , NN } ; 
  int[1] _flat_261 { , NN } ; 

  _isaa_120057_array = _shape_A_( array); 
  _flat_261 = [ idx ]; 
  _pinl_84372_new_shape = _drop_SxV_( 1, _isaa_120057_array); 
  _pinl_84373__flat_161 = _mul_SxV_( 0, _pinl_84372_new_shape); 
  _pinl_84374__flat_160 = false; 
  _flat_260 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84373__flat_161 <= _pinl_84375_iv (IDXS:_wlidx_122708__flat_260) < _pinl_84372_new_shape)
        { 
          _pinl_84376_new_idx = _cat_VxV_( _flat_261, _pinl_84375_iv); 
          _ivesli_123097 = _vect2offset_( _isaa_120057_array, _pinl_84376_new_idx); 
          _pinl_84377__flat_163 = _idx_sel_( _ivesli_123097, array); 
        } : _pinl_84377__flat_163 ; 
        /* Partn */
        default partition( _pinl_84375_iv (IDXS:_wlidx_122708__flat_260) ):
        { 
        } : _pinl_84374__flat_160 ; 
         } :
      genarray( _pinl_84372_new_shape, _pinl_84374__flat_160, IDX(_wlidx_122708__flat_260)); 
  return( _flat_260); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
double[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , double[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123098 { , NN } ; 
  int _wlidx_122709__flat_258 { , NN } ; 
  int[.] _isaa_120089_array { , NN } ; 
  double _pinl_84388__flat_154 { , NN } ; 
  int[.] _pinl_84387_new_idx { , NN } ; 
  int[.] _pinl_84386_iv { , NN } ; 
  double{0.0...} _pinl_84385__flat_151 { , NN } ; 
  int[.] _pinl_84384__flat_152 { , NN } ; 
  int[.] _pinl_84383_new_shape { , NN } ; 
  double[*] _flat_258 { , NN } ; 
  int[1] _flat_259 { , NN } ; 

  _isaa_120089_array = _shape_A_( array); 
  _flat_259 = [ idx ]; 
  _pinl_84383_new_shape = _drop_SxV_( 1, _isaa_120089_array); 
  _pinl_84384__flat_152 = _mul_SxV_( 0, _pinl_84383_new_shape); 
  _pinl_84385__flat_151 = 0.0; 
  _flat_258 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84384__flat_152 <= _pinl_84386_iv (IDXS:_wlidx_122709__flat_258) < _pinl_84383_new_shape)
        { 
          _pinl_84387_new_idx = _cat_VxV_( _flat_259, _pinl_84386_iv); 
          _ivesli_123098 = _vect2offset_( _isaa_120089_array, _pinl_84387_new_idx); 
          _pinl_84388__flat_154 = _idx_sel_( _ivesli_123098, array); 
        } : _pinl_84388__flat_154 ; 
        /* Partn */
        default partition( _pinl_84386_iv (IDXS:_wlidx_122709__flat_258) ):
        { 
        } : _pinl_84385__flat_151 ; 
         } :
      genarray( _pinl_84383_new_shape, _pinl_84385__flat_151, IDX(_wlidx_122709__flat_258)); 
  return( _flat_258); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
float[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , float[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123099 { , NN } ; 
  int _wlidx_122710__flat_256 { , NN } ; 
  int[.] _isaa_120121_array { , NN } ; 
  float _pinl_84399__flat_145 { , NN } ; 
  int[.] _pinl_84398_new_idx { , NN } ; 
  int[.] _pinl_84397_iv { , NN } ; 
  float{0.0...} _pinl_84396__flat_142 { , NN } ; 
  int[.] _pinl_84395__flat_143 { , NN } ; 
  int[.] _pinl_84394_new_shape { , NN } ; 
  float[*] _flat_256 { , NN } ; 
  int[1] _flat_257 { , NN } ; 

  _isaa_120121_array = _shape_A_( array); 
  _flat_257 = [ idx ]; 
  _pinl_84394_new_shape = _drop_SxV_( 1, _isaa_120121_array); 
  _pinl_84395__flat_143 = _mul_SxV_( 0, _pinl_84394_new_shape); 
  _pinl_84396__flat_142 = 0.0f; 
  _flat_256 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84395__flat_143 <= _pinl_84397_iv (IDXS:_wlidx_122710__flat_256) < _pinl_84394_new_shape)
        { 
          _pinl_84398_new_idx = _cat_VxV_( _flat_257, _pinl_84397_iv); 
          _ivesli_123099 = _vect2offset_( _isaa_120121_array, _pinl_84398_new_idx); 
          _pinl_84399__flat_145 = _idx_sel_( _ivesli_123099, array); 
        } : _pinl_84399__flat_145 ; 
        /* Partn */
        default partition( _pinl_84397_iv (IDXS:_wlidx_122710__flat_256) ):
        { 
        } : _pinl_84396__flat_142 ; 
         } :
      genarray( _pinl_84394_new_shape, _pinl_84396__flat_142, IDX(_wlidx_122710__flat_256)); 
  return( _flat_256); 
}



/****************************************************************************
 * sacprelude_p::_selSxADistmemLocal(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[*] sacprelude_p::_selSxADistmemLocal( int idx { ,NN } , int[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */
{ 
  int _ivesli_123100 { , NN } ; 
  int _wlidx_122711__flat_254 { , NN } ; 
  int{0} _isaa_120155_idx { , NN } ; 
  int[.] _isaa_120153_array { , NN } ; 
  int _pinl_84410__flat_136 { , NN } ; 
  int[.] _pinl_84409_new_idx { , NN } ; 
  int[.] _pinl_84408_iv { , NN } ; 
  int[.] _pinl_84406__flat_134 { , NN } ; 
  int[.] _pinl_84405_new_shape { , NN } ; 
  int[*] _flat_254 { , NN } ; 
  int[1] _flat_255 { , NN } ; 

  _isaa_120153_array = _shape_A_( array); 
  _isaa_120155_idx = 0; 
  _flat_255 = [ idx ]; 
  _pinl_84405_new_shape = _drop_SxV_( 1, _isaa_120153_array); 
  _pinl_84406__flat_134 = _mul_SxV_( 0, _pinl_84405_new_shape); 
  _flat_254 = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_pinl_84406__flat_134 <= _pinl_84408_iv (IDXS:_wlidx_122711__flat_254) < _pinl_84405_new_shape)
        { 
          _pinl_84409_new_idx = _cat_VxV_( _flat_255, _pinl_84408_iv); 
          _ivesli_123100 = _vect2offset_( _isaa_120153_array, _pinl_84409_new_idx); 
          _pinl_84410__flat_136 = _idx_sel_( _ivesli_123100, array); 
        } : _pinl_84410__flat_136 ; 
        /* Partn */
        default partition( _pinl_84408_iv (IDXS:_wlidx_122711__flat_254) ):
        { 
        } : _isaa_120155_idx ; 
         } :
      genarray( _pinl_84405_new_shape, _isaa_120155_idx, IDX(_wlidx_122711__flat_254)); 
  return( _flat_254); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulonglong{0} sacprelude_p::zero( ulonglong[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  ulonglong{0} _flat_295 { , NN } ; 

  _flat_295 = 0ULL; 
  return( _flat_295); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ulong{0} sacprelude_p::zero( ulong[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  ulong{0} _flat_294 { , NN } ; 

  _flat_294 = 0ul; 
  return( _flat_294); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
uint{0} sacprelude_p::zero( uint[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  uint{0} _flat_293 { , NN } ; 

  _flat_293 = 0ui; 
  return( _flat_293); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ushort{0} sacprelude_p::zero( ushort[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  ushort{0} _flat_292 { , NN } ; 

  _flat_292 = 0us; 
  return( _flat_292); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
ubyte{} sacprelude_p::zero( ubyte[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  ubyte{} _flat_291 { , NN } ; 

  _flat_291 = 0ub; 
  return( _flat_291); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
longlong{0} sacprelude_p::zero( longlong[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  longlong{0} _flat_290 { , NN } ; 

  _flat_290 = 0LL; 
  return( _flat_290); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
long{0} sacprelude_p::zero( long[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  long{0} _flat_289 { , NN } ; 

  _flat_289 = 0l; 
  return( _flat_289); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
short{0} sacprelude_p::zero( short[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  short{0} _flat_288 { , NN } ; 

  _flat_288 = 0s; 
  return( _flat_288); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
byte{} sacprelude_p::zero( byte[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  byte{} _flat_287 { , NN } ; 

  _flat_287 = 0b; 
  return( _flat_287); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool{0} sacprelude_p::zero( bool[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  bool{0} _flat_286 { , NN } ; 

  _flat_286 = false; 
  return( _flat_286); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
char{ } sacprelude_p::zero( char[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  char{ } _flat_285 { , NN } ; 

  _flat_285 = ' '; 
  return( _flat_285); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
float{0.0...} sacprelude_p::zero( float[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  float{0.0...} _flat_284 { , NN } ; 

  _flat_284 = 0.0f; 
  return( _flat_284); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
double{0.0...} sacprelude_p::zero( double[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  double{0.0...} _flat_283 { , NN } ; 

  _flat_283 = 0.0; 
  return( _flat_283); 
}



/****************************************************************************
 * sacprelude_p::zero(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int{0} sacprelude_p::zero( int[*] A { ,NN } )
/*
 *  zero ::  ---
 */
{ 
  int{0} _flat_282 { , NN } ; 

  _flat_282 = 0; 
  return( _flat_282); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( ulonglong[*] A { ,NN } , ulonglong[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123102 { , NN } ; 
  int _ivesli_123101 { , NN } ; 
  int[.] _isaa_120230_A { , NN } ; 
  int[.] _isaa_120227_B { , NN } ; 
  ulonglong _ctz_110949 { , NN } ; 
  bool _pinl_84411__flat_298 { , NN } ; 
  bool _ea_18_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_408 { , NN } ; 
  ulonglong _flat_409 { , NN } ; 
  ulonglong _flat_410 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_403 { , NN } ; 
  int[.] _flat_404 { , NN } ; 

  _isaa_120227_B = _shape_A_( B); 
  _isaa_120230_A = _shape_A_( A); 
  _flat_404 = _mul_SxV_( 0, _isaa_120230_A); 
  _flat_403 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_404 <= iv < _isaa_120230_A)
        { 
          _ea_18_res = _accu_( iv); 
          _ivesli_123102 = _vect2offset_( _isaa_120227_B, iv); 
          _flat_410 = _idx_sel_( _ivesli_123102, B); 
          _ivesli_123101 = _vect2offset_( _isaa_120230_A, iv); 
          _flat_409 = _idx_sel_( _ivesli_123101, A); 
          _ctz_110949 = _sub_SxS_( _flat_409, _flat_410); 
          _flat_408 = _eq_SxS_( _ctz_110949, 0ULL); 
          _pinl_84411__flat_298 = _and_SxS_( _ea_18_res, _flat_408); 
        } : _pinl_84411__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_403); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( ulong[*] A { ,NN } , ulong[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123104 { , NN } ; 
  int _ivesli_123103 { , NN } ; 
  int[.] _isaa_120241_A { , NN } ; 
  int[.] _isaa_120238_B { , NN } ; 
  ulong _ctz_110952 { , NN } ; 
  bool _pinl_84412__flat_298 { , NN } ; 
  bool _ea_20_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_400 { , NN } ; 
  ulong _flat_401 { , NN } ; 
  ulong _flat_402 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_395 { , NN } ; 
  int[.] _flat_396 { , NN } ; 

  _isaa_120238_B = _shape_A_( B); 
  _isaa_120241_A = _shape_A_( A); 
  _flat_396 = _mul_SxV_( 0, _isaa_120241_A); 
  _flat_395 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_396 <= iv < _isaa_120241_A)
        { 
          _ea_20_res = _accu_( iv); 
          _ivesli_123104 = _vect2offset_( _isaa_120238_B, iv); 
          _flat_402 = _idx_sel_( _ivesli_123104, B); 
          _ivesli_123103 = _vect2offset_( _isaa_120241_A, iv); 
          _flat_401 = _idx_sel_( _ivesli_123103, A); 
          _ctz_110952 = _sub_SxS_( _flat_401, _flat_402); 
          _flat_400 = _eq_SxS_( _ctz_110952, 0ul); 
          _pinl_84412__flat_298 = _and_SxS_( _ea_20_res, _flat_400); 
        } : _pinl_84412__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_395); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( uint[*] A { ,NN } , uint[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123106 { , NN } ; 
  int _ivesli_123105 { , NN } ; 
  int[.] _isaa_120252_A { , NN } ; 
  int[.] _isaa_120249_B { , NN } ; 
  uint _ctz_110955 { , NN } ; 
  bool _pinl_84413__flat_298 { , NN } ; 
  bool _ea_22_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_392 { , NN } ; 
  uint _flat_393 { , NN } ; 
  uint _flat_394 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_387 { , NN } ; 
  int[.] _flat_388 { , NN } ; 

  _isaa_120249_B = _shape_A_( B); 
  _isaa_120252_A = _shape_A_( A); 
  _flat_388 = _mul_SxV_( 0, _isaa_120252_A); 
  _flat_387 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_388 <= iv < _isaa_120252_A)
        { 
          _ea_22_res = _accu_( iv); 
          _ivesli_123106 = _vect2offset_( _isaa_120249_B, iv); 
          _flat_394 = _idx_sel_( _ivesli_123106, B); 
          _ivesli_123105 = _vect2offset_( _isaa_120252_A, iv); 
          _flat_393 = _idx_sel_( _ivesli_123105, A); 
          _ctz_110955 = _sub_SxS_( _flat_393, _flat_394); 
          _flat_392 = _eq_SxS_( _ctz_110955, 0ui); 
          _pinl_84413__flat_298 = _and_SxS_( _ea_22_res, _flat_392); 
        } : _pinl_84413__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_387); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( ushort[*] A { ,NN } , ushort[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123108 { , NN } ; 
  int _ivesli_123107 { , NN } ; 
  int[.] _isaa_120263_A { , NN } ; 
  int[.] _isaa_120260_B { , NN } ; 
  ushort _ctz_110958 { , NN } ; 
  bool _pinl_84414__flat_298 { , NN } ; 
  bool _ea_24_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_384 { , NN } ; 
  ushort _flat_385 { , NN } ; 
  ushort _flat_386 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_379 { , NN } ; 
  int[.] _flat_380 { , NN } ; 

  _isaa_120260_B = _shape_A_( B); 
  _isaa_120263_A = _shape_A_( A); 
  _flat_380 = _mul_SxV_( 0, _isaa_120263_A); 
  _flat_379 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_380 <= iv < _isaa_120263_A)
        { 
          _ea_24_res = _accu_( iv); 
          _ivesli_123108 = _vect2offset_( _isaa_120260_B, iv); 
          _flat_386 = _idx_sel_( _ivesli_123108, B); 
          _ivesli_123107 = _vect2offset_( _isaa_120263_A, iv); 
          _flat_385 = _idx_sel_( _ivesli_123107, A); 
          _ctz_110958 = _sub_SxS_( _flat_385, _flat_386); 
          _flat_384 = _eq_SxS_( _ctz_110958, 0us); 
          _pinl_84414__flat_298 = _and_SxS_( _ea_24_res, _flat_384); 
        } : _pinl_84414__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_379); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( ubyte[*] A { ,NN } , ubyte[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123110 { , NN } ; 
  int _ivesli_123109 { , NN } ; 
  int[.] _isaa_120274_A { , NN } ; 
  int[.] _isaa_120271_B { , NN } ; 
  ubyte _ctz_110961 { , NN } ; 
  bool _pinl_84415__flat_298 { , NN } ; 
  bool _ea_26_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_376 { , NN } ; 
  ubyte _flat_377 { , NN } ; 
  ubyte _flat_378 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_371 { , NN } ; 
  int[.] _flat_372 { , NN } ; 

  _isaa_120271_B = _shape_A_( B); 
  _isaa_120274_A = _shape_A_( A); 
  _flat_372 = _mul_SxV_( 0, _isaa_120274_A); 
  _flat_371 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_372 <= iv < _isaa_120274_A)
        { 
          _ea_26_res = _accu_( iv); 
          _ivesli_123110 = _vect2offset_( _isaa_120271_B, iv); 
          _flat_378 = _idx_sel_( _ivesli_123110, B); 
          _ivesli_123109 = _vect2offset_( _isaa_120274_A, iv); 
          _flat_377 = _idx_sel_( _ivesli_123109, A); 
          _ctz_110961 = _sub_SxS_( _flat_377, _flat_378); 
          _flat_376 = _eq_SxS_( _ctz_110961, 0ub); 
          _pinl_84415__flat_298 = _and_SxS_( _ea_26_res, _flat_376); 
        } : _pinl_84415__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_371); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( longlong[*] A { ,NN } , longlong[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123112 { , NN } ; 
  int _ivesli_123111 { , NN } ; 
  int[.] _isaa_120285_A { , NN } ; 
  int[.] _isaa_120282_B { , NN } ; 
  longlong _ctz_110964 { , NN } ; 
  bool _pinl_84416__flat_298 { , NN } ; 
  bool _ea_28_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_368 { , NN } ; 
  longlong _flat_369 { , NN } ; 
  longlong _flat_370 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_363 { , NN } ; 
  int[.] _flat_364 { , NN } ; 

  _isaa_120282_B = _shape_A_( B); 
  _isaa_120285_A = _shape_A_( A); 
  _flat_364 = _mul_SxV_( 0, _isaa_120285_A); 
  _flat_363 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_364 <= iv < _isaa_120285_A)
        { 
          _ea_28_res = _accu_( iv); 
          _ivesli_123112 = _vect2offset_( _isaa_120282_B, iv); 
          _flat_370 = _idx_sel_( _ivesli_123112, B); 
          _ivesli_123111 = _vect2offset_( _isaa_120285_A, iv); 
          _flat_369 = _idx_sel_( _ivesli_123111, A); 
          _ctz_110964 = _sub_SxS_( _flat_369, _flat_370); 
          _flat_368 = _eq_SxS_( _ctz_110964, 0LL); 
          _pinl_84416__flat_298 = _and_SxS_( _ea_28_res, _flat_368); 
        } : _pinl_84416__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_363); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( long[*] A { ,NN } , long[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123114 { , NN } ; 
  int _ivesli_123113 { , NN } ; 
  int[.] _isaa_120297_A { , NN } ; 
  int[.] _isaa_120294_B { , NN } ; 
  long _ctz_110968 { , NN } ; 
  bool _pinl_84417__flat_298 { , NN } ; 
  bool _ea_30_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_360 { , NN } ; 
  long _flat_361 { , NN } ; 
  long _flat_362 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_355 { , NN } ; 
  int[.] _flat_356 { , NN } ; 

  _isaa_120294_B = _shape_A_( B); 
  _isaa_120297_A = _shape_A_( A); 
  _flat_356 = _mul_SxV_( 0, _isaa_120297_A); 
  _flat_355 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_356 <= iv < _isaa_120297_A)
        { 
          _ea_30_res = _accu_( iv); 
          _ivesli_123114 = _vect2offset_( _isaa_120294_B, iv); 
          _flat_362 = _idx_sel_( _ivesli_123114, B); 
          _ivesli_123113 = _vect2offset_( _isaa_120297_A, iv); 
          _flat_361 = _idx_sel_( _ivesli_123113, A); 
          _ctz_110968 = _sub_SxS_( _flat_361, _flat_362); 
          _flat_360 = _eq_SxS_( _ctz_110968, 0l); 
          _pinl_84417__flat_298 = _and_SxS_( _ea_30_res, _flat_360); 
        } : _pinl_84417__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_355); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( short[*] A { ,NN } , short[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123116 { , NN } ; 
  int _ivesli_123115 { , NN } ; 
  int[.] _isaa_120309_A { , NN } ; 
  int[.] _isaa_120306_B { , NN } ; 
  short _ctz_110972 { , NN } ; 
  bool _pinl_84418__flat_298 { , NN } ; 
  bool _ea_32_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_352 { , NN } ; 
  short _flat_353 { , NN } ; 
  short _flat_354 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_347 { , NN } ; 
  int[.] _flat_348 { , NN } ; 

  _isaa_120306_B = _shape_A_( B); 
  _isaa_120309_A = _shape_A_( A); 
  _flat_348 = _mul_SxV_( 0, _isaa_120309_A); 
  _flat_347 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_348 <= iv < _isaa_120309_A)
        { 
          _ea_32_res = _accu_( iv); 
          _ivesli_123116 = _vect2offset_( _isaa_120306_B, iv); 
          _flat_354 = _idx_sel_( _ivesli_123116, B); 
          _ivesli_123115 = _vect2offset_( _isaa_120309_A, iv); 
          _flat_353 = _idx_sel_( _ivesli_123115, A); 
          _ctz_110972 = _sub_SxS_( _flat_353, _flat_354); 
          _flat_352 = _eq_SxS_( _ctz_110972, 0s); 
          _pinl_84418__flat_298 = _and_SxS_( _ea_32_res, _flat_352); 
        } : _pinl_84418__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_347); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( byte[*] A { ,NN } , byte[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123118 { , NN } ; 
  int _ivesli_123117 { , NN } ; 
  int[.] _isaa_120321_A { , NN } ; 
  int[.] _isaa_120318_B { , NN } ; 
  byte _ctz_110976 { , NN } ; 
  bool _pinl_84419__flat_298 { , NN } ; 
  bool _ea_34_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_344 { , NN } ; 
  byte _flat_345 { , NN } ; 
  byte _flat_346 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_339 { , NN } ; 
  int[.] _flat_340 { , NN } ; 

  _isaa_120318_B = _shape_A_( B); 
  _isaa_120321_A = _shape_A_( A); 
  _flat_340 = _mul_SxV_( 0, _isaa_120321_A); 
  _flat_339 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_340 <= iv < _isaa_120321_A)
        { 
          _ea_34_res = _accu_( iv); 
          _ivesli_123118 = _vect2offset_( _isaa_120318_B, iv); 
          _flat_346 = _idx_sel_( _ivesli_123118, B); 
          _ivesli_123117 = _vect2offset_( _isaa_120321_A, iv); 
          _flat_345 = _idx_sel_( _ivesli_123117, A); 
          _ctz_110976 = _sub_SxS_( _flat_345, _flat_346); 
          _flat_344 = _eq_SxS_( _ctz_110976, 0b); 
          _pinl_84419__flat_298 = _and_SxS_( _ea_34_res, _flat_344); 
        } : _pinl_84419__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_339); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( char[*] A { ,NN } , char[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123120 { , NN } ; 
  int _ivesli_123119 { , NN } ; 
  int[.] _isaa_120333_A { , NN } ; 
  int[.] _isaa_120330_B { , NN } ; 
  bool _pinl_84420__flat_298 { , NN } ; 
  bool _ea_36_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_336 { , NN } ; 
  char _flat_337 { , NN } ; 
  char _flat_338 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_331 { , NN } ; 
  int[.] _flat_332 { , NN } ; 

  _isaa_120330_B = _shape_A_( B); 
  _isaa_120333_A = _shape_A_( A); 
  _flat_332 = _mul_SxV_( 0, _isaa_120333_A); 
  _flat_331 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_332 <= iv < _isaa_120333_A)
        { 
          _ea_36_res = _accu_( iv); 
          _ivesli_123120 = _vect2offset_( _isaa_120330_B, iv); 
          _flat_338 = _idx_sel_( _ivesli_123120, B); 
          _ivesli_123119 = _vect2offset_( _isaa_120333_A, iv); 
          _flat_337 = _idx_sel_( _ivesli_123119, A); 
          _flat_336 = _eq_SxS_( _flat_337, _flat_338); 
          _pinl_84420__flat_298 = _and_SxS_( _ea_36_res, _flat_336); 
        } : _pinl_84420__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_331); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( bool[*] A { ,NN } , bool[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123122 { , NN } ; 
  int _ivesli_123121 { , NN } ; 
  int[.] _isaa_120343_A { , NN } ; 
  int[.] _isaa_120340_B { , NN } ; 
  bool _pinl_84421__flat_298 { , NN } ; 
  bool _ea_38_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_328 { , NN } ; 
  bool _flat_329 { , NN } ; 
  bool _flat_330 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_323 { , NN } ; 
  int[.] _flat_324 { , NN } ; 

  _isaa_120340_B = _shape_A_( B); 
  _isaa_120343_A = _shape_A_( A); 
  _flat_324 = _mul_SxV_( 0, _isaa_120343_A); 
  _flat_323 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_324 <= iv < _isaa_120343_A)
        { 
          _ea_38_res = _accu_( iv); 
          _ivesli_123122 = _vect2offset_( _isaa_120340_B, iv); 
          _flat_330 = _idx_sel_( _ivesli_123122, B); 
          _ivesli_123121 = _vect2offset_( _isaa_120343_A, iv); 
          _flat_329 = _idx_sel_( _ivesli_123121, A); 
          _flat_328 = _eq_SxS_( _flat_329, _flat_330); 
          _pinl_84421__flat_298 = _and_SxS_( _ea_38_res, _flat_328); 
        } : _pinl_84421__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_323); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( double[*] A { ,NN } , double[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123124 { , NN } ; 
  int _ivesli_123123 { , NN } ; 
  int[.] _isaa_120353_A { , NN } ; 
  int[.] _isaa_120350_B { , NN } ; 
  double _ctz_110980 { , NN } ; 
  bool _pinl_84422__flat_298 { , NN } ; 
  bool _ea_40_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_320 { , NN } ; 
  double _flat_321 { , NN } ; 
  double _flat_322 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_315 { , NN } ; 
  int[.] _flat_316 { , NN } ; 

  _isaa_120350_B = _shape_A_( B); 
  _isaa_120353_A = _shape_A_( A); 
  _flat_316 = _mul_SxV_( 0, _isaa_120353_A); 
  _flat_315 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_316 <= iv < _isaa_120353_A)
        { 
          _ea_40_res = _accu_( iv); 
          _ivesli_123124 = _vect2offset_( _isaa_120350_B, iv); 
          _flat_322 = _idx_sel_( _ivesli_123124, B); 
          _ivesli_123123 = _vect2offset_( _isaa_120353_A, iv); 
          _flat_321 = _idx_sel_( _ivesli_123123, A); 
          _ctz_110980 = _sub_SxS_( _flat_321, _flat_322); 
          _flat_320 = _eq_SxS_( _ctz_110980, 0.0); 
          _pinl_84422__flat_298 = _and_SxS_( _ea_40_res, _flat_320); 
        } : _pinl_84422__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_315); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( float[*] A { ,NN } , float[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123126 { , NN } ; 
  int _ivesli_123125 { , NN } ; 
  int[.] _isaa_120365_A { , NN } ; 
  int[.] _isaa_120362_B { , NN } ; 
  float _ctz_110984 { , NN } ; 
  bool _pinl_84423__flat_298 { , NN } ; 
  bool _ea_42_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_312 { , NN } ; 
  float _flat_313 { , NN } ; 
  float _flat_314 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_307 { , NN } ; 
  int[.] _flat_308 { , NN } ; 

  _isaa_120362_B = _shape_A_( B); 
  _isaa_120365_A = _shape_A_( A); 
  _flat_308 = _mul_SxV_( 0, _isaa_120365_A); 
  _flat_307 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_308 <= iv < _isaa_120365_A)
        { 
          _ea_42_res = _accu_( iv); 
          _ivesli_123126 = _vect2offset_( _isaa_120362_B, iv); 
          _flat_314 = _idx_sel_( _ivesli_123126, B); 
          _ivesli_123125 = _vect2offset_( _isaa_120365_A, iv); 
          _flat_313 = _idx_sel_( _ivesli_123125, A); 
          _ctz_110984 = _sub_SxS_( _flat_313, _flat_314); 
          _flat_312 = _eq_SxS_( _ctz_110984, 0.0f); 
          _pinl_84423__flat_298 = _and_SxS_( _ea_42_res, _flat_312); 
        } : _pinl_84423__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_307); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::eq(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool sacprelude_p::eq( int[*] A { ,NN } , int[*] B { ,NN } )
/*
 *  eq ::  ---
 */
{ 
  int _ivesli_123128 { , NN } ; 
  int _ivesli_123127 { , NN } ; 
  int[.] _isaa_120377_A { , NN } ; 
  int[.] _isaa_120374_B { , NN } ; 
  int _ctz_110988 { , NN } ; 
  bool _pinl_84424__flat_298 { , NN } ; 
  bool _ea_44_res { , NN } ; 
  bool res { , NN } ; 
  bool _flat_304 { , NN } ; 
  int _flat_305 { , NN } ; 
  int _flat_306 { , NN } ; 
  int[.] iv { , NN } ; 
  bool{1} _flat_299 { , NN } ; 
  int[.] _flat_300 { , NN } ; 

  _isaa_120374_B = _shape_A_( B); 
  _isaa_120377_A = _shape_A_( A); 
  _flat_300 = _mul_SxV_( 0, _isaa_120377_A); 
  _flat_299 = true; 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        (_flat_300 <= iv < _isaa_120377_A)
        { 
          _ea_44_res = _accu_( iv); 
          _ivesli_123128 = _vect2offset_( _isaa_120374_B, iv); 
          _flat_306 = _idx_sel_( _ivesli_123128, B); 
          _ivesli_123127 = _vect2offset_( _isaa_120377_A, iv); 
          _flat_305 = _idx_sel_( _ivesli_123127, A); 
          _ctz_110988 = _sub_SxS_( _flat_305, _flat_306); 
          _flat_304 = _eq_SxS_( _ctz_110988, 0); 
          _pinl_84424__flat_298 = _and_SxS_( _ea_44_res, _flat_304); 
        } : _pinl_84424__flat_298 ; 
         } :
      fold( sacprelude_p::and(), _flat_299); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::isPartitionIntersectNull(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[.] sacprelude_p::isPartitionIntersectNull( int[.] idxmin { ,NN } , int[.] idxmax { ,NN } , int[.] bound1 { ,NN } , int[.] bound2 { ,NN } )
/*
 *  isPartitionIntersectNull ::  ---
 */
{ 
  int[.] _ctz_110994 { , NN } ; 
  int[.] _ctz_110992 { , NN } ; 
  bool[.] z { , NN } ; 
  bool[.] _flat_459 { , NN } ; 
  bool[.] _flat_460 { , NN } ; 

  _ctz_110994 = _sub_VxV_( idxmin, bound2); 
  _flat_460 = _ge_VxS_( _ctz_110994, 0); 
  _ctz_110992 = _sub_VxV_( idxmax, bound1); 
  _flat_459 = _lt_VxS_( _ctz_110992, 0); 
  z = _or_VxV_( _flat_459, _flat_460); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::isPartitionIntersectNull(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[.] sacprelude_p::isPartitionIntersectNull( int idxmin { ,NN } , int idxmax { ,NN } , int[.] bound1 { ,NN } , int[.] bound2 { ,NN } )
/*
 *  isPartitionIntersectNull ::  ---
 */
{ 
  int[.] _ctz_111002 { , NN } ; 
  int[.] _ctz_111000 { , NN } ; 
  bool[.] z { , NN } ; 
  bool[.] _flat_461 { , NN } ; 
  bool[.] _flat_462 { , NN } ; 

  _ctz_111002 = _sub_SxV_( idxmin, bound2); 
  _flat_462 = _ge_VxS_( _ctz_111002, 0); 
  _ctz_111000 = _sub_SxV_( idxmax, bound1); 
  _flat_461 = _lt_VxS_( _ctz_111000, 0); 
  z = _or_VxV_( _flat_461, _flat_462); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::partitionMin(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int sacprelude_p::partitionMin( int x { ,NN } , int y { ,NN } )
/*
 *  partitionMin ::  ---
 */
{ 
  int z { , NN } ; 

  z = _min_SxS_( y, x); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::partitionMax(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int sacprelude_p::partitionMax( int x { ,NN } , int y { ,NN } )
/*
 *  partitionMax ::  ---
 */
{ 
  int z { , NN } ; 

  z = _max_SxS_( y, x); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::isPartitionIntersect1Part(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[.] sacprelude_p::isPartitionIntersect1Part( int[.] idxmin { ,NN } , int[.] idxmax { ,NN } , int[.] bound1 { ,NN } , int[.] bound2 { ,NN } )
/*
 *  isPartitionIntersect1Part ::  ---
 */
{ 
  int[.] _ctz_111010 { , NN } ; 
  int[.] _ctz_111008 { , NN } ; 
  bool[.] z { , NN } ; 
  bool[.] _flat_463 { , NN } ; 
  bool[.] _flat_464 { , NN } ; 

  _ctz_111010 = _sub_VxV_( idxmax, bound2); 
  _flat_464 = _le_VxS_( _ctz_111010, 0); 
  _ctz_111008 = _sub_VxV_( idxmin, bound1); 
  _flat_463 = _ge_VxS_( _ctz_111008, 0); 
  z = _and_VxV_( _flat_463, _flat_464); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::isPartitionIntersect1Part(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
bool[.] sacprelude_p::isPartitionIntersect1Part( int idxmin { ,NN } , int idxmax { ,NN } , int[.] bound1 { ,NN } , int[.] bound2 { ,NN } )
/*
 *  isPartitionIntersect1Part ::  ---
 */
{ 
  int[.] _ctz_111018 { , NN } ; 
  int[.] _ctz_111016 { , NN } ; 
  bool[.] z { , NN } ; 
  bool[.] _flat_465 { , NN } ; 
  bool[.] _flat_466 { , NN } ; 

  _ctz_111018 = _sub_SxV_( idxmax, bound2); 
  _flat_466 = _le_VxS_( _ctz_111018, 0); 
  _ctz_111016 = _sub_SxV_( idxmin, bound1); 
  _flat_465 = _ge_VxS_( _ctz_111016, 0); 
  z = _and_VxV_( _flat_465, _flat_466); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::partitionIntersectMax(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.] sacprelude_p::partitionIntersectMax( int[.] PWLbound1 { ,NN } , int[.] ivmin { ,NN } )
/*
 *  partitionIntersectMax ::  ---
 */
{ 
  int[.] z { , NN } ; 

  z = _max_VxV_( ivmin, PWLbound1); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::partitionIntersectMax(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.] sacprelude_p::partitionIntersectMax( int[.] PWLbound1 { ,NN } , int ivmin { ,NN } )
/*
 *  partitionIntersectMax ::  ---
 */
{ 
  int[.] z { , NN } ; 

  z = _max_SxV_( ivmin, PWLbound1); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::partitionIntersectMin(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.] sacprelude_p::partitionIntersectMin( int[.] PWLbound2 { ,NN } , int[.] ivmax { ,NN } )
/*
 *  partitionIntersectMin ::  ---
 */
{ 
  int[.] z { , NN } ; 

  z = _min_VxV_( ivmax, PWLbound2); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::partitionIntersectMin(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.] sacprelude_p::partitionIntersectMin( int[.] PWLbound2 { ,NN } , int ivmax { ,NN } )
/*
 *  partitionIntersectMin ::  ---
 */
{ 
  int[.] z { , NN } ; 

  z = _min_SxV_( ivmax, PWLbound2); 
  return( z); 
}



/****************************************************************************
 * sacprelude_p::prod(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int sacprelude_p::prod( int[.] v { ,NN } )
/*
 *  prod ::  ---
 */
{ 
  int _ivesli_123129 { , NN } ; 
  int[1] _isaa_120510_v { , NN } ; 
  int{1} _isaa_120509_v { , NN } ; 
  int _pinl_84425__flat_411 { , NN } ; 
  int _wlbsc_564_sc_e { , NN } ; 
  int _ea_46_res { , NN } ; 
  int res { , NN } ; 
  int _flat_417 { , NN } ; 
  int i { , NN } ; 
  int[1] _flat_416 { , NN } ; 
  int{0} _flat_414 { , NN } ; 

  _isaa_120509_v = 1; 
  _isaa_120510_v = _shape_A_( v); 
  _flat_414 = 0; 
  _wlbsc_564_sc_e = _idx_sel_( _flat_414, _isaa_120510_v); 
  res = with      /** FOLDABLE (all gen's const) **/
      /** REFERENCED: 1 (total num refs) **/
 {
        /* Partn */
        ([ 0 ] <= _flat_416=[i] < [ _wlbsc_564_sc_e ] genwidth [ _wlbsc_564_sc_e ])
        { 
          _ea_46_res = _accu_( _flat_416); 
          _ivesli_123129 = _idxs2offset_( _isaa_120510_v, i); 
          _flat_417 = _idx_sel_( _ivesli_123129, v); 
          _pinl_84425__flat_411 = _mul_SxS_( _ea_46_res, _flat_417); 
        } : _pinl_84425__flat_411 ; 
         } :
      fold( sacprelude_p::*(), _isaa_120509_v); 
  return( res); 
}



/****************************************************************************
 * sacprelude_p::partitionSlicer(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.], int[.], int[.], int[.] sacprelude_p::partitionSlicer( int[.] min { ,NN } , int[.] max { ,NN } , int axis { ,NN } , int[.] lb { ,NN } , int[.] ub { ,NN } )
/*
 *  partitionSlicer ::  ---
 */
{ 
  int _pinl_84426_z { , NN } ; 
  int[.] new_max { , NN } ; 
  int[.] new_min { , NN } ; 
  int[.] min_upper { , NN } ; 
  int[.] max_lower { , NN } ; 
  int _flat_435 { , NN } ; 
  int lb_i { , NN } ; 

  lb_i = _idx_sel_( axis, lb); 
  _flat_435 = _idx_sel_( axis, ub); 
  _pinl_84426_z = _max_SxS_( _flat_435, lb_i); 
  max_lower = _idx_modarray_AxSxS_( max, axis, lb_i); 
  min_upper = _idx_modarray_AxSxS_( min, axis, _pinl_84426_z); 
  new_min = _idx_modarray_AxSxS_( min, axis, lb_i); 
  new_max = _idx_modarray_AxSxS_( max, axis, _pinl_84426_z); 
  return( max_lower, min_upper, new_min, new_max); 
}



/****************************************************************************
 * sacprelude_p::gridFiller(...) [ body ]
 ****************************************************************************/
/* sticky */
inline
int[.], int[.], int[.] sacprelude_p::gridFiller( int[.] lb { ,NN } , int[.] ub { ,NN } , int[.] wdth { ,NN } , int dim { ,NN } , int[.] maxwidth { ,NN } )
/*
 *  gridFiller ::  ---
 */
{ 
  int _pinl_84427_z { , NN } ; 
  int _pinl_84428_z { , NN } ; 
  int[.] nmaxwidth { , NN } ; 
  int[.] nwidth { , NN } ; 
  int[.] nlb { , NN } ; 
  int _flat_448 { , NN } ; 
  int _flat_449 { , NN } ; 
  int _flat_441 { , NN } ; 
  int _flat_442 { , NN } ; 
  int _flat_444 { , NN } ; 
  int _flat_446 { , NN } ; 

  _flat_446 = _idx_sel_( dim, ub); 
  _flat_444 = _idx_sel_( dim, wdth); 
  _flat_442 = _idx_sel_( dim, lb); 
  _flat_441 = _add_SxS_( _flat_442, _flat_444); 
  _pinl_84427_z = _min_SxS_( _flat_441, _flat_446); 
  _flat_449 = _idx_sel_( dim, maxwidth); 
  _flat_448 = _sub_SxS_( _flat_449, _flat_444); 
  _pinl_84428_z = _max_SxS_( _flat_448, 0); 
  nlb = _idx_modarray_AxSxS_( lb, dim, _pinl_84427_z); 
  nwidth = _idx_modarray_AxSxS_( maxwidth, dim, _pinl_84428_z); 
  nmaxwidth = _idx_modarray_AxSxS_( maxwidth, dim, _flat_444); 
  return( nlb, nwidth, nmaxwidth); 
}



/****************************************************************************
 * sacprelude_p::*(...) [ body ]
 ****************************************************************************/
inline
int sacprelude_p::*( int a { ,NN } , int b { ,NN } )
/*
 *  * ::  ---
 */
{ 
  int _flat_411 { , NN } ; 

  _flat_411 = _mul_SxS_( b, a); 
  return( _flat_411); 
}



/****************************************************************************
 * sacprelude_p::and(...) [ body ]
 ****************************************************************************/
inline
bool sacprelude_p::and( bool a { ,NN } , bool b { ,NN } )
/*
 *  and ::  ---
 */
{ 
  bool _flat_298 { , NN } ; 

  _flat_298 = _and_SxS_( b, a); 
  return( _flat_298); 
}



/****************************************************************************
 * UTDScalarB::andBBB(...) [ body ]
 ****************************************************************************/
inline
bool UTDScalarB::andBBB( bool x { ,NN } , bool y { ,NN } )
/*
 *  andBBB ::  ---
 */
{ 
  bool _pinl_2323__flat_98 { , NN } ; 

  _pinl_2323__flat_98 = _and_SxS_( y, x); 
  return( _pinl_2323__flat_98); 
}



/****************************************************************************
 * ArrayIO::show(...) [ body ]
 ****************************************************************************/
inline
hidden * ArrayIO::show( hidden *_rso_100_stdout { ,NN } , bool[+] arr { ,NN } )
/*
 *  show ::  ---
 */
{ 
  int[.] _isaa_120596_carr { , NN } ; 
  int _isaa_120595_carr { , NN } ; 
  hidden _rso_100_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */
  char[+] carr { , NN } ; 

  carr = ArrayFormat::format( arr) ; 
  _isaa_120595_carr = _dim_A_( carr); 
  _isaa_120596_carr = _shape_A_( carr); 
  _rso_100_stdout__SSA0_1 = ArrayIO::showarray( _rso_100_stdout, _isaa_120595_carr, _isaa_120596_carr, carr) ; 
  return( _rso_100_stdout__SSA0_1); 
}



/****************************************************************************
 * UTDScalarB:StdIO::show(...) [ body ]
 ****************************************************************************/
inline
hidden *, hidden * UTDScalarB:StdIO::show( hidden *_rso_322_TheTerminal { ,NN } , hidden *_rso_321_stdout { ,NN } , bool[.] arr { ,NN } )
/*
 *  show ::  ---
 */
{ 
  hidden _rso_321_stdout__SSA0_1 { , NN } ;  /* declared: TermFile::TermFile */

  _rso_321_stdout__SSA0_1 = ArrayIO::show( _rso_321_stdout, arr) ; 
  return( _rso_322_TheTerminal, _rso_321_stdout__SSA0_1); 
}



/****************************************************************************
 * ScalarArith::&(...) [ body ]
 ****************************************************************************/
inline
bool ScalarArith::&( bool A { ,NN } , bool B { ,NN } )
/*
 *  & ::  ---
 */
{ 
  bool _flat_98 { , NN } ; 

  _flat_98 = _and_SxS_( B, A); 
  return( _flat_98); 
}


/*-----------------------------------------------*/

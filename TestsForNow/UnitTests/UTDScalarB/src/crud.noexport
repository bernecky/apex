
/*-----------------------------------------------*/

module UTDScalarB;

export { UTDScalarB_mainXXI};


/*
 *  type definitions
 */

external typedef sacprelude_p::SACarg;

external SACarg SACARGcopy( SACarg);
external void SACARGfree( SACarg);

external classtype World::World;
external classtype Terminal::Terminal;
external classtype TermFile::TermFile;
external typedef String::string;

external string copy_string( string);
external void free_string( string);



/*
 *  prototypes for externals (FUNDECS)
 */

external hidden *, hidden * TermFile::printf( hidden *_rso_69_TheTerminal { ,NN } , hidden *_rso_68_stdout { ,NN } , enclosed(String::string) FORMAT { ,NN } , ...)
/*
 *  printf ::  ---
 */;

external enclosed(String::string) String::to_string( char[.] A { ,NN } , int LENGTH { ,NN } )
/*
 *  to_string ::  ---
 */;

external hidden * ArrayIO::showarray( hidden *stream { ,NN } , int d { ,NN } , int[.] s { ,NN } , char[*] a { ,NN } )
/*
 *  showarray ::  ---
 */;



/*
 *  prototypes for locals (FUNDEFS)
 */

external /* sticky */
int[.], int[.], int[.], int[.] sacprelude_p::partitionSlicer( int[*] min { ,NN } , int[*] max { ,NN } , int[*] axis { ,NN } , int[*] lb { ,NN } , int[*] ub { ,NN } )
/*
 *  partitionSlicer ::  ---
 */;

external /* sticky */
int[.] sacprelude_p::partitionIntersectMax( int[*] PWLbound1 { ,NN } , int[*] ivmin { ,NN } )
/*
 *  partitionIntersectMax ::  ---
 */;

external /* sticky */
bool[.] sacprelude_p::isPartitionIntersectNull( int[*] idxmin { ,NN } , int[*] idxmax { ,NN } , int[*] bound1 { ,NN } , int[*] bound2 { ,NN } )
/*
 *  isPartitionIntersectNull ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , int[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
float[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , float[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
double[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , double[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
bool[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
char[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , char[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
byte[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
short[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , short[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
long[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , long[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
longlong[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
ubyte[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
ushort[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
uint[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
ulong[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
ulonglong[*] sacprelude_p::_selSxADistmemLocal( int[*] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  _selSxADistmemLocal ::  ---
 */;

external /* sticky */
int[.] sacprelude_p::partitionIntersectMin( int[*] PWLbound2 { ,NN } , int[*] ivmax { ,NN } )
/*
 *  partitionIntersectMin ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::adjustLacFunParams( bool[*] p { ,NN } , int[*] i { ,NN } , int[*] iv { ,NN } )
/*
 *  adjustLacFunParams ::  ---
 */;

external /* sticky */
int sacprelude_p::prod( int[*] v { ,NN } )
/*
 *  prod ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::adjustLacFunParamsReshape( bool[*] p { ,NN } , int[*] i { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  adjustLacFunParamsReshape ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( int[*] A { ,NN } , int[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( float[*] A { ,NN } , float[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( double[*] A { ,NN } , double[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( bool[*] A { ,NN } , bool[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( char[*] A { ,NN } , char[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( byte[*] A { ,NN } , byte[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( short[*] A { ,NN } , short[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( long[*] A { ,NN } , long[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( longlong[*] A { ,NN } , longlong[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( ubyte[*] A { ,NN } , ubyte[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( ushort[*] A { ,NN } , ushort[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( uint[*] A { ,NN } , uint[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( ulong[*] A { ,NN } , ulong[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
bool sacprelude_p::eq( ulonglong[*] A { ,NN } , ulonglong[*] B { ,NN } )
/*
 *  eq ::  ---
 */;

external /* sticky */
int[.], int[.], int[.] sacprelude_p::gridFiller( int[*] lb { ,NN } , int[*] ub { ,NN } , int[*] wdth { ,NN } , int[*] dim { ,NN } , int[*] maxwidth { ,NN } )
/*
 *  gridFiller ::  ---
 */;

external /* sticky */
bool[.] sacprelude_p::isPartitionIntersect1Part( int[*] idxmin { ,NN } , int[*] idxmax { ,NN } , int[*] bound1 { ,NN } , int[*] bound2 { ,NN } )
/*
 *  isPartitionIntersect1Part ::  ---
 */;

external /* sticky */
int{0} sacprelude_p::zero( int[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
double{0.0...} sacprelude_p::zero( double[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
float{0.0...} sacprelude_p::zero( float[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
char{ } sacprelude_p::zero( char[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
bool{0} sacprelude_p::zero( bool[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
byte{} sacprelude_p::zero( byte[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
short{0} sacprelude_p::zero( short[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
long{0} sacprelude_p::zero( long[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
longlong{0} sacprelude_p::zero( longlong[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
ubyte{} sacprelude_p::zero( ubyte[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
ushort{0} sacprelude_p::zero( ushort[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
uint{0} sacprelude_p::zero( uint[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
ulong{0} sacprelude_p::zero( ulong[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
ulonglong{0} sacprelude_p::zero( ulonglong[*] A { ,NN } )
/*
 *  zero ::  ---
 */;

external /* sticky */
int sacprelude_p::partitionMax( int[*] x { ,NN } , int[*] y { ,NN } )
/*
 *  partitionMax ::  ---
 */;

external /* sticky */
int sacprelude_p::partitionMin( int[*] x { ,NN } , int[*] y { ,NN } )
/*
 *  partitionMin ::  ---
 */;

external /* sticky */
int sacprelude_p::++( int[*] a { ,NN } )
/*
 *  ++ ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::sel( int[*] idx { ,NN } , int[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
float[*] sacprelude_p::sel( int[*] idx { ,NN } , float[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
double[*] sacprelude_p::sel( int[*] idx { ,NN } , double[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
bool[*] sacprelude_p::sel( int[*] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
char[*] sacprelude_p::sel( int[*] idx { ,NN } , char[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
byte[*] sacprelude_p::sel( int[*] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
short[*] sacprelude_p::sel( int[*] idx { ,NN } , short[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
long[*] sacprelude_p::sel( int[*] idx { ,NN } , long[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
longlong[*] sacprelude_p::sel( int[*] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ubyte[*] sacprelude_p::sel( int[*] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ushort[*] sacprelude_p::sel( int[*] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
uint[*] sacprelude_p::sel( int[*] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ulong[*] sacprelude_p::sel( int[*] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
ulonglong[*] sacprelude_p::sel( int[*] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  sel ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , int[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
float[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , float[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
double[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , double[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
bool[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , bool[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
char[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , char[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
byte[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , byte[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
short[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , short[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
long[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , long[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
longlong[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , longlong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
ubyte[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , ubyte[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
ushort[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , ushort[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
uint[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , uint[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
ulong[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , ulong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external /* sticky */
ulonglong[*] sacprelude_p::_selVxADistmemLocal( int[*] idx { ,NN } , ulonglong[*] array { ,NN } )
/*
 *  _selVxADistmemLocal ::  ---
 */;

external hidden * World:_INIT::init_TheWorld( hidden *_OI_object { ,NN } )
/*
 *  init_TheWorld ::  ---
 */;

external hidden *, hidden * Terminal:_INIT::init_TheTerminal( hidden *_rso_5_TheWorld { ,NN } , hidden *_OI_object { ,NN } )
/*
 *  init_TheTerminal ::  ---
 */;

external hidden *, hidden * TermFile:_INIT::init_stdout( hidden *_rso_43_TheTerminal { ,NN } , hidden *_OI_object { ,NN } )
/*
 *  init_stdout ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::adjustLacFunParams( bool[*] p { ,NN } , int[*] i { ,NN } , int[.] iv { ,NN } )
/*
 *  adjustLacFunParams ::  ---
 */;

external /* sticky */
int[*] sacprelude_p::adjustLacFunParamsReshape( bool[*] p { ,NN } , int[*] i { ,NN } , int[.] iv { ,NN } , int[.] shp { ,NN } )
/*
 *  adjustLacFunParamsReshape ::  ---
 */;

external /* sticky */
int sacprelude_p::++( int a { ,NN } )
/*
 *  ++ ::  ---
 */;

external char[+] ArrayFormat::format( bool[+] y { ,NN } )
/*
 *  format ::  ---
 */;

external char[+] ArrayFormat::format( int[+] y { ,NN } )
/*
 *  format ::  ---
 */;



/*
 *  global objects
 */

external hidden World::TheWorld;

external hidden Terminal::TheTerminal;

external hidden TermFile::stdout;



/*
 *  function definitions (FUNDEFS)
 */



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::leBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[*] UTDScalarB::leBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  leBBB ::  ---
 */
{ 
  bool[*] _cwc_1336 { , NN } ; 
  bool _cwc_1389 { , NN } ; 
  int _cwc_1367 { , NN } ; 

  _cwc_1367 = _dim_A_( x); 
  _cwc_1389 = _eq_SxS_( _cwc_1367, 0); 
  _cwc_1336 = UTDScalarB::leBBB__Cond_20( _cwc_1389, y, x) ; 
  return( _cwc_1336); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::leBBB__Cond_20(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::leBBB__Cond_20( bool _cwc_1389 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  leBBB__Cond_20 ::  ---
 */
{ 
  bool[*] _cwc_1336__SSA1_2 { , NN } ; 
  bool[*] _cwc_1336__SSA1_1 { , NN } ; 
  int _cwc_1364 { , NN } ; 
  bool _cwc_1366 { , NN } ; 
  int _cwc_1384 { , NN } ; 
  bool _cwc_1387 { , NN } ; 
  bool[*] _cwc_1336 { , NN } ; 

  if (_cwc_1389) 
  { 
    _cwc_1384 = _dim_A_( y); 
    _cwc_1387 = _eq_SxS_( _cwc_1384, 0); 
    _cwc_1336 = UTDScalarB::_dup_6234_leBBB__Cond_11( _cwc_1387, y, x) ; 
  }
  else
  { 
    _cwc_1364 = _dim_A_( x); 
    _cwc_1366 = _gt_SxS_( _cwc_1364, 0); 
    _cwc_1336__SSA1_1 = UTDScalarB::_dup_6230_leBBB__Cond_19( _cwc_1366, y, x) ; 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1389 ? _cwc_1336 : _cwc_1336__SSA1_1 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6230_leBBB__Cond_19(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6230_leBBB__Cond_19( bool _cwc_1366 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6230_leBBB__Cond_19 ::  ---
 */
{ 
  bool[*] _cwc_1336__SSA1_2 { , NN } ; 
  bool[*] _cwc_1336__SSA1_1 { , NN } ; 
  int _cwc_1349 { , NN } ; 
  bool _cwc_1363 { , NN } ; 
  bool[*] _cwc_1336 { , NN } ; 

  if (_cwc_1366) 
  { 
    _cwc_1349 = _dim_A_( x); 
    _cwc_1363 = _eq_SxS_( _cwc_1349, 3); 
    _cwc_1336 = UTDScalarB::_dup_6229_leBBB__Cond_18( _cwc_1363, y, x) ; 
  }
  else
  { 
    _cwc_1336__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::leBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1366 ? _cwc_1336 : _cwc_1336__SSA1_1 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6229_leBBB__Cond_18(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6229_leBBB__Cond_18( bool _cwc_1363 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6229_leBBB__Cond_18 ::  ---
 */
{ 
  bool[*] _cwc_1336__SSA1_2 { , NN } ; 
  bool[*] _cwc_1336__SSA1_1 { , NN } ; 
  int _cwc_1345 { , NN } ; 
  bool _cwc_1348 { , NN } ; 
  int _cwc_1358 { , NN } ; 
  bool _cwc_1361 { , NN } ; 
  bool[*] _cwc_1336 { , NN } ; 

  if (_cwc_1363) 
  { 
    _cwc_1358 = _dim_A_( y); 
    _cwc_1361 = _eq_SxS_( _cwc_1358, 0); 
    _cwc_1336 = UTDScalarB::_dup_6228_leBBB__Cond_14( _cwc_1361, y, x) ; 
  }
  else
  { 
    _cwc_1345 = _dim_A_( y); 
    _cwc_1348 = _eq_SxS_( _cwc_1345, 0); 
    _cwc_1336__SSA1_1 = UTDScalarB::_dup_6225_leBBB__Cond_17( _cwc_1348, y, x) ; 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1363 ? _cwc_1336 : _cwc_1336__SSA1_1 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6225_leBBB__Cond_17(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6225_leBBB__Cond_17( bool _cwc_1348 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6225_leBBB__Cond_17 ::  ---
 */
{ 
  bool[*] _cwc_1336__SSA1_2 { , NN } ; 
  bool[*] _cwc_1336__SSA1_1 { , NN } ; 
  int _cwc_1342 { , NN } ; 
  bool _cwc_1344 { , NN } ; 
  bool[+] _cwc_1346 { , NN } ; 

  if (_cwc_1348) 
  { 
    _cwc_1346 = UTDScalarB::leBBB( x, y) ; 
  }
  else
  { 
    _cwc_1342 = _dim_A_( y); 
    _cwc_1344 = _gt_SxS_( _cwc_1342, 0); 
    _cwc_1336__SSA1_1 = UTDScalarB::_dup_6224_leBBB__Cond_16( _cwc_1344, y, x) ; 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1348 ? _cwc_1346 : _cwc_1336__SSA1_1 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6224_leBBB__Cond_16(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6224_leBBB__Cond_16( bool _cwc_1344 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6224_leBBB__Cond_16 ::  ---
 */
{ 
  bool[*] _cwc_1336__SSA1_2 { , NN } ; 
  bool[*] _cwc_1336__SSA1_1 { , NN } ; 
  int _cwc_1338 { , NN } ; 
  bool _cwc_1341 { , NN } ; 
  bool[+] _cwc_1336 { , NN } ; 

  if (_cwc_1344) 
  { 
    _cwc_1338 = _dim_A_( y); 
    _cwc_1341 = _eq_SxS_( _cwc_1338, 3); 
    _cwc_1336 = UTDScalarB::_dup_6223_leBBB__Cond_15( _cwc_1341, y, x) ; 
  }
  else
  { 
    _cwc_1336__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::leBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1344 ? _cwc_1336 : _cwc_1336__SSA1_1 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6223_leBBB__Cond_15(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6223_leBBB__Cond_15( bool _cwc_1341 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6223_leBBB__Cond_15 ::  ---
 */
{ 
  bool[+] _cwc_1336__SSA1_2 { , NN } ; 
  bool[+] _cwc_1337 { , NN } ; 
  bool[+] _cwc_1339 { , NN } ; 

  if (_cwc_1341) 
  { 
    _cwc_1339 = UTDScalarB::leBBB( x, y) ; 
  }
  else
  { 
    _cwc_1337 = UTDScalarB::leBBB( x, y) ; 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1341 ? _cwc_1339 : _cwc_1337 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6228_leBBB__Cond_14(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6228_leBBB__Cond_14( bool _cwc_1361 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6228_leBBB__Cond_14 ::  ---
 */
{ 
  bool[*] _cwc_1336__SSA1_2 { , NN } ; 
  bool[*] _cwc_1336__SSA1_1 { , NN } ; 
  int _cwc_1355 { , NN } ; 
  bool _cwc_1357 { , NN } ; 
  bool[.,.,.] _cwc_1359 { , NN } ; 

  if (_cwc_1361) 
  { 
    _cwc_1359 = UTDScalarB::leBBB( x, y) ; 
  }
  else
  { 
    _cwc_1355 = _dim_A_( y); 
    _cwc_1357 = _gt_SxS_( _cwc_1355, 0); 
    _cwc_1336__SSA1_1 = UTDScalarB::_dup_6227_leBBB__Cond_13( _cwc_1357, y, x) ; 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1361 ? _cwc_1359 : _cwc_1336__SSA1_1 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6227_leBBB__Cond_13(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6227_leBBB__Cond_13( bool _cwc_1357 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6227_leBBB__Cond_13 ::  ---
 */
{ 
  bool[*] _cwc_1336__SSA1_2 { , NN } ; 
  bool[*] _cwc_1336__SSA1_1 { , NN } ; 
  int _cwc_1351 { , NN } ; 
  bool _cwc_1354 { , NN } ; 
  bool[+] _cwc_1336 { , NN } ; 

  if (_cwc_1357) 
  { 
    _cwc_1351 = _dim_A_( y); 
    _cwc_1354 = _eq_SxS_( _cwc_1351, 3); 
    _cwc_1336 = UTDScalarB::_dup_6226_leBBB__Cond_12( _cwc_1354, y, x) ; 
  }
  else
  { 
    _cwc_1336__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::leBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1357 ? _cwc_1336 : _cwc_1336__SSA1_1 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6226_leBBB__Cond_12(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6226_leBBB__Cond_12( bool _cwc_1354 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6226_leBBB__Cond_12 ::  ---
 */
{ 
  bool[+] _cwc_1336__SSA1_2 { , NN } ; 
  bool[+] _cwc_1350 { , NN } ; 
  bool[.,.,.] _cwc_1352 { , NN } ; 

  if (_cwc_1354) 
  { 
    _cwc_1352 = UTDScalarB::leBBB( x, y) ; 
  }
  else
  { 
    _cwc_1350 = UTDScalarB::leBBB( x, y) ; 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1354 ? _cwc_1352 : _cwc_1350 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6234_leBBB__Cond_11(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6234_leBBB__Cond_11( bool _cwc_1387 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6234_leBBB__Cond_11 ::  ---
 */
{ 
  bool[*] _cwc_1336__SSA1_2 { , NN } ; 
  bool[*] _cwc_1336__SSA1_1 { , NN } ; 
  int _cwc_1381 { , NN } ; 
  bool _cwc_1383 { , NN } ; 
  bool _cwc_1385 { , NN } ; 

  if (_cwc_1387) 
  { 
    _cwc_1385 = UTDScalarB::leBBB( x, y) ; 
  }
  else
  { 
    _cwc_1381 = _dim_A_( y); 
    _cwc_1383 = _gt_SxS_( _cwc_1381, 0); 
    _cwc_1336__SSA1_1 = UTDScalarB::_dup_6233_leBBB__Cond_10( _cwc_1383, y, x) ; 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1387 ? _cwc_1385 : _cwc_1336__SSA1_1 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6233_leBBB__Cond_10(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6233_leBBB__Cond_10( bool _cwc_1383 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6233_leBBB__Cond_10 ::  ---
 */
{ 
  bool[*] _cwc_1336__SSA1_2 { , NN } ; 
  bool[*] _cwc_1336__SSA1_1 { , NN } ; 
  int _cwc_1369 { , NN } ; 
  bool _cwc_1380 { , NN } ; 
  bool[+] _cwc_1336 { , NN } ; 

  if (_cwc_1383) 
  { 
    _cwc_1369 = _dim_A_( y); 
    _cwc_1380 = _eq_SxS_( _cwc_1369, 1); 
    _cwc_1336 = UTDScalarB::_dup_6232_leBBB__Cond_9( _cwc_1380, y, x) ; 
  }
  else
  { 
    _cwc_1336__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::leBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1383 ? _cwc_1336 : _cwc_1336__SSA1_1 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6232_leBBB__Cond_9(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6232_leBBB__Cond_9( bool _cwc_1380 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6232_leBBB__Cond_9 ::  ---
 */
{ 
  int _ivesli_172974 { , NN } ; 
  bool[+] _cwc_1336__SSA1_2 { , NN } ; 
  bool[+] _cwc_1368 { , NN } ; 
  int[.] _cwc_1371 { , NN } ; 
  int _cwc_1375 { , NN } ; 
  bool _cwc_1377 { , NN } ; 
  bool[+] _cwc_1336 { , NN } ; 

  if (_cwc_1380) 
  { 
    _cwc_1371 = _shape_A_( y); 
    _ivesli_172974 = 0; 
    _cwc_1375 = _idx_sel_( _ivesli_172974, _cwc_1371); 
    _cwc_1377 = _eq_SxS_( _cwc_1375, 4); 
    _cwc_1336 = UTDScalarB::_dup_6231_leBBB__Cond_8( _cwc_1377, y, x) ; 
  }
  else
  { 
    _cwc_1368 = UTDScalarB::leBBB( x, y) ; 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1380 ? _cwc_1336 : _cwc_1368 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6231_leBBB__Cond_8(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6231_leBBB__Cond_8( bool _cwc_1378 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6231_leBBB__Cond_8 ::  ---
 */
{ 
  bool[+] _cwc_1336__SSA1_2 { , NN } ; 
  bool[+] _cwc_1370 { , NN } ; 
  bool[4] _cwc_1372 { , NN } ; 

  if (_cwc_1378) 
  { 
    _cwc_1372 = UTDScalarB::leBBB( x, y) ; 
  }
  else
  { 
    _cwc_1370 = UTDScalarB::leBBB( x, y) ; 
  }
  _cwc_1336__SSA1_2 = ( _cwc_1378 ? _cwc_1372 : _cwc_1370 ); 
  return( _cwc_1336__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::NEXXB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[14] UTDScalarB::NEXXB()
/*
 *  NEXXB ::  ---
 */
{ 
  bool[14] _cwc_1391 { , NN } ; 

  _cwc_1391 = UTDScalarB::NEXXB() ; 
  return( _cwc_1391); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::jotdotneBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[+] UTDScalarB::jotdotneBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  jotdotneBBB ::  ---
 */
{ 
  bool[+] _cwc_1392 { , NN } ; 
  bool _cwc_1453 { , NN } ; 
  int _cwc_1451 { , NN } ; 

  _cwc_1451 = _dim_A_( x); 
  _cwc_1453 = _gt_SxS_( _cwc_1451, 0); 
  _cwc_1392 = UTDScalarB::jotdotneBBB__Cond_32( _cwc_1453, y, x) ; 
  return( _cwc_1392); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::jotdotneBBB__Cond_32(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::jotdotneBBB__Cond_32( bool _cwc_1453 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  jotdotneBBB__Cond_32 ::  ---
 */
{ 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1392__SSA1_1 { , NN } ; 
  int _cwc_1409 { , NN } ; 
  bool _cwc_1450 { , NN } ; 
  bool[+] _cwc_1392 { , NN } ; 

  if (_cwc_1453) 
  { 
    _cwc_1409 = _dim_A_( x); 
    _cwc_1450 = _eq_SxS_( _cwc_1409, 1); 
    _cwc_1392 = UTDScalarB::_dup_6270_jotdotneBBB__Cond_31( _cwc_1450, y, x) ; 
  }
  else
  { 
    _cwc_1392__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotneBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1453 ? _cwc_1392 : _cwc_1392__SSA1_1 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6270_jotdotneBBB__Cond_31(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6270_jotdotneBBB__Cond_31( bool _cwc_1450 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6270_jotdotneBBB__Cond_31 ::  ---
 */
{ 
  int _ivesli_172976 { , NN } ; 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1392__SSA1_1 { , NN } ; 
  int _cwc_1406 { , NN } ; 
  bool _cwc_1408 { , NN } ; 
  int[.] _cwc_1426 { , NN } ; 
  int _cwc_1445 { , NN } ; 
  bool _cwc_1447 { , NN } ; 
  bool[+] _cwc_1392 { , NN } ; 

  if (_cwc_1450) 
  { 
    _cwc_1426 = _shape_A_( x); 
    _ivesli_172976 = 0; 
    _cwc_1445 = _idx_sel_( _ivesli_172976, _cwc_1426); 
    _cwc_1447 = _eq_SxS_( _cwc_1445, 4); 
    _cwc_1392 = UTDScalarB::_dup_6269_jotdotneBBB__Cond_27( _cwc_1447, y, x) ; 
  }
  else
  { 
    _cwc_1406 = _dim_A_( y); 
    _cwc_1408 = _gt_SxS_( _cwc_1406, 0); 
    _cwc_1392__SSA1_1 = UTDScalarB::_dup_6262_jotdotneBBB__Cond_30( _cwc_1408, y, x) ; 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1450 ? _cwc_1392 : _cwc_1392__SSA1_1 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6262_jotdotneBBB__Cond_30(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6262_jotdotneBBB__Cond_30( bool _cwc_1408 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6262_jotdotneBBB__Cond_30 ::  ---
 */
{ 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1392__SSA1_1 { , NN } ; 
  int _cwc_1394 { , NN } ; 
  bool _cwc_1405 { , NN } ; 
  bool[+] _cwc_1392 { , NN } ; 

  if (_cwc_1408) 
  { 
    _cwc_1394 = _dim_A_( y); 
    _cwc_1405 = _eq_SxS_( _cwc_1394, 1); 
    _cwc_1392 = UTDScalarB::_dup_6261_jotdotneBBB__Cond_29( _cwc_1405, y, x) ; 
  }
  else
  { 
    _cwc_1392__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotneBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1408 ? _cwc_1392 : _cwc_1392__SSA1_1 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6261_jotdotneBBB__Cond_29(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6261_jotdotneBBB__Cond_29( bool _cwc_1405 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6261_jotdotneBBB__Cond_29 ::  ---
 */
{ 
  int _ivesli_172978 { , NN } ; 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1393 { , NN } ; 
  int[.] _cwc_1396 { , NN } ; 
  int _cwc_1400 { , NN } ; 
  bool _cwc_1402 { , NN } ; 
  bool[+] _cwc_1392 { , NN } ; 

  if (_cwc_1405) 
  { 
    _cwc_1396 = _shape_A_( y); 
    _ivesli_172978 = 0; 
    _cwc_1400 = _idx_sel_( _ivesli_172978, _cwc_1396); 
    _cwc_1402 = _eq_SxS_( _cwc_1400, 4); 
    _cwc_1392 = UTDScalarB::_dup_6260_jotdotneBBB__Cond_28( _cwc_1402, y, x) ; 
  }
  else
  { 
    _cwc_1393 = UTDScalarB::jotdotneBBB( x, y) ; 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1405 ? _cwc_1392 : _cwc_1393 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6260_jotdotneBBB__Cond_28(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6260_jotdotneBBB__Cond_28( bool _cwc_1403 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6260_jotdotneBBB__Cond_28 ::  ---
 */
{ 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1395 { , NN } ; 
  bool[+] _cwc_1397 { , NN } ; 

  if (_cwc_1403) 
  { 
    _cwc_1397 = UTDScalarB::jotdotneBBB( x, y) ; 
  }
  else
  { 
    _cwc_1395 = UTDScalarB::jotdotneBBB( x, y) ; 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1403 ? _cwc_1397 : _cwc_1395 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6269_jotdotneBBB__Cond_27(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6269_jotdotneBBB__Cond_27( bool _cwc_1448 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6269_jotdotneBBB__Cond_27 ::  ---
 */
{ 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1392__SSA1_1 { , NN } ; 
  int _cwc_1423 { , NN } ; 
  bool _cwc_1425 { , NN } ; 
  int _cwc_1440 { , NN } ; 
  bool _cwc_1442 { , NN } ; 
  bool[+] _cwc_1392 { , NN } ; 

  if (_cwc_1448) 
  { 
    _cwc_1440 = _dim_A_( y); 
    _cwc_1442 = _gt_SxS_( _cwc_1440, 0); 
    _cwc_1392 = UTDScalarB::_dup_6268_jotdotneBBB__Cond_23( _cwc_1442, y, x) ; 
  }
  else
  { 
    _cwc_1423 = _dim_A_( y); 
    _cwc_1425 = _gt_SxS_( _cwc_1423, 0); 
    _cwc_1392__SSA1_1 = UTDScalarB::_dup_6265_jotdotneBBB__Cond_26( _cwc_1425, y, x) ; 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1448 ? _cwc_1392 : _cwc_1392__SSA1_1 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6265_jotdotneBBB__Cond_26(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6265_jotdotneBBB__Cond_26( bool _cwc_1425 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6265_jotdotneBBB__Cond_26 ::  ---
 */
{ 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1392__SSA1_1 { , NN } ; 
  int _cwc_1411 { , NN } ; 
  bool _cwc_1422 { , NN } ; 
  bool[+] _cwc_1392 { , NN } ; 

  if (_cwc_1425) 
  { 
    _cwc_1411 = _dim_A_( y); 
    _cwc_1422 = _eq_SxS_( _cwc_1411, 1); 
    _cwc_1392 = UTDScalarB::_dup_6264_jotdotneBBB__Cond_25( _cwc_1422, y, x) ; 
  }
  else
  { 
    _cwc_1392__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotneBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1425 ? _cwc_1392 : _cwc_1392__SSA1_1 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6264_jotdotneBBB__Cond_25(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6264_jotdotneBBB__Cond_25( bool _cwc_1422 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6264_jotdotneBBB__Cond_25 ::  ---
 */
{ 
  int _ivesli_172980 { , NN } ; 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1410 { , NN } ; 
  int[.] _cwc_1413 { , NN } ; 
  int _cwc_1417 { , NN } ; 
  bool _cwc_1419 { , NN } ; 
  bool[+] _cwc_1392 { , NN } ; 

  if (_cwc_1422) 
  { 
    _cwc_1413 = _shape_A_( y); 
    _ivesli_172980 = 0; 
    _cwc_1417 = _idx_sel_( _ivesli_172980, _cwc_1413); 
    _cwc_1419 = _eq_SxS_( _cwc_1417, 4); 
    _cwc_1392 = UTDScalarB::_dup_6263_jotdotneBBB__Cond_24( _cwc_1419, y, x) ; 
  }
  else
  { 
    _cwc_1410 = UTDScalarB::jotdotneBBB( x, y) ; 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1422 ? _cwc_1392 : _cwc_1410 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6263_jotdotneBBB__Cond_24(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6263_jotdotneBBB__Cond_24( bool _cwc_1420 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6263_jotdotneBBB__Cond_24 ::  ---
 */
{ 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1412 { , NN } ; 
  bool[+] _cwc_1414 { , NN } ; 

  if (_cwc_1420) 
  { 
    _cwc_1414 = UTDScalarB::jotdotneBBB( x, y) ; 
  }
  else
  { 
    _cwc_1412 = UTDScalarB::jotdotneBBB( x, y) ; 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1420 ? _cwc_1414 : _cwc_1412 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6268_jotdotneBBB__Cond_23(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6268_jotdotneBBB__Cond_23( bool _cwc_1442 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6268_jotdotneBBB__Cond_23 ::  ---
 */
{ 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1392__SSA1_1 { , NN } ; 
  int _cwc_1428 { , NN } ; 
  bool _cwc_1439 { , NN } ; 
  bool[+] _cwc_1392 { , NN } ; 

  if (_cwc_1442) 
  { 
    _cwc_1428 = _dim_A_( y); 
    _cwc_1439 = _eq_SxS_( _cwc_1428, 1); 
    _cwc_1392 = UTDScalarB::_dup_6267_jotdotneBBB__Cond_22( _cwc_1439, y, x) ; 
  }
  else
  { 
    _cwc_1392__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotneBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1442 ? _cwc_1392 : _cwc_1392__SSA1_1 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6267_jotdotneBBB__Cond_22(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6267_jotdotneBBB__Cond_22( bool _cwc_1439 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6267_jotdotneBBB__Cond_22 ::  ---
 */
{ 
  int _ivesli_172982 { , NN } ; 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1427 { , NN } ; 
  int[.] _cwc_1430 { , NN } ; 
  int _cwc_1434 { , NN } ; 
  bool _cwc_1436 { , NN } ; 
  bool[+] _cwc_1392 { , NN } ; 

  if (_cwc_1439) 
  { 
    _cwc_1430 = _shape_A_( y); 
    _ivesli_172982 = 0; 
    _cwc_1434 = _idx_sel_( _ivesli_172982, _cwc_1430); 
    _cwc_1436 = _eq_SxS_( _cwc_1434, 4); 
    _cwc_1392 = UTDScalarB::_dup_6266_jotdotneBBB__Cond_21( _cwc_1436, y, x) ; 
  }
  else
  { 
    _cwc_1427 = UTDScalarB::jotdotneBBB( x, y) ; 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1439 ? _cwc_1392 : _cwc_1427 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6266_jotdotneBBB__Cond_21(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6266_jotdotneBBB__Cond_21( bool _cwc_1437 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6266_jotdotneBBB__Cond_21 ::  ---
 */
{ 
  bool[+] _cwc_1392__SSA1_2 { , NN } ; 
  bool[+] _cwc_1429 { , NN } ; 
  bool[4,4] _cwc_1431 { , NN } ; 

  if (_cwc_1437) 
  { 
    _cwc_1431 = UTDScalarB::jotdotneBBB( x, y) ; 
  }
  else
  { 
    _cwc_1429 = UTDScalarB::jotdotneBBB( x, y) ; 
  }
  _cwc_1392__SSA1_2 = ( _cwc_1437 ? _cwc_1431 : _cwc_1429 ); 
  return( _cwc_1392__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::quadXII(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
hidden *, hidden *, int[*] UTDScalarB::quadXII( hidden *_rso_1133_TheTerminal { ,NN } , hidden *_rso_1132_stdout { ,NN } , int[*] y { ,NN } , int[*] QUADpp { ,NN } , int[*] QUADpw { ,NN } )
/*
 *  quadXII ::  ---
 */
{ 
  int[*] _cwc_1456 { , NN } ; 
  hidden _cwc_1455 { , NN } ; 
  hidden _cwc_1454 { , NN } ; 
  bool _cwc_1477 { , NN } ; 
  int _cwc_1466 { , NN } ; 

  _cwc_1466 = _dim_A_( y); 
  _cwc_1477 = _eq_SxS_( _cwc_1466, 0); 
  _cwc_1454, _cwc_1455, _cwc_1456 = UTDScalarB::quadXII__Cond_37( _cwc_1477, QUADpw, QUADpp, y, _rso_1132_stdout, _rso_1133_TheTerminal) ; 
  return( _cwc_1454, _cwc_1455, _cwc_1456); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::quadXII__Cond_37(...) [ body ]
 ****************************************************************************/
hidden, hidden, int[*] UTDScalarB::quadXII__Cond_37( bool _cwc_1477 { ,NN } , int[*] QUADpw { ,NN } , int[*] QUADpp { ,NN } , int[*] y { ,NN } , hidden _rso_1132_stdout { ,NN } , hidden _rso_1133_TheTerminal { ,NN } )
/*
 *  quadXII__Cond_37 ::  ---
 */
{ 
  hidden _cwc_1454__SSA1_2 { , NN } ; 
  hidden _cwc_1455__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_1 { , NN } ; 
  hidden _cwc_1455__SSA1_1 { , NN } ; 
  hidden _cwc_1454__SSA1_1 { , NN } ; 
  int _cwc_1457 { , NN } ; 
  bool _cwc_1465 { , NN } ; 
  int _cwc_1467 { , NN } ; 
  bool _cwc_1475 { , NN } ; 
  hidden _cwc_1454 { , NN } ; 
  hidden _cwc_1455 { , NN } ; 
  int[*] _cwc_1456 { , NN } ; 

  if (_cwc_1477) 
  { 
    _cwc_1467 = _dim_A_( QUADpp); 
    _cwc_1475 = _eq_SxS_( _cwc_1467, 0); 
    _cwc_1454, _cwc_1455, _cwc_1456 = UTDScalarB::_dup_6276_quadXII__Cond_34( _cwc_1475, QUADpw, QUADpp, y, _rso_1132_stdout, _rso_1133_TheTerminal) ; 
  }
  else
  { 
    _cwc_1457 = _dim_A_( QUADpp); 
    _cwc_1465 = _eq_SxS_( _cwc_1457, 0); 
    _cwc_1454__SSA1_1, _cwc_1455__SSA1_1, _cwc_1456__SSA1_1 = UTDScalarB::_dup_6274_quadXII__Cond_36( _cwc_1465, QUADpw, QUADpp, y, _rso_1132_stdout, _rso_1133_TheTerminal) ; 
  }
  _cwc_1456__SSA1_2 = ( _cwc_1477 ? _cwc_1456 : _cwc_1456__SSA1_1 ); 
  _cwc_1455__SSA1_2 = ( _cwc_1477 ? _cwc_1455 : _cwc_1455__SSA1_1 ); 
  _cwc_1454__SSA1_2 = ( _cwc_1477 ? _cwc_1454 : _cwc_1454__SSA1_1 ); 
  return( _cwc_1454__SSA1_2, _cwc_1455__SSA1_2, _cwc_1456__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6274_quadXII__Cond_36(...) [ body ]
 ****************************************************************************/
hidden, hidden, int[*] UTDScalarB::_dup_6274_quadXII__Cond_36( bool _cwc_1465 { ,NN } , int[*] QUADpw { ,NN } , int[*] QUADpp { ,NN } , int[*] y { ,NN } , hidden _rso_1132_stdout { ,NN } , hidden _rso_1133_TheTerminal { ,NN } )
/*
 *  _dup_6274_quadXII__Cond_36 ::  ---
 */
{ 
  hidden _cwc_1454__SSA1_2 { , NN } ; 
  hidden _cwc_1455__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_1 { , NN } ; 
  hidden _cwc_1455__SSA1_1 { , NN } ; 
  hidden _cwc_1454__SSA1_1 { , NN } ; 
  int _cwc_1458 { , NN } ; 
  bool _cwc_1463 { , NN } ; 
  hidden _cwc_1454 { , NN } ; 
  hidden _cwc_1455 { , NN } ; 
  int[*] _cwc_1456 { , NN } ; 

  if (_cwc_1465) 
  { 
    _cwc_1458 = _dim_A_( QUADpw); 
    _cwc_1463 = _eq_SxS_( _cwc_1458, 0); 
    _cwc_1454, _cwc_1455, _cwc_1456 = UTDScalarB::_dup_6273_quadXII__Cond_35( _cwc_1463, QUADpw, QUADpp, y, _rso_1132_stdout, _rso_1133_TheTerminal) ; 
  }
  else
  { 
    _cwc_1454__SSA1_1, _cwc_1455__SSA1_1, _cwc_1456__SSA1_1 = _dispatch_error_( 3, hidden, hidden, int[*], "UTDScalarB::quadXII :: Terminal::Terminal TermFile::TermFile int[*] int[*] int[*] -> Terminal::Terminal TermFile::TermFile int[*] ", _rso_1133_TheTerminal, _rso_1132_stdout, y, QUADpp, QUADpw); 
  }
  _cwc_1456__SSA1_2 = ( _cwc_1465 ? _cwc_1456 : _cwc_1456__SSA1_1 ); 
  _cwc_1455__SSA1_2 = ( _cwc_1465 ? _cwc_1455 : _cwc_1455__SSA1_1 ); 
  _cwc_1454__SSA1_2 = ( _cwc_1465 ? _cwc_1454 : _cwc_1454__SSA1_1 ); 
  return( _cwc_1454__SSA1_2, _cwc_1455__SSA1_2, _cwc_1456__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6273_quadXII__Cond_35(...) [ body ]
 ****************************************************************************/
hidden, hidden, int[*] UTDScalarB::_dup_6273_quadXII__Cond_35( bool _cwc_1463 { ,NN } , int[*] QUADpw { ,NN } , int[*] QUADpp { ,NN } , int[*] y { ,NN } , hidden _rso_1132_stdout { ,NN } , hidden _rso_1133_TheTerminal { ,NN } )
/*
 *  _dup_6273_quadXII__Cond_35 ::  ---
 */
{ 
  hidden _cwc_1454__SSA1_2 { , NN } ; 
  hidden _cwc_1455__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_1 { , NN } ; 
  hidden _cwc_1455__SSA1_1 { , NN } ; 
  hidden _cwc_1454__SSA1_1 { , NN } ; 
  int[*] _cwc_1459 { , NN } ; 
  hidden _cwc_1460 { , NN } ; 
  hidden _cwc_1461 { , NN } ; 

  if (_cwc_1463) 
  { 
    _cwc_1461, _cwc_1460, _cwc_1459 = UTDScalarB::quadXII( _rso_1133_TheTerminal, _rso_1132_stdout, y, QUADpp, QUADpw) ; 
  }
  else
  { 
    _cwc_1454__SSA1_1, _cwc_1455__SSA1_1, _cwc_1456__SSA1_1 = _dispatch_error_( 3, hidden, hidden, int[*], "UTDScalarB::quadXII :: Terminal::Terminal TermFile::TermFile int[*] int[*] int[*] -> Terminal::Terminal TermFile::TermFile int[*] ", _rso_1133_TheTerminal, _rso_1132_stdout, y, QUADpp, QUADpw); 
  }
  _cwc_1456__SSA1_2 = ( _cwc_1463 ? _cwc_1459 : _cwc_1456__SSA1_1 ); 
  _cwc_1455__SSA1_2 = ( _cwc_1463 ? _cwc_1460 : _cwc_1455__SSA1_1 ); 
  _cwc_1454__SSA1_2 = ( _cwc_1463 ? _cwc_1461 : _cwc_1454__SSA1_1 ); 
  return( _cwc_1454__SSA1_2, _cwc_1455__SSA1_2, _cwc_1456__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6276_quadXII__Cond_34(...) [ body ]
 ****************************************************************************/
hidden, hidden, int[*] UTDScalarB::_dup_6276_quadXII__Cond_34( bool _cwc_1475 { ,NN } , int[*] QUADpw { ,NN } , int[*] QUADpp { ,NN } , int[*] y { ,NN } , hidden _rso_1132_stdout { ,NN } , hidden _rso_1133_TheTerminal { ,NN } )
/*
 *  _dup_6276_quadXII__Cond_34 ::  ---
 */
{ 
  hidden _cwc_1454__SSA1_2 { , NN } ; 
  hidden _cwc_1455__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_1 { , NN } ; 
  hidden _cwc_1455__SSA1_1 { , NN } ; 
  hidden _cwc_1454__SSA1_1 { , NN } ; 
  int _cwc_1468 { , NN } ; 
  bool _cwc_1473 { , NN } ; 
  hidden _cwc_1454 { , NN } ; 
  hidden _cwc_1455 { , NN } ; 
  int[*] _cwc_1456 { , NN } ; 

  if (_cwc_1475) 
  { 
    _cwc_1468 = _dim_A_( QUADpw); 
    _cwc_1473 = _eq_SxS_( _cwc_1468, 0); 
    _cwc_1454, _cwc_1455, _cwc_1456 = UTDScalarB::_dup_6275_quadXII__Cond_33( _cwc_1473, QUADpw, QUADpp, y, _rso_1132_stdout, _rso_1133_TheTerminal) ; 
  }
  else
  { 
    _cwc_1454__SSA1_1, _cwc_1455__SSA1_1, _cwc_1456__SSA1_1 = _dispatch_error_( 3, hidden, hidden, int[*], "UTDScalarB::quadXII :: Terminal::Terminal TermFile::TermFile int[*] int[*] int[*] -> Terminal::Terminal TermFile::TermFile int[*] ", _rso_1133_TheTerminal, _rso_1132_stdout, y, QUADpp, QUADpw); 
  }
  _cwc_1456__SSA1_2 = ( _cwc_1475 ? _cwc_1456 : _cwc_1456__SSA1_1 ); 
  _cwc_1455__SSA1_2 = ( _cwc_1475 ? _cwc_1455 : _cwc_1455__SSA1_1 ); 
  _cwc_1454__SSA1_2 = ( _cwc_1475 ? _cwc_1454 : _cwc_1454__SSA1_1 ); 
  return( _cwc_1454__SSA1_2, _cwc_1455__SSA1_2, _cwc_1456__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6275_quadXII__Cond_33(...) [ body ]
 ****************************************************************************/
hidden, hidden, int[*] UTDScalarB::_dup_6275_quadXII__Cond_33( bool _cwc_1473 { ,NN } , int[*] QUADpw { ,NN } , int[*] QUADpp { ,NN } , int[*] y { ,NN } , hidden _rso_1132_stdout { ,NN } , hidden _rso_1133_TheTerminal { ,NN } )
/*
 *  _dup_6275_quadXII__Cond_33 ::  ---
 */
{ 
  hidden _cwc_1454__SSA1_2 { , NN } ; 
  hidden _cwc_1455__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_2 { , NN } ; 
  int[*] _cwc_1456__SSA1_1 { , NN } ; 
  hidden _cwc_1455__SSA1_1 { , NN } ; 
  hidden _cwc_1454__SSA1_1 { , NN } ; 
  int _cwc_1469 { , NN } ; 
  hidden _cwc_1470 { , NN } ; 
  hidden _cwc_1471 { , NN } ; 

  if (_cwc_1473) 
  { 
    _cwc_1471, _cwc_1470, _cwc_1469 = UTDScalarB::quadXII( _rso_1133_TheTerminal, _rso_1132_stdout, y, QUADpp, QUADpw) ; 
  }
  else
  { 
    _cwc_1454__SSA1_1, _cwc_1455__SSA1_1, _cwc_1456__SSA1_1 = _dispatch_error_( 3, hidden, hidden, int[*], "UTDScalarB::quadXII :: Terminal::Terminal TermFile::TermFile int[*] int[*] int[*] -> Terminal::Terminal TermFile::TermFile int[*] ", _rso_1133_TheTerminal, _rso_1132_stdout, y, QUADpp, QUADpw); 
  }
  _cwc_1456__SSA1_2 = ( _cwc_1473 ? _cwc_1469 : _cwc_1456__SSA1_1 ); 
  _cwc_1455__SSA1_2 = ( _cwc_1473 ? _cwc_1470 : _cwc_1455__SSA1_1 ); 
  _cwc_1454__SSA1_2 = ( _cwc_1473 ? _cwc_1471 : _cwc_1454__SSA1_1 ); 
  return( _cwc_1454__SSA1_2, _cwc_1455__SSA1_2, _cwc_1456__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::orBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[*] UTDScalarB::orBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  orBBB ::  ---
 */
{ 
  bool[*] _cwc_1478 { , NN } ; 
  bool _cwc_1531 { , NN } ; 
  int _cwc_1509 { , NN } ; 

  _cwc_1509 = _dim_A_( x); 
  _cwc_1531 = _eq_SxS_( _cwc_1509, 0); 
  _cwc_1478 = UTDScalarB::orBBB__Cond_50( _cwc_1531, y, x) ; 
  return( _cwc_1478); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::orBBB__Cond_50(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::orBBB__Cond_50( bool _cwc_1531 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  orBBB__Cond_50 ::  ---
 */
{ 
  bool[*] _cwc_1478__SSA1_2 { , NN } ; 
  bool[*] _cwc_1478__SSA1_1 { , NN } ; 
  int _cwc_1506 { , NN } ; 
  bool _cwc_1508 { , NN } ; 
  int _cwc_1526 { , NN } ; 
  bool _cwc_1529 { , NN } ; 
  bool[*] _cwc_1478 { , NN } ; 

  if (_cwc_1531) 
  { 
    _cwc_1526 = _dim_A_( y); 
    _cwc_1529 = _eq_SxS_( _cwc_1526, 0); 
    _cwc_1478 = UTDScalarB::_dup_6313_orBBB__Cond_41( _cwc_1529, y, x) ; 
  }
  else
  { 
    _cwc_1506 = _dim_A_( x); 
    _cwc_1508 = _gt_SxS_( _cwc_1506, 0); 
    _cwc_1478__SSA1_1 = UTDScalarB::_dup_6309_orBBB__Cond_49( _cwc_1508, y, x) ; 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1531 ? _cwc_1478 : _cwc_1478__SSA1_1 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6309_orBBB__Cond_49(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6309_orBBB__Cond_49( bool _cwc_1508 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6309_orBBB__Cond_49 ::  ---
 */
{ 
  bool[*] _cwc_1478__SSA1_2 { , NN } ; 
  bool[*] _cwc_1478__SSA1_1 { , NN } ; 
  int _cwc_1491 { , NN } ; 
  bool _cwc_1505 { , NN } ; 
  bool[*] _cwc_1478 { , NN } ; 

  if (_cwc_1508) 
  { 
    _cwc_1491 = _dim_A_( x); 
    _cwc_1505 = _eq_SxS_( _cwc_1491, 3); 
    _cwc_1478 = UTDScalarB::_dup_6308_orBBB__Cond_48( _cwc_1505, y, x) ; 
  }
  else
  { 
    _cwc_1478__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::orBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1508 ? _cwc_1478 : _cwc_1478__SSA1_1 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6308_orBBB__Cond_48(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6308_orBBB__Cond_48( bool _cwc_1505 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6308_orBBB__Cond_48 ::  ---
 */
{ 
  bool[*] _cwc_1478__SSA1_2 { , NN } ; 
  bool[*] _cwc_1478__SSA1_1 { , NN } ; 
  int _cwc_1487 { , NN } ; 
  bool _cwc_1490 { , NN } ; 
  int _cwc_1500 { , NN } ; 
  bool _cwc_1503 { , NN } ; 
  bool[*] _cwc_1478 { , NN } ; 

  if (_cwc_1505) 
  { 
    _cwc_1500 = _dim_A_( y); 
    _cwc_1503 = _eq_SxS_( _cwc_1500, 0); 
    _cwc_1478 = UTDScalarB::_dup_6307_orBBB__Cond_44( _cwc_1503, y, x) ; 
  }
  else
  { 
    _cwc_1487 = _dim_A_( y); 
    _cwc_1490 = _eq_SxS_( _cwc_1487, 0); 
    _cwc_1478__SSA1_1 = UTDScalarB::_dup_6304_orBBB__Cond_47( _cwc_1490, y, x) ; 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1505 ? _cwc_1478 : _cwc_1478__SSA1_1 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6304_orBBB__Cond_47(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6304_orBBB__Cond_47( bool _cwc_1490 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6304_orBBB__Cond_47 ::  ---
 */
{ 
  bool[*] _cwc_1478__SSA1_2 { , NN } ; 
  bool[*] _cwc_1478__SSA1_1 { , NN } ; 
  int _cwc_1484 { , NN } ; 
  bool _cwc_1486 { , NN } ; 
  bool[+] _cwc_1488 { , NN } ; 

  if (_cwc_1490) 
  { 
    _cwc_1488 = UTDScalarB::orBBB( x, y) ; 
  }
  else
  { 
    _cwc_1484 = _dim_A_( y); 
    _cwc_1486 = _gt_SxS_( _cwc_1484, 0); 
    _cwc_1478__SSA1_1 = UTDScalarB::_dup_6303_orBBB__Cond_46( _cwc_1486, y, x) ; 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1490 ? _cwc_1488 : _cwc_1478__SSA1_1 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6303_orBBB__Cond_46(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6303_orBBB__Cond_46( bool _cwc_1486 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6303_orBBB__Cond_46 ::  ---
 */
{ 
  bool[*] _cwc_1478__SSA1_2 { , NN } ; 
  bool[*] _cwc_1478__SSA1_1 { , NN } ; 
  int _cwc_1480 { , NN } ; 
  bool _cwc_1483 { , NN } ; 
  bool[+] _cwc_1478 { , NN } ; 

  if (_cwc_1486) 
  { 
    _cwc_1480 = _dim_A_( y); 
    _cwc_1483 = _eq_SxS_( _cwc_1480, 3); 
    _cwc_1478 = UTDScalarB::_dup_6302_orBBB__Cond_45( _cwc_1483, y, x) ; 
  }
  else
  { 
    _cwc_1478__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::orBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1486 ? _cwc_1478 : _cwc_1478__SSA1_1 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6302_orBBB__Cond_45(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6302_orBBB__Cond_45( bool _cwc_1483 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6302_orBBB__Cond_45 ::  ---
 */
{ 
  bool[+] _cwc_1478__SSA1_2 { , NN } ; 
  bool[+] _cwc_1479 { , NN } ; 
  bool[+] _cwc_1481 { , NN } ; 

  if (_cwc_1483) 
  { 
    _cwc_1481 = UTDScalarB::orBBB( x, y) ; 
  }
  else
  { 
    _cwc_1479 = UTDScalarB::orBBB( x, y) ; 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1483 ? _cwc_1481 : _cwc_1479 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6307_orBBB__Cond_44(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6307_orBBB__Cond_44( bool _cwc_1503 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6307_orBBB__Cond_44 ::  ---
 */
{ 
  bool[*] _cwc_1478__SSA1_2 { , NN } ; 
  bool[*] _cwc_1478__SSA1_1 { , NN } ; 
  int _cwc_1497 { , NN } ; 
  bool _cwc_1499 { , NN } ; 
  bool[.,.,.] _cwc_1501 { , NN } ; 

  if (_cwc_1503) 
  { 
    _cwc_1501 = UTDScalarB::orBBB( x, y) ; 
  }
  else
  { 
    _cwc_1497 = _dim_A_( y); 
    _cwc_1499 = _gt_SxS_( _cwc_1497, 0); 
    _cwc_1478__SSA1_1 = UTDScalarB::_dup_6306_orBBB__Cond_43( _cwc_1499, y, x) ; 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1503 ? _cwc_1501 : _cwc_1478__SSA1_1 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6306_orBBB__Cond_43(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6306_orBBB__Cond_43( bool _cwc_1499 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6306_orBBB__Cond_43 ::  ---
 */
{ 
  bool[*] _cwc_1478__SSA1_2 { , NN } ; 
  bool[*] _cwc_1478__SSA1_1 { , NN } ; 
  int _cwc_1493 { , NN } ; 
  bool _cwc_1496 { , NN } ; 
  bool[+] _cwc_1478 { , NN } ; 

  if (_cwc_1499) 
  { 
    _cwc_1493 = _dim_A_( y); 
    _cwc_1496 = _eq_SxS_( _cwc_1493, 3); 
    _cwc_1478 = UTDScalarB::_dup_6305_orBBB__Cond_42( _cwc_1496, y, x) ; 
  }
  else
  { 
    _cwc_1478__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::orBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1499 ? _cwc_1478 : _cwc_1478__SSA1_1 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6305_orBBB__Cond_42(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6305_orBBB__Cond_42( bool _cwc_1496 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6305_orBBB__Cond_42 ::  ---
 */
{ 
  bool[+] _cwc_1478__SSA1_2 { , NN } ; 
  bool[+] _cwc_1492 { , NN } ; 
  bool[.,.,.] _cwc_1494 { , NN } ; 

  if (_cwc_1496) 
  { 
    _cwc_1494 = UTDScalarB::orBBB( x, y) ; 
  }
  else
  { 
    _cwc_1492 = UTDScalarB::orBBB( x, y) ; 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1496 ? _cwc_1494 : _cwc_1492 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6313_orBBB__Cond_41(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6313_orBBB__Cond_41( bool _cwc_1529 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6313_orBBB__Cond_41 ::  ---
 */
{ 
  bool[*] _cwc_1478__SSA1_2 { , NN } ; 
  bool[*] _cwc_1478__SSA1_1 { , NN } ; 
  int _cwc_1523 { , NN } ; 
  bool _cwc_1525 { , NN } ; 
  bool _cwc_1527 { , NN } ; 

  if (_cwc_1529) 
  { 
    _cwc_1527 = UTDScalarB::orBBB( x, y) ; 
  }
  else
  { 
    _cwc_1523 = _dim_A_( y); 
    _cwc_1525 = _gt_SxS_( _cwc_1523, 0); 
    _cwc_1478__SSA1_1 = UTDScalarB::_dup_6312_orBBB__Cond_40( _cwc_1525, y, x) ; 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1529 ? _cwc_1527 : _cwc_1478__SSA1_1 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6312_orBBB__Cond_40(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6312_orBBB__Cond_40( bool _cwc_1525 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6312_orBBB__Cond_40 ::  ---
 */
{ 
  bool[*] _cwc_1478__SSA1_2 { , NN } ; 
  bool[*] _cwc_1478__SSA1_1 { , NN } ; 
  int _cwc_1511 { , NN } ; 
  bool _cwc_1522 { , NN } ; 
  bool[+] _cwc_1478 { , NN } ; 

  if (_cwc_1525) 
  { 
    _cwc_1511 = _dim_A_( y); 
    _cwc_1522 = _eq_SxS_( _cwc_1511, 1); 
    _cwc_1478 = UTDScalarB::_dup_6311_orBBB__Cond_39( _cwc_1522, y, x) ; 
  }
  else
  { 
    _cwc_1478__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::orBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1525 ? _cwc_1478 : _cwc_1478__SSA1_1 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6311_orBBB__Cond_39(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6311_orBBB__Cond_39( bool _cwc_1522 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6311_orBBB__Cond_39 ::  ---
 */
{ 
  int _ivesli_172984 { , NN } ; 
  bool[+] _cwc_1478__SSA1_2 { , NN } ; 
  bool[+] _cwc_1510 { , NN } ; 
  int[.] _cwc_1513 { , NN } ; 
  int _cwc_1517 { , NN } ; 
  bool _cwc_1519 { , NN } ; 
  bool[+] _cwc_1478 { , NN } ; 

  if (_cwc_1522) 
  { 
    _cwc_1513 = _shape_A_( y); 
    _ivesli_172984 = 0; 
    _cwc_1517 = _idx_sel_( _ivesli_172984, _cwc_1513); 
    _cwc_1519 = _eq_SxS_( _cwc_1517, 4); 
    _cwc_1478 = UTDScalarB::_dup_6310_orBBB__Cond_38( _cwc_1519, y, x) ; 
  }
  else
  { 
    _cwc_1510 = UTDScalarB::orBBB( x, y) ; 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1522 ? _cwc_1478 : _cwc_1510 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6310_orBBB__Cond_38(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6310_orBBB__Cond_38( bool _cwc_1520 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6310_orBBB__Cond_38 ::  ---
 */
{ 
  bool[+] _cwc_1478__SSA1_2 { , NN } ; 
  bool[+] _cwc_1512 { , NN } ; 
  bool[4] _cwc_1514 { , NN } ; 

  if (_cwc_1520) 
  { 
    _cwc_1514 = UTDScalarB::orBBB( x, y) ; 
  }
  else
  { 
    _cwc_1512 = UTDScalarB::orBBB( x, y) ; 
  }
  _cwc_1478__SSA1_2 = ( _cwc_1520 ? _cwc_1514 : _cwc_1512 ); 
  return( _cwc_1478__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::ltBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[*] UTDScalarB::ltBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  ltBBB ::  ---
 */
{ 
  bool[*] _cwc_1532 { , NN } ; 
  bool _cwc_1585 { , NN } ; 
  int _cwc_1563 { , NN } ; 

  _cwc_1563 = _dim_A_( x); 
  _cwc_1585 = _eq_SxS_( _cwc_1563, 0); 
  _cwc_1532 = UTDScalarB::ltBBB__Cond_63( _cwc_1585, y, x) ; 
  return( _cwc_1532); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::ltBBB__Cond_63(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::ltBBB__Cond_63( bool _cwc_1585 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  ltBBB__Cond_63 ::  ---
 */
{ 
  bool[*] _cwc_1532__SSA1_2 { , NN } ; 
  bool[*] _cwc_1532__SSA1_1 { , NN } ; 
  int _cwc_1560 { , NN } ; 
  bool _cwc_1562 { , NN } ; 
  int _cwc_1580 { , NN } ; 
  bool _cwc_1583 { , NN } ; 
  bool[*] _cwc_1532 { , NN } ; 

  if (_cwc_1585) 
  { 
    _cwc_1580 = _dim_A_( y); 
    _cwc_1583 = _eq_SxS_( _cwc_1580, 0); 
    _cwc_1532 = UTDScalarB::_dup_6350_ltBBB__Cond_54( _cwc_1583, y, x) ; 
  }
  else
  { 
    _cwc_1560 = _dim_A_( x); 
    _cwc_1562 = _gt_SxS_( _cwc_1560, 0); 
    _cwc_1532__SSA1_1 = UTDScalarB::_dup_6346_ltBBB__Cond_62( _cwc_1562, y, x) ; 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1585 ? _cwc_1532 : _cwc_1532__SSA1_1 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6346_ltBBB__Cond_62(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6346_ltBBB__Cond_62( bool _cwc_1562 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6346_ltBBB__Cond_62 ::  ---
 */
{ 
  bool[*] _cwc_1532__SSA1_2 { , NN } ; 
  bool[*] _cwc_1532__SSA1_1 { , NN } ; 
  int _cwc_1545 { , NN } ; 
  bool _cwc_1559 { , NN } ; 
  bool[*] _cwc_1532 { , NN } ; 

  if (_cwc_1562) 
  { 
    _cwc_1545 = _dim_A_( x); 
    _cwc_1559 = _eq_SxS_( _cwc_1545, 3); 
    _cwc_1532 = UTDScalarB::_dup_6345_ltBBB__Cond_61( _cwc_1559, y, x) ; 
  }
  else
  { 
    _cwc_1532__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::ltBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1562 ? _cwc_1532 : _cwc_1532__SSA1_1 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6345_ltBBB__Cond_61(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6345_ltBBB__Cond_61( bool _cwc_1559 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6345_ltBBB__Cond_61 ::  ---
 */
{ 
  bool[*] _cwc_1532__SSA1_2 { , NN } ; 
  bool[*] _cwc_1532__SSA1_1 { , NN } ; 
  int _cwc_1541 { , NN } ; 
  bool _cwc_1544 { , NN } ; 
  int _cwc_1554 { , NN } ; 
  bool _cwc_1557 { , NN } ; 
  bool[*] _cwc_1532 { , NN } ; 

  if (_cwc_1559) 
  { 
    _cwc_1554 = _dim_A_( y); 
    _cwc_1557 = _eq_SxS_( _cwc_1554, 0); 
    _cwc_1532 = UTDScalarB::_dup_6344_ltBBB__Cond_57( _cwc_1557, y, x) ; 
  }
  else
  { 
    _cwc_1541 = _dim_A_( y); 
    _cwc_1544 = _eq_SxS_( _cwc_1541, 0); 
    _cwc_1532__SSA1_1 = UTDScalarB::_dup_6341_ltBBB__Cond_60( _cwc_1544, y, x) ; 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1559 ? _cwc_1532 : _cwc_1532__SSA1_1 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6341_ltBBB__Cond_60(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6341_ltBBB__Cond_60( bool _cwc_1544 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6341_ltBBB__Cond_60 ::  ---
 */
{ 
  bool[*] _cwc_1532__SSA1_2 { , NN } ; 
  bool[*] _cwc_1532__SSA1_1 { , NN } ; 
  int _cwc_1538 { , NN } ; 
  bool _cwc_1540 { , NN } ; 
  bool[+] _cwc_1542 { , NN } ; 

  if (_cwc_1544) 
  { 
    _cwc_1542 = UTDScalarB::ltBBB( x, y) ; 
  }
  else
  { 
    _cwc_1538 = _dim_A_( y); 
    _cwc_1540 = _gt_SxS_( _cwc_1538, 0); 
    _cwc_1532__SSA1_1 = UTDScalarB::_dup_6340_ltBBB__Cond_59( _cwc_1540, y, x) ; 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1544 ? _cwc_1542 : _cwc_1532__SSA1_1 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6340_ltBBB__Cond_59(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6340_ltBBB__Cond_59( bool _cwc_1540 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6340_ltBBB__Cond_59 ::  ---
 */
{ 
  bool[*] _cwc_1532__SSA1_2 { , NN } ; 
  bool[*] _cwc_1532__SSA1_1 { , NN } ; 
  int _cwc_1534 { , NN } ; 
  bool _cwc_1537 { , NN } ; 
  bool[+] _cwc_1532 { , NN } ; 

  if (_cwc_1540) 
  { 
    _cwc_1534 = _dim_A_( y); 
    _cwc_1537 = _eq_SxS_( _cwc_1534, 3); 
    _cwc_1532 = UTDScalarB::_dup_6339_ltBBB__Cond_58( _cwc_1537, y, x) ; 
  }
  else
  { 
    _cwc_1532__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::ltBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1540 ? _cwc_1532 : _cwc_1532__SSA1_1 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6339_ltBBB__Cond_58(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6339_ltBBB__Cond_58( bool _cwc_1537 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6339_ltBBB__Cond_58 ::  ---
 */
{ 
  bool[+] _cwc_1532__SSA1_2 { , NN } ; 
  bool[+] _cwc_1533 { , NN } ; 
  bool[+] _cwc_1535 { , NN } ; 

  if (_cwc_1537) 
  { 
    _cwc_1535 = UTDScalarB::ltBBB( x, y) ; 
  }
  else
  { 
    _cwc_1533 = UTDScalarB::ltBBB( x, y) ; 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1537 ? _cwc_1535 : _cwc_1533 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6344_ltBBB__Cond_57(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6344_ltBBB__Cond_57( bool _cwc_1557 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6344_ltBBB__Cond_57 ::  ---
 */
{ 
  bool[*] _cwc_1532__SSA1_2 { , NN } ; 
  bool[*] _cwc_1532__SSA1_1 { , NN } ; 
  int _cwc_1551 { , NN } ; 
  bool _cwc_1553 { , NN } ; 
  bool[.,.,.] _cwc_1555 { , NN } ; 

  if (_cwc_1557) 
  { 
    _cwc_1555 = UTDScalarB::ltBBB( x, y) ; 
  }
  else
  { 
    _cwc_1551 = _dim_A_( y); 
    _cwc_1553 = _gt_SxS_( _cwc_1551, 0); 
    _cwc_1532__SSA1_1 = UTDScalarB::_dup_6343_ltBBB__Cond_56( _cwc_1553, y, x) ; 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1557 ? _cwc_1555 : _cwc_1532__SSA1_1 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6343_ltBBB__Cond_56(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6343_ltBBB__Cond_56( bool _cwc_1553 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6343_ltBBB__Cond_56 ::  ---
 */
{ 
  bool[*] _cwc_1532__SSA1_2 { , NN } ; 
  bool[*] _cwc_1532__SSA1_1 { , NN } ; 
  int _cwc_1547 { , NN } ; 
  bool _cwc_1550 { , NN } ; 
  bool[+] _cwc_1532 { , NN } ; 

  if (_cwc_1553) 
  { 
    _cwc_1547 = _dim_A_( y); 
    _cwc_1550 = _eq_SxS_( _cwc_1547, 3); 
    _cwc_1532 = UTDScalarB::_dup_6342_ltBBB__Cond_55( _cwc_1550, y, x) ; 
  }
  else
  { 
    _cwc_1532__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::ltBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1553 ? _cwc_1532 : _cwc_1532__SSA1_1 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6342_ltBBB__Cond_55(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6342_ltBBB__Cond_55( bool _cwc_1550 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6342_ltBBB__Cond_55 ::  ---
 */
{ 
  bool[+] _cwc_1532__SSA1_2 { , NN } ; 
  bool[+] _cwc_1546 { , NN } ; 
  bool[.,.,.] _cwc_1548 { , NN } ; 

  if (_cwc_1550) 
  { 
    _cwc_1548 = UTDScalarB::ltBBB( x, y) ; 
  }
  else
  { 
    _cwc_1546 = UTDScalarB::ltBBB( x, y) ; 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1550 ? _cwc_1548 : _cwc_1546 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6350_ltBBB__Cond_54(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6350_ltBBB__Cond_54( bool _cwc_1583 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6350_ltBBB__Cond_54 ::  ---
 */
{ 
  bool[*] _cwc_1532__SSA1_2 { , NN } ; 
  bool[*] _cwc_1532__SSA1_1 { , NN } ; 
  int _cwc_1577 { , NN } ; 
  bool _cwc_1579 { , NN } ; 
  bool _cwc_1581 { , NN } ; 

  if (_cwc_1583) 
  { 
    _cwc_1581 = UTDScalarB::ltBBB( x, y) ; 
  }
  else
  { 
    _cwc_1577 = _dim_A_( y); 
    _cwc_1579 = _gt_SxS_( _cwc_1577, 0); 
    _cwc_1532__SSA1_1 = UTDScalarB::_dup_6349_ltBBB__Cond_53( _cwc_1579, y, x) ; 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1583 ? _cwc_1581 : _cwc_1532__SSA1_1 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6349_ltBBB__Cond_53(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6349_ltBBB__Cond_53( bool _cwc_1579 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6349_ltBBB__Cond_53 ::  ---
 */
{ 
  bool[*] _cwc_1532__SSA1_2 { , NN } ; 
  bool[*] _cwc_1532__SSA1_1 { , NN } ; 
  int _cwc_1565 { , NN } ; 
  bool _cwc_1576 { , NN } ; 
  bool[+] _cwc_1532 { , NN } ; 

  if (_cwc_1579) 
  { 
    _cwc_1565 = _dim_A_( y); 
    _cwc_1576 = _eq_SxS_( _cwc_1565, 1); 
    _cwc_1532 = UTDScalarB::_dup_6348_ltBBB__Cond_52( _cwc_1576, y, x) ; 
  }
  else
  { 
    _cwc_1532__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::ltBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1579 ? _cwc_1532 : _cwc_1532__SSA1_1 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6348_ltBBB__Cond_52(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6348_ltBBB__Cond_52( bool _cwc_1576 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6348_ltBBB__Cond_52 ::  ---
 */
{ 
  int _ivesli_172986 { , NN } ; 
  bool[+] _cwc_1532__SSA1_2 { , NN } ; 
  bool[+] _cwc_1564 { , NN } ; 
  int[.] _cwc_1567 { , NN } ; 
  int _cwc_1571 { , NN } ; 
  bool _cwc_1573 { , NN } ; 
  bool[+] _cwc_1532 { , NN } ; 

  if (_cwc_1576) 
  { 
    _cwc_1567 = _shape_A_( y); 
    _ivesli_172986 = 0; 
    _cwc_1571 = _idx_sel_( _ivesli_172986, _cwc_1567); 
    _cwc_1573 = _eq_SxS_( _cwc_1571, 4); 
    _cwc_1532 = UTDScalarB::_dup_6347_ltBBB__Cond_51( _cwc_1573, y, x) ; 
  }
  else
  { 
    _cwc_1564 = UTDScalarB::ltBBB( x, y) ; 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1576 ? _cwc_1532 : _cwc_1564 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6347_ltBBB__Cond_51(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6347_ltBBB__Cond_51( bool _cwc_1574 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6347_ltBBB__Cond_51 ::  ---
 */
{ 
  bool[+] _cwc_1532__SSA1_2 { , NN } ; 
  bool[+] _cwc_1566 { , NN } ; 
  bool[4] _cwc_1568 { , NN } ; 

  if (_cwc_1574) 
  { 
    _cwc_1568 = UTDScalarB::ltBBB( x, y) ; 
  }
  else
  { 
    _cwc_1566 = UTDScalarB::ltBBB( x, y) ; 
  }
  _cwc_1532__SSA1_2 = ( _cwc_1574 ? _cwc_1568 : _cwc_1566 ); 
  return( _cwc_1532__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB:Array::modarray(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
int[*] UTDScalarB:Array::modarray( int[*] array { ,NN } , int[*] v { ,NN } , int[*] val { ,NN } )
/*
 *  modarray ::  ---
 */
{ 
  int[*] _cwc_1586 { , NN } ; 
  bool _cwc_1627 { , NN } ; 
  int _cwc_1606 { , NN } ; 

  _cwc_1606 = _dim_A_( array); 
  _cwc_1627 = _eq_SxS_( _cwc_1606, 1); 
  _cwc_1586 = UTDScalarB:Array::modarray__Cond_74( _cwc_1627, val, v, array) ; 
  return( _cwc_1586); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::modarray__Cond_74(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::modarray__Cond_74( bool _cwc_1627 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  modarray__Cond_74 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1586__SSA1_1 { , NN } ; 
  int _cwc_1598 { , NN } ; 
  bool _cwc_1605 { , NN } ; 
  int _cwc_1618 { , NN } ; 
  bool _cwc_1625 { , NN } ; 
  int[*] _cwc_1586 { , NN } ; 

  if (_cwc_1627) 
  { 
    _cwc_1618 = _dim_A_( v); 
    _cwc_1625 = _eq_SxS_( _cwc_1618, 0); 
    _cwc_1586 = UTDScalarB:Array::_dup_6374_modarray__Cond_68( _cwc_1625, val, v, array) ; 
  }
  else
  { 
    _cwc_1598 = _dim_A_( v); 
    _cwc_1605 = _eq_SxS_( _cwc_1598, 0); 
    _cwc_1586__SSA1_1 = UTDScalarB:Array::_dup_6369_modarray__Cond_73( _cwc_1605, val, v, array) ; 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1627 ? _cwc_1586 : _cwc_1586__SSA1_1 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6369_modarray__Cond_73(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6369_modarray__Cond_73( bool _cwc_1605 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6369_modarray__Cond_73 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1586__SSA1_1 { , NN } ; 
  int _cwc_1587 { , NN } ; 
  bool _cwc_1597 { , NN } ; 
  int _cwc_1600 { , NN } ; 
  bool _cwc_1603 { , NN } ; 
  int[*] _cwc_1586 { , NN } ; 

  if (_cwc_1605) 
  { 
    _cwc_1600 = _dim_A_( val); 
    _cwc_1603 = _eq_SxS_( _cwc_1600, 0); 
    _cwc_1586 = UTDScalarB:Array::_dup_6368_modarray__Cond_69( _cwc_1603, val, v, array) ; 
  }
  else
  { 
    _cwc_1587 = _dim_A_( v); 
    _cwc_1597 = _eq_SxS_( _cwc_1587, 1); 
    _cwc_1586__SSA1_1 = UTDScalarB:Array::_dup_6367_modarray__Cond_72( _cwc_1597, val, v, array) ; 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1605 ? _cwc_1586 : _cwc_1586__SSA1_1 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6367_modarray__Cond_72(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6367_modarray__Cond_72( bool _cwc_1597 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6367_modarray__Cond_72 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1586__SSA1_1 { , NN } ; 
  int _cwc_1592 { , NN } ; 
  bool _cwc_1595 { , NN } ; 
  int[*] _cwc_1586 { , NN } ; 

  if (_cwc_1597) 
  { 
    _cwc_1592 = _dim_A_( val); 
    _cwc_1595 = _eq_SxS_( _cwc_1592, 0); 
    _cwc_1586 = UTDScalarB:Array::_dup_6366_modarray__Cond_71( _cwc_1595, val, v, array) ; 
  }
  else
  { 
    _cwc_1586__SSA1_1 = _dispatch_error_( 1, int[*], "UTDScalarB:Array::modarray :: int[*] int[*] int[*] -> int[*] ", array, v, val); 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1597 ? _cwc_1586 : _cwc_1586__SSA1_1 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6366_modarray__Cond_71(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6366_modarray__Cond_71( bool _cwc_1595 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6366_modarray__Cond_71 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1586__SSA1_1 { , NN } ; 
  int _cwc_1589 { , NN } ; 
  bool _cwc_1591 { , NN } ; 
  int[*] _cwc_1593 { , NN } ; 

  if (_cwc_1595) 
  { 
    _cwc_1593 = ArrayBasics::modarray( array, v, val) ; 
  }
  else
  { 
    _cwc_1589 = _dim_A_( val); 
    _cwc_1591 = _gt_SxS_( _cwc_1589, 0); 
    _cwc_1586__SSA1_1 = UTDScalarB:Array::_dup_6365_modarray__Cond_70( _cwc_1591, val, v, array) ; 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1595 ? _cwc_1593 : _cwc_1586__SSA1_1 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6365_modarray__Cond_70(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6365_modarray__Cond_70( bool _cwc_1591 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6365_modarray__Cond_70 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1586__SSA1_1 { , NN } ; 
  int[+] _cwc_1588 { , NN } ; 

  if (_cwc_1591) 
  { 
    _cwc_1588 = ArrayBasics::modarray( array, v, val) ; 
  }
  else
  { 
    _cwc_1586__SSA1_1 = _dispatch_error_( 1, int[*], "UTDScalarB:Array::modarray :: int[*] int[*] int[*] -> int[*] ", array, v, val); 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1591 ? _cwc_1588 : _cwc_1586__SSA1_1 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6368_modarray__Cond_69(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6368_modarray__Cond_69( bool _cwc_1603 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6368_modarray__Cond_69 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1599 { , NN } ; 
  int[*] _cwc_1601 { , NN } ; 

  if (_cwc_1603) 
  { 
    _cwc_1601 = ArrayBasics::modarray( array, v, val) ; 
  }
  else
  { 
    _cwc_1599 = ArrayBasics::modarray( array, v, val) ; 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1603 ? _cwc_1601 : _cwc_1599 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6374_modarray__Cond_68(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6374_modarray__Cond_68( bool _cwc_1625 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6374_modarray__Cond_68 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1586__SSA1_1 { , NN } ; 
  int _cwc_1607 { , NN } ; 
  bool _cwc_1617 { , NN } ; 
  int _cwc_1620 { , NN } ; 
  bool _cwc_1623 { , NN } ; 
  int[*] _cwc_1586 { , NN } ; 

  if (_cwc_1625) 
  { 
    _cwc_1620 = _dim_A_( val); 
    _cwc_1623 = _eq_SxS_( _cwc_1620, 0); 
    _cwc_1586 = UTDScalarB:Array::_dup_6373_modarray__Cond_64( _cwc_1623, val, v, array) ; 
  }
  else
  { 
    _cwc_1607 = _dim_A_( v); 
    _cwc_1617 = _eq_SxS_( _cwc_1607, 1); 
    _cwc_1586__SSA1_1 = UTDScalarB:Array::_dup_6372_modarray__Cond_67( _cwc_1617, val, v, array) ; 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1625 ? _cwc_1586 : _cwc_1586__SSA1_1 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6372_modarray__Cond_67(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6372_modarray__Cond_67( bool _cwc_1617 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6372_modarray__Cond_67 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1586__SSA1_1 { , NN } ; 
  int _cwc_1612 { , NN } ; 
  bool _cwc_1615 { , NN } ; 
  int[*] _cwc_1586 { , NN } ; 

  if (_cwc_1617) 
  { 
    _cwc_1612 = _dim_A_( val); 
    _cwc_1615 = _eq_SxS_( _cwc_1612, 0); 
    _cwc_1586 = UTDScalarB:Array::_dup_6371_modarray__Cond_66( _cwc_1615, val, v, array) ; 
  }
  else
  { 
    _cwc_1586__SSA1_1 = _dispatch_error_( 1, int[*], "UTDScalarB:Array::modarray :: int[*] int[*] int[*] -> int[*] ", array, v, val); 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1617 ? _cwc_1586 : _cwc_1586__SSA1_1 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6371_modarray__Cond_66(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6371_modarray__Cond_66( bool _cwc_1615 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6371_modarray__Cond_66 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1586__SSA1_1 { , NN } ; 
  int _cwc_1609 { , NN } ; 
  bool _cwc_1611 { , NN } ; 
  int[*] _cwc_1613 { , NN } ; 

  if (_cwc_1615) 
  { 
    _cwc_1613 = ArrayBasics::modarray( array, v, val) ; 
  }
  else
  { 
    _cwc_1609 = _dim_A_( val); 
    _cwc_1611 = _gt_SxS_( _cwc_1609, 0); 
    _cwc_1586__SSA1_1 = UTDScalarB:Array::_dup_6370_modarray__Cond_65( _cwc_1611, val, v, array) ; 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1615 ? _cwc_1613 : _cwc_1586__SSA1_1 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6370_modarray__Cond_65(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6370_modarray__Cond_65( bool _cwc_1611 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6370_modarray__Cond_65 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1586__SSA1_1 { , NN } ; 
  int[+] _cwc_1608 { , NN } ; 

  if (_cwc_1611) 
  { 
    _cwc_1608 = ArrayBasics::modarray( array, v, val) ; 
  }
  else
  { 
    _cwc_1586__SSA1_1 = _dispatch_error_( 1, int[*], "UTDScalarB:Array::modarray :: int[*] int[*] int[*] -> int[*] ", array, v, val); 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1611 ? _cwc_1608 : _cwc_1586__SSA1_1 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6373_modarray__Cond_64(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6373_modarray__Cond_64( bool _cwc_1623 { ,NN } , int[*] val { ,NN } , int[*] v { ,NN } , int[*] array { ,NN } )
/*
 *  _dup_6373_modarray__Cond_64 ::  ---
 */
{ 
  int[*] _cwc_1586__SSA1_2 { , NN } ; 
  int[*] _cwc_1619 { , NN } ; 
  int[.] _cwc_1621 { , NN } ; 

  if (_cwc_1623) 
  { 
    _cwc_1621 = UTDScalarB:Array::modarray( array, v, val) ; 
  }
  else
  { 
    _cwc_1619 = ArrayBasics::modarray( array, v, val) ; 
  }
  _cwc_1586__SSA1_2 = ( _cwc_1623 ? _cwc_1621 : _cwc_1619 ); 
  return( _cwc_1586__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::LEXXB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[14] UTDScalarB::LEXXB()
/*
 *  LEXXB ::  ---
 */
{ 
  bool[14] _cwc_1629 { , NN } ; 

  _cwc_1629 = UTDScalarB::LEXXB() ; 
  return( _cwc_1629); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::jotdotleBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[+] UTDScalarB::jotdotleBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  jotdotleBBB ::  ---
 */
{ 
  bool[+] _cwc_1630 { , NN } ; 
  bool _cwc_1691 { , NN } ; 
  int _cwc_1689 { , NN } ; 

  _cwc_1689 = _dim_A_( x); 
  _cwc_1691 = _gt_SxS_( _cwc_1689, 0); 
  _cwc_1630 = UTDScalarB::jotdotleBBB__Cond_86( _cwc_1691, y, x) ; 
  return( _cwc_1630); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::jotdotleBBB__Cond_86(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::jotdotleBBB__Cond_86( bool _cwc_1691 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  jotdotleBBB__Cond_86 ::  ---
 */
{ 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1630__SSA1_1 { , NN } ; 
  int _cwc_1647 { , NN } ; 
  bool _cwc_1688 { , NN } ; 
  bool[+] _cwc_1630 { , NN } ; 

  if (_cwc_1691) 
  { 
    _cwc_1647 = _dim_A_( x); 
    _cwc_1688 = _eq_SxS_( _cwc_1647, 1); 
    _cwc_1630 = UTDScalarB::_dup_6410_jotdotleBBB__Cond_85( _cwc_1688, y, x) ; 
  }
  else
  { 
    _cwc_1630__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotleBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1691 ? _cwc_1630 : _cwc_1630__SSA1_1 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6410_jotdotleBBB__Cond_85(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6410_jotdotleBBB__Cond_85( bool _cwc_1688 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6410_jotdotleBBB__Cond_85 ::  ---
 */
{ 
  int _ivesli_172988 { , NN } ; 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1630__SSA1_1 { , NN } ; 
  int _cwc_1644 { , NN } ; 
  bool _cwc_1646 { , NN } ; 
  int[.] _cwc_1664 { , NN } ; 
  int _cwc_1683 { , NN } ; 
  bool _cwc_1685 { , NN } ; 
  bool[+] _cwc_1630 { , NN } ; 

  if (_cwc_1688) 
  { 
    _cwc_1664 = _shape_A_( x); 
    _ivesli_172988 = 0; 
    _cwc_1683 = _idx_sel_( _ivesli_172988, _cwc_1664); 
    _cwc_1685 = _eq_SxS_( _cwc_1683, 4); 
    _cwc_1630 = UTDScalarB::_dup_6409_jotdotleBBB__Cond_81( _cwc_1685, y, x) ; 
  }
  else
  { 
    _cwc_1644 = _dim_A_( y); 
    _cwc_1646 = _gt_SxS_( _cwc_1644, 0); 
    _cwc_1630__SSA1_1 = UTDScalarB::_dup_6402_jotdotleBBB__Cond_84( _cwc_1646, y, x) ; 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1688 ? _cwc_1630 : _cwc_1630__SSA1_1 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6402_jotdotleBBB__Cond_84(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6402_jotdotleBBB__Cond_84( bool _cwc_1646 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6402_jotdotleBBB__Cond_84 ::  ---
 */
{ 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1630__SSA1_1 { , NN } ; 
  int _cwc_1632 { , NN } ; 
  bool _cwc_1643 { , NN } ; 
  bool[+] _cwc_1630 { , NN } ; 

  if (_cwc_1646) 
  { 
    _cwc_1632 = _dim_A_( y); 
    _cwc_1643 = _eq_SxS_( _cwc_1632, 1); 
    _cwc_1630 = UTDScalarB::_dup_6401_jotdotleBBB__Cond_83( _cwc_1643, y, x) ; 
  }
  else
  { 
    _cwc_1630__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotleBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1646 ? _cwc_1630 : _cwc_1630__SSA1_1 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6401_jotdotleBBB__Cond_83(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6401_jotdotleBBB__Cond_83( bool _cwc_1643 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6401_jotdotleBBB__Cond_83 ::  ---
 */
{ 
  int _ivesli_172990 { , NN } ; 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1631 { , NN } ; 
  int[.] _cwc_1634 { , NN } ; 
  int _cwc_1638 { , NN } ; 
  bool _cwc_1640 { , NN } ; 
  bool[+] _cwc_1630 { , NN } ; 

  if (_cwc_1643) 
  { 
    _cwc_1634 = _shape_A_( y); 
    _ivesli_172990 = 0; 
    _cwc_1638 = _idx_sel_( _ivesli_172990, _cwc_1634); 
    _cwc_1640 = _eq_SxS_( _cwc_1638, 4); 
    _cwc_1630 = UTDScalarB::_dup_6400_jotdotleBBB__Cond_82( _cwc_1640, y, x) ; 
  }
  else
  { 
    _cwc_1631 = UTDScalarB::jotdotleBBB( x, y) ; 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1643 ? _cwc_1630 : _cwc_1631 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6400_jotdotleBBB__Cond_82(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6400_jotdotleBBB__Cond_82( bool _cwc_1641 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6400_jotdotleBBB__Cond_82 ::  ---
 */
{ 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1633 { , NN } ; 
  bool[+] _cwc_1635 { , NN } ; 

  if (_cwc_1641) 
  { 
    _cwc_1635 = UTDScalarB::jotdotleBBB( x, y) ; 
  }
  else
  { 
    _cwc_1633 = UTDScalarB::jotdotleBBB( x, y) ; 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1641 ? _cwc_1635 : _cwc_1633 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6409_jotdotleBBB__Cond_81(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6409_jotdotleBBB__Cond_81( bool _cwc_1686 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6409_jotdotleBBB__Cond_81 ::  ---
 */
{ 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1630__SSA1_1 { , NN } ; 
  int _cwc_1661 { , NN } ; 
  bool _cwc_1663 { , NN } ; 
  int _cwc_1678 { , NN } ; 
  bool _cwc_1680 { , NN } ; 
  bool[+] _cwc_1630 { , NN } ; 

  if (_cwc_1686) 
  { 
    _cwc_1678 = _dim_A_( y); 
    _cwc_1680 = _gt_SxS_( _cwc_1678, 0); 
    _cwc_1630 = UTDScalarB::_dup_6408_jotdotleBBB__Cond_77( _cwc_1680, y, x) ; 
  }
  else
  { 
    _cwc_1661 = _dim_A_( y); 
    _cwc_1663 = _gt_SxS_( _cwc_1661, 0); 
    _cwc_1630__SSA1_1 = UTDScalarB::_dup_6405_jotdotleBBB__Cond_80( _cwc_1663, y, x) ; 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1686 ? _cwc_1630 : _cwc_1630__SSA1_1 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6405_jotdotleBBB__Cond_80(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6405_jotdotleBBB__Cond_80( bool _cwc_1663 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6405_jotdotleBBB__Cond_80 ::  ---
 */
{ 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1630__SSA1_1 { , NN } ; 
  int _cwc_1649 { , NN } ; 
  bool _cwc_1660 { , NN } ; 
  bool[+] _cwc_1630 { , NN } ; 

  if (_cwc_1663) 
  { 
    _cwc_1649 = _dim_A_( y); 
    _cwc_1660 = _eq_SxS_( _cwc_1649, 1); 
    _cwc_1630 = UTDScalarB::_dup_6404_jotdotleBBB__Cond_79( _cwc_1660, y, x) ; 
  }
  else
  { 
    _cwc_1630__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotleBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1663 ? _cwc_1630 : _cwc_1630__SSA1_1 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6404_jotdotleBBB__Cond_79(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6404_jotdotleBBB__Cond_79( bool _cwc_1660 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6404_jotdotleBBB__Cond_79 ::  ---
 */
{ 
  int _ivesli_172992 { , NN } ; 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1648 { , NN } ; 
  int[.] _cwc_1651 { , NN } ; 
  int _cwc_1655 { , NN } ; 
  bool _cwc_1657 { , NN } ; 
  bool[+] _cwc_1630 { , NN } ; 

  if (_cwc_1660) 
  { 
    _cwc_1651 = _shape_A_( y); 
    _ivesli_172992 = 0; 
    _cwc_1655 = _idx_sel_( _ivesli_172992, _cwc_1651); 
    _cwc_1657 = _eq_SxS_( _cwc_1655, 4); 
    _cwc_1630 = UTDScalarB::_dup_6403_jotdotleBBB__Cond_78( _cwc_1657, y, x) ; 
  }
  else
  { 
    _cwc_1648 = UTDScalarB::jotdotleBBB( x, y) ; 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1660 ? _cwc_1630 : _cwc_1648 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6403_jotdotleBBB__Cond_78(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6403_jotdotleBBB__Cond_78( bool _cwc_1658 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6403_jotdotleBBB__Cond_78 ::  ---
 */
{ 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1650 { , NN } ; 
  bool[+] _cwc_1652 { , NN } ; 

  if (_cwc_1658) 
  { 
    _cwc_1652 = UTDScalarB::jotdotleBBB( x, y) ; 
  }
  else
  { 
    _cwc_1650 = UTDScalarB::jotdotleBBB( x, y) ; 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1658 ? _cwc_1652 : _cwc_1650 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6408_jotdotleBBB__Cond_77(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6408_jotdotleBBB__Cond_77( bool _cwc_1680 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6408_jotdotleBBB__Cond_77 ::  ---
 */
{ 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1630__SSA1_1 { , NN } ; 
  int _cwc_1666 { , NN } ; 
  bool _cwc_1677 { , NN } ; 
  bool[+] _cwc_1630 { , NN } ; 

  if (_cwc_1680) 
  { 
    _cwc_1666 = _dim_A_( y); 
    _cwc_1677 = _eq_SxS_( _cwc_1666, 1); 
    _cwc_1630 = UTDScalarB::_dup_6407_jotdotleBBB__Cond_76( _cwc_1677, y, x) ; 
  }
  else
  { 
    _cwc_1630__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotleBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1680 ? _cwc_1630 : _cwc_1630__SSA1_1 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6407_jotdotleBBB__Cond_76(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6407_jotdotleBBB__Cond_76( bool _cwc_1677 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6407_jotdotleBBB__Cond_76 ::  ---
 */
{ 
  int _ivesli_172994 { , NN } ; 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1665 { , NN } ; 
  int[.] _cwc_1668 { , NN } ; 
  int _cwc_1672 { , NN } ; 
  bool _cwc_1674 { , NN } ; 
  bool[+] _cwc_1630 { , NN } ; 

  if (_cwc_1677) 
  { 
    _cwc_1668 = _shape_A_( y); 
    _ivesli_172994 = 0; 
    _cwc_1672 = _idx_sel_( _ivesli_172994, _cwc_1668); 
    _cwc_1674 = _eq_SxS_( _cwc_1672, 4); 
    _cwc_1630 = UTDScalarB::_dup_6406_jotdotleBBB__Cond_75( _cwc_1674, y, x) ; 
  }
  else
  { 
    _cwc_1665 = UTDScalarB::jotdotleBBB( x, y) ; 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1677 ? _cwc_1630 : _cwc_1665 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6406_jotdotleBBB__Cond_75(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6406_jotdotleBBB__Cond_75( bool _cwc_1675 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6406_jotdotleBBB__Cond_75 ::  ---
 */
{ 
  bool[+] _cwc_1630__SSA1_2 { , NN } ; 
  bool[+] _cwc_1667 { , NN } ; 
  bool[4,4] _cwc_1669 { , NN } ; 

  if (_cwc_1675) 
  { 
    _cwc_1669 = UTDScalarB::jotdotleBBB( x, y) ; 
  }
  else
  { 
    _cwc_1667 = UTDScalarB::jotdotleBBB( x, y) ; 
  }
  _cwc_1630__SSA1_2 = ( _cwc_1675 ? _cwc_1669 : _cwc_1667 ); 
  return( _cwc_1630__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::notXBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[*] UTDScalarB::notXBB( bool[*] y { ,NN } )
/*
 *  notXBB ::  ---
 */
{ 
  bool[*] _cwc_1692 { , NN } ; 
  bool _cwc_1707 { , NN } ; 
  int _cwc_1704 { , NN } ; 

  _cwc_1704 = _dim_A_( y); 
  _cwc_1707 = _eq_SxS_( _cwc_1704, 0); 
  _cwc_1692 = UTDScalarB::notXBB__Cond_90( _cwc_1707, y) ; 
  return( _cwc_1692); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::notXBB__Cond_90(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::notXBB__Cond_90( bool _cwc_1707 { ,NN } , bool[*] y { ,NN } )
/*
 *  notXBB__Cond_90 ::  ---
 */
{ 
  bool[*] _cwc_1692__SSA1_2 { , NN } ; 
  bool[*] _cwc_1692__SSA1_1 { , NN } ; 
  int _cwc_1701 { , NN } ; 
  bool _cwc_1703 { , NN } ; 
  bool _cwc_1705 { , NN } ; 

  if (_cwc_1707) 
  { 
    _cwc_1705 = UTDScalarB::notXBB( y) ; 
  }
  else
  { 
    _cwc_1701 = _dim_A_( y); 
    _cwc_1703 = _gt_SxS_( _cwc_1701, 0); 
    _cwc_1692__SSA1_1 = UTDScalarB::_dup_6416_notXBB__Cond_89( _cwc_1703, y) ; 
  }
  _cwc_1692__SSA1_2 = ( _cwc_1707 ? _cwc_1705 : _cwc_1692__SSA1_1 ); 
  return( _cwc_1692__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6416_notXBB__Cond_89(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6416_notXBB__Cond_89( bool _cwc_1703 { ,NN } , bool[*] y { ,NN } )
/*
 *  _dup_6416_notXBB__Cond_89 ::  ---
 */
{ 
  bool[*] _cwc_1692__SSA1_2 { , NN } ; 
  bool[*] _cwc_1692__SSA1_1 { , NN } ; 
  int _cwc_1694 { , NN } ; 
  bool _cwc_1700 { , NN } ; 
  bool[+] _cwc_1692 { , NN } ; 

  if (_cwc_1703) 
  { 
    _cwc_1694 = _dim_A_( y); 
    _cwc_1700 = _eq_SxS_( _cwc_1694, 3); 
    _cwc_1692 = UTDScalarB::_dup_6415_notXBB__Cond_88( _cwc_1694, _cwc_1700, y) ; 
  }
  else
  { 
    _cwc_1692__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::notXBB :: bool[*] -> bool[*] ", y); 
  }
  _cwc_1692__SSA1_2 = ( _cwc_1703 ? _cwc_1692 : _cwc_1692__SSA1_1 ); 
  return( _cwc_1692__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6415_notXBB__Cond_88(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6415_notXBB__Cond_88( int _cwc_1694 { ,NN } , bool _cwc_1700 { ,NN } , bool[*] y { ,NN } )
/*
 *  _dup_6415_notXBB__Cond_88 ::  ---
 */
{ 
  bool[+] _cwc_1692__SSA1_2 { , NN } ; 
  bool[+] _cwc_1692__SSA1_1 { , NN } ; 
  bool _cwc_1697 { , NN } ; 
  bool[.,.,.] _cwc_1698 { , NN } ; 

  if (_cwc_1700) 
  { 
    _cwc_1698 = UTDScalarB::notXBB( y) ; 
  }
  else
  { 
    _cwc_1697 = _eq_SxS_( _cwc_1694, 2); 
    _cwc_1692__SSA1_1 = UTDScalarB::_dup_6414_notXBB__Cond_87( _cwc_1697, y) ; 
  }
  _cwc_1692__SSA1_2 = ( _cwc_1700 ? _cwc_1698 : _cwc_1692__SSA1_1 ); 
  return( _cwc_1692__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6414_notXBB__Cond_87(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6414_notXBB__Cond_87( bool _cwc_1697 { ,NN } , bool[*] y { ,NN } )
/*
 *  _dup_6414_notXBB__Cond_87 ::  ---
 */
{ 
  bool[+] _cwc_1692__SSA1_2 { , NN } ; 
  bool[+] _cwc_1693 { , NN } ; 
  bool[.,.] _cwc_1695 { , NN } ; 

  if (_cwc_1697) 
  { 
    _cwc_1695 = UTDScalarB::notXBB( y) ; 
  }
  else
  { 
    _cwc_1693 = UTDScalarB::notXBB( y) ; 
  }
  _cwc_1692__SSA1_2 = ( _cwc_1697 ? _cwc_1695 : _cwc_1693 ); 
  return( _cwc_1692__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB:Array::prod(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
int UTDScalarB:Array::prod( int[*] arr_a { ,NN } )
/*
 *  prod ::  ---
 */
{ 
  int _cwc_1708 { , NN } ; 
  bool _cwc_1728 { , NN } ; 
  int _cwc_1710 { , NN } ; 

  _cwc_1710 = _dim_A_( arr_a); 
  _cwc_1728 = _eq_SxS_( _cwc_1710, 1); 
  _cwc_1708 = UTDScalarB:Array::prod__Cond_93( _cwc_1728, arr_a) ; 
  return( _cwc_1708); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::prod__Cond_93(...) [ body ]
 ****************************************************************************/
int UTDScalarB:Array::prod__Cond_93( bool _cwc_1728 { ,NN } , int[*] arr_a { ,NN } )
/*
 *  prod__Cond_93 ::  ---
 */
{ 
  int _ivesli_172996 { , NN } ; 
  int _cwc_1708__SSA1_2 { , NN } ; 
  int _cwc_1709 { , NN } ; 
  int[.] _cwc_1712 { , NN } ; 
  int _cwc_1723 { , NN } ; 
  bool _cwc_1725 { , NN } ; 
  int _cwc_1708 { , NN } ; 

  if (_cwc_1728) 
  { 
    _cwc_1712 = _shape_A_( arr_a); 
    _ivesli_172996 = 0; 
    _cwc_1723 = _idx_sel_( _ivesli_172996, _cwc_1712); 
    _cwc_1725 = _eq_SxS_( _cwc_1723, 1); 
    _cwc_1708 = UTDScalarB:Array::_dup_6419_prod__Cond_92( _cwc_1712, _cwc_1725, arr_a) ; 
  }
  else
  { 
    _cwc_1709 = ArrayTransform::prod( arr_a) ; 
  }
  _cwc_1708__SSA1_2 = ( _cwc_1728 ? _cwc_1708 : _cwc_1709 ); 
  return( _cwc_1708__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6419_prod__Cond_92(...) [ body ]
 ****************************************************************************/
int UTDScalarB:Array::_dup_6419_prod__Cond_92( int[.] _cwc_1712 { ,NN } , bool _cwc_1726 { ,NN } , int[*] arr_a { ,NN } )
/*
 *  _dup_6419_prod__Cond_92 ::  ---
 */
{ 
  int _ivesli_172998 { , NN } ; 
  int _cwc_1708__SSA1_2 { , NN } ; 
  int _cwc_1708__SSA1_1 { , NN } ; 
  int _cwc_1716 { , NN } ; 
  bool _cwc_1718 { , NN } ; 
  int _cwc_1720 { , NN } ; 

  if (_cwc_1726) 
  { 
    _cwc_1720 = UTDScalarB:Array::prod( arr_a) ; 
  }
  else
  { 
    _ivesli_172998 = 0; 
    _cwc_1716 = _idx_sel_( _ivesli_172998, _cwc_1712); 
    _cwc_1718 = _eq_SxS_( _cwc_1716, 0); 
    _cwc_1708__SSA1_1 = UTDScalarB:Array::_dup_6418_prod__Cond_91( _cwc_1718, arr_a) ; 
  }
  _cwc_1708__SSA1_2 = ( _cwc_1726 ? _cwc_1720 : _cwc_1708__SSA1_1 ); 
  return( _cwc_1708__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6418_prod__Cond_91(...) [ body ]
 ****************************************************************************/
int UTDScalarB:Array::_dup_6418_prod__Cond_91( bool _cwc_1719 { ,NN } , int[*] arr_a { ,NN } )
/*
 *  _dup_6418_prod__Cond_91 ::  ---
 */
{ 
  int _cwc_1708__SSA1_2 { , NN } ; 
  int _cwc_1711 { , NN } ; 
  int{1} _cwc_1713 { , NN } ; 

  if (_cwc_1719) 
  { 
    _cwc_1713 = 1; 
  }
  else
  { 
    _cwc_1711 = UTDScalarB:Array::prod( arr_a) ; 
  }
  _cwc_1708__SSA1_2 = ( _cwc_1719 ? _cwc_1713 : _cwc_1711 ); 
  return( _cwc_1708__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::ORXXB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[14] UTDScalarB::ORXXB()
/*
 *  ORXXB ::  ---
 */
{ 
  bool[14] _cwc_1730 { , NN } ; 

  _cwc_1730 = UTDScalarB::ORXXB() ; 
  return( _cwc_1730); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::andslXBBQUICKSTOP(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool UTDScalarB::andslXBBQUICKSTOP( bool[*] y { ,NN } )
/*
 *  andslXBBQUICKSTOP ::  ---
 */
{ 
  bool _cwc_1731 { , NN } ; 
  bool _cwc_1735 { , NN } ; 
  int _cwc_1732 { , NN } ; 

  _cwc_1732 = _dim_A_( y); 
  _cwc_1735 = _eq_SxS_( _cwc_1732, 1); 
  _cwc_1731 = UTDScalarB::andslXBBQUICKSTOP__Cond_94( _cwc_1735, y) ; 
  return( _cwc_1731); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::andslXBBQUICKSTOP__Cond_94(...) [ body ]
 ****************************************************************************/
bool UTDScalarB::andslXBBQUICKSTOP__Cond_94( bool _cwc_1735 { ,NN } , bool[*] y { ,NN } )
/*
 *  andslXBBQUICKSTOP__Cond_94 ::  ---
 */
{ 
  bool _cwc_1731__SSA1_2 { , NN } ; 
  bool _cwc_1731__SSA1_1 { , NN } ; 
  bool _cwc_1733 { , NN } ; 

  if (_cwc_1735) 
  { 
    _cwc_1733 = UTDScalarB::andslXBBQUICKSTOP( y) ; 
  }
  else
  { 
    _cwc_1731__SSA1_1 = _dispatch_error_( 1, bool, "UTDScalarB::andslXBBQUICKSTOP :: bool[*] -> bool ", y); 
  }
  _cwc_1731__SSA1_2 = ( _cwc_1735 ? _cwc_1733 : _cwc_1731__SSA1_1 ); 
  return( _cwc_1731__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::jotdotorBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[+] UTDScalarB::jotdotorBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  jotdotorBBB ::  ---
 */
{ 
  bool[+] _cwc_1736 { , NN } ; 
  bool _cwc_1797 { , NN } ; 
  int _cwc_1795 { , NN } ; 

  _cwc_1795 = _dim_A_( x); 
  _cwc_1797 = _gt_SxS_( _cwc_1795, 0); 
  _cwc_1736 = UTDScalarB::jotdotorBBB__Cond_106( _cwc_1797, y, x) ; 
  return( _cwc_1736); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::jotdotorBBB__Cond_106(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::jotdotorBBB__Cond_106( bool _cwc_1797 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  jotdotorBBB__Cond_106 ::  ---
 */
{ 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1736__SSA1_1 { , NN } ; 
  int _cwc_1753 { , NN } ; 
  bool _cwc_1794 { , NN } ; 
  bool[+] _cwc_1736 { , NN } ; 

  if (_cwc_1797) 
  { 
    _cwc_1753 = _dim_A_( x); 
    _cwc_1794 = _eq_SxS_( _cwc_1753, 1); 
    _cwc_1736 = UTDScalarB::_dup_6455_jotdotorBBB__Cond_105( _cwc_1794, y, x) ; 
  }
  else
  { 
    _cwc_1736__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotorBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1797 ? _cwc_1736 : _cwc_1736__SSA1_1 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6455_jotdotorBBB__Cond_105(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6455_jotdotorBBB__Cond_105( bool _cwc_1794 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6455_jotdotorBBB__Cond_105 ::  ---
 */
{ 
  int _ivesli_173000 { , NN } ; 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1736__SSA1_1 { , NN } ; 
  int _cwc_1750 { , NN } ; 
  bool _cwc_1752 { , NN } ; 
  int[.] _cwc_1770 { , NN } ; 
  int _cwc_1789 { , NN } ; 
  bool _cwc_1791 { , NN } ; 
  bool[+] _cwc_1736 { , NN } ; 

  if (_cwc_1794) 
  { 
    _cwc_1770 = _shape_A_( x); 
    _ivesli_173000 = 0; 
    _cwc_1789 = _idx_sel_( _ivesli_173000, _cwc_1770); 
    _cwc_1791 = _eq_SxS_( _cwc_1789, 4); 
    _cwc_1736 = UTDScalarB::_dup_6454_jotdotorBBB__Cond_101( _cwc_1791, y, x) ; 
  }
  else
  { 
    _cwc_1750 = _dim_A_( y); 
    _cwc_1752 = _gt_SxS_( _cwc_1750, 0); 
    _cwc_1736__SSA1_1 = UTDScalarB::_dup_6447_jotdotorBBB__Cond_104( _cwc_1752, y, x) ; 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1794 ? _cwc_1736 : _cwc_1736__SSA1_1 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6447_jotdotorBBB__Cond_104(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6447_jotdotorBBB__Cond_104( bool _cwc_1752 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6447_jotdotorBBB__Cond_104 ::  ---
 */
{ 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1736__SSA1_1 { , NN } ; 
  int _cwc_1738 { , NN } ; 
  bool _cwc_1749 { , NN } ; 
  bool[+] _cwc_1736 { , NN } ; 

  if (_cwc_1752) 
  { 
    _cwc_1738 = _dim_A_( y); 
    _cwc_1749 = _eq_SxS_( _cwc_1738, 1); 
    _cwc_1736 = UTDScalarB::_dup_6446_jotdotorBBB__Cond_103( _cwc_1749, y, x) ; 
  }
  else
  { 
    _cwc_1736__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotorBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1752 ? _cwc_1736 : _cwc_1736__SSA1_1 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6446_jotdotorBBB__Cond_103(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6446_jotdotorBBB__Cond_103( bool _cwc_1749 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6446_jotdotorBBB__Cond_103 ::  ---
 */
{ 
  int _ivesli_173002 { , NN } ; 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1737 { , NN } ; 
  int[.] _cwc_1740 { , NN } ; 
  int _cwc_1744 { , NN } ; 
  bool _cwc_1746 { , NN } ; 
  bool[+] _cwc_1736 { , NN } ; 

  if (_cwc_1749) 
  { 
    _cwc_1740 = _shape_A_( y); 
    _ivesli_173002 = 0; 
    _cwc_1744 = _idx_sel_( _ivesli_173002, _cwc_1740); 
    _cwc_1746 = _eq_SxS_( _cwc_1744, 4); 
    _cwc_1736 = UTDScalarB::_dup_6445_jotdotorBBB__Cond_102( _cwc_1746, y, x) ; 
  }
  else
  { 
    _cwc_1737 = UTDScalarB::jotdotorBBB( x, y) ; 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1749 ? _cwc_1736 : _cwc_1737 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6445_jotdotorBBB__Cond_102(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6445_jotdotorBBB__Cond_102( bool _cwc_1747 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6445_jotdotorBBB__Cond_102 ::  ---
 */
{ 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1739 { , NN } ; 
  bool[+] _cwc_1741 { , NN } ; 

  if (_cwc_1747) 
  { 
    _cwc_1741 = UTDScalarB::jotdotorBBB( x, y) ; 
  }
  else
  { 
    _cwc_1739 = UTDScalarB::jotdotorBBB( x, y) ; 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1747 ? _cwc_1741 : _cwc_1739 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6454_jotdotorBBB__Cond_101(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6454_jotdotorBBB__Cond_101( bool _cwc_1792 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6454_jotdotorBBB__Cond_101 ::  ---
 */
{ 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1736__SSA1_1 { , NN } ; 
  int _cwc_1767 { , NN } ; 
  bool _cwc_1769 { , NN } ; 
  int _cwc_1784 { , NN } ; 
  bool _cwc_1786 { , NN } ; 
  bool[+] _cwc_1736 { , NN } ; 

  if (_cwc_1792) 
  { 
    _cwc_1784 = _dim_A_( y); 
    _cwc_1786 = _gt_SxS_( _cwc_1784, 0); 
    _cwc_1736 = UTDScalarB::_dup_6453_jotdotorBBB__Cond_97( _cwc_1786, y, x) ; 
  }
  else
  { 
    _cwc_1767 = _dim_A_( y); 
    _cwc_1769 = _gt_SxS_( _cwc_1767, 0); 
    _cwc_1736__SSA1_1 = UTDScalarB::_dup_6450_jotdotorBBB__Cond_100( _cwc_1769, y, x) ; 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1792 ? _cwc_1736 : _cwc_1736__SSA1_1 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6450_jotdotorBBB__Cond_100(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6450_jotdotorBBB__Cond_100( bool _cwc_1769 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6450_jotdotorBBB__Cond_100 ::  ---
 */
{ 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1736__SSA1_1 { , NN } ; 
  int _cwc_1755 { , NN } ; 
  bool _cwc_1766 { , NN } ; 
  bool[+] _cwc_1736 { , NN } ; 

  if (_cwc_1769) 
  { 
    _cwc_1755 = _dim_A_( y); 
    _cwc_1766 = _eq_SxS_( _cwc_1755, 1); 
    _cwc_1736 = UTDScalarB::_dup_6449_jotdotorBBB__Cond_99( _cwc_1766, y, x) ; 
  }
  else
  { 
    _cwc_1736__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotorBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1769 ? _cwc_1736 : _cwc_1736__SSA1_1 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6449_jotdotorBBB__Cond_99(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6449_jotdotorBBB__Cond_99( bool _cwc_1766 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6449_jotdotorBBB__Cond_99 ::  ---
 */
{ 
  int _ivesli_173004 { , NN } ; 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1754 { , NN } ; 
  int[.] _cwc_1757 { , NN } ; 
  int _cwc_1761 { , NN } ; 
  bool _cwc_1763 { , NN } ; 
  bool[+] _cwc_1736 { , NN } ; 

  if (_cwc_1766) 
  { 
    _cwc_1757 = _shape_A_( y); 
    _ivesli_173004 = 0; 
    _cwc_1761 = _idx_sel_( _ivesli_173004, _cwc_1757); 
    _cwc_1763 = _eq_SxS_( _cwc_1761, 4); 
    _cwc_1736 = UTDScalarB::_dup_6448_jotdotorBBB__Cond_98( _cwc_1763, y, x) ; 
  }
  else
  { 
    _cwc_1754 = UTDScalarB::jotdotorBBB( x, y) ; 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1766 ? _cwc_1736 : _cwc_1754 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6448_jotdotorBBB__Cond_98(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6448_jotdotorBBB__Cond_98( bool _cwc_1764 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6448_jotdotorBBB__Cond_98 ::  ---
 */
{ 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1756 { , NN } ; 
  bool[+] _cwc_1758 { , NN } ; 

  if (_cwc_1764) 
  { 
    _cwc_1758 = UTDScalarB::jotdotorBBB( x, y) ; 
  }
  else
  { 
    _cwc_1756 = UTDScalarB::jotdotorBBB( x, y) ; 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1764 ? _cwc_1758 : _cwc_1756 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6453_jotdotorBBB__Cond_97(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6453_jotdotorBBB__Cond_97( bool _cwc_1786 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6453_jotdotorBBB__Cond_97 ::  ---
 */
{ 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1736__SSA1_1 { , NN } ; 
  int _cwc_1772 { , NN } ; 
  bool _cwc_1783 { , NN } ; 
  bool[+] _cwc_1736 { , NN } ; 

  if (_cwc_1786) 
  { 
    _cwc_1772 = _dim_A_( y); 
    _cwc_1783 = _eq_SxS_( _cwc_1772, 1); 
    _cwc_1736 = UTDScalarB::_dup_6452_jotdotorBBB__Cond_96( _cwc_1783, y, x) ; 
  }
  else
  { 
    _cwc_1736__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotorBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1786 ? _cwc_1736 : _cwc_1736__SSA1_1 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6452_jotdotorBBB__Cond_96(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6452_jotdotorBBB__Cond_96( bool _cwc_1783 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6452_jotdotorBBB__Cond_96 ::  ---
 */
{ 
  int _ivesli_173006 { , NN } ; 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1771 { , NN } ; 
  int[.] _cwc_1774 { , NN } ; 
  int _cwc_1778 { , NN } ; 
  bool _cwc_1780 { , NN } ; 
  bool[+] _cwc_1736 { , NN } ; 

  if (_cwc_1783) 
  { 
    _cwc_1774 = _shape_A_( y); 
    _ivesli_173006 = 0; 
    _cwc_1778 = _idx_sel_( _ivesli_173006, _cwc_1774); 
    _cwc_1780 = _eq_SxS_( _cwc_1778, 4); 
    _cwc_1736 = UTDScalarB::_dup_6451_jotdotorBBB__Cond_95( _cwc_1780, y, x) ; 
  }
  else
  { 
    _cwc_1771 = UTDScalarB::jotdotorBBB( x, y) ; 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1783 ? _cwc_1736 : _cwc_1771 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6451_jotdotorBBB__Cond_95(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6451_jotdotorBBB__Cond_95( bool _cwc_1781 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6451_jotdotorBBB__Cond_95 ::  ---
 */
{ 
  bool[+] _cwc_1736__SSA1_2 { , NN } ; 
  bool[+] _cwc_1773 { , NN } ; 
  bool[4,4] _cwc_1775 { , NN } ; 

  if (_cwc_1781) 
  { 
    _cwc_1775 = UTDScalarB::jotdotorBBB( x, y) ; 
  }
  else
  { 
    _cwc_1773 = UTDScalarB::jotdotorBBB( x, y) ; 
  }
  _cwc_1736__SSA1_2 = ( _cwc_1781 ? _cwc_1775 : _cwc_1773 ); 
  return( _cwc_1736__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::rhoXBI(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
int[.] UTDScalarB::rhoXBI( bool[*] y { ,NN } )
/*
 *  rhoXBI ::  ---
 */
{ 
  int[.] _cwc_1798 { , NN } ; 
  bool _cwc_1806 { , NN } ; 
  int _cwc_1804 { , NN } ; 

  _cwc_1804 = _dim_A_( y); 
  _cwc_1806 = _gt_SxS_( _cwc_1804, 0); 
  _cwc_1798 = UTDScalarB::rhoXBI__Cond_108( _cwc_1806, y) ; 
  return( _cwc_1798); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::rhoXBI__Cond_108(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB::rhoXBI__Cond_108( bool _cwc_1806 { ,NN } , bool[*] y { ,NN } )
/*
 *  rhoXBI__Cond_108 ::  ---
 */
{ 
  int[.] _cwc_1798__SSA1_2 { , NN } ; 
  int[.] _cwc_1798__SSA1_1 { , NN } ; 
  int _cwc_1800 { , NN } ; 
  bool _cwc_1803 { , NN } ; 
  int[.] _cwc_1798 { , NN } ; 

  if (_cwc_1806) 
  { 
    _cwc_1800 = _dim_A_( y); 
    _cwc_1803 = _eq_SxS_( _cwc_1800, 3); 
    _cwc_1798 = UTDScalarB::_dup_6456_rhoXBI__Cond_107( _cwc_1803, y) ; 
  }
  else
  { 
    _cwc_1798__SSA1_1 = _dispatch_error_( 1, int[.], "UTDScalarB::rhoXBI :: bool[*] -> int[.] ", y); 
  }
  _cwc_1798__SSA1_2 = ( _cwc_1806 ? _cwc_1798 : _cwc_1798__SSA1_1 ); 
  return( _cwc_1798__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6456_rhoXBI__Cond_107(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB::_dup_6456_rhoXBI__Cond_107( bool _cwc_1803 { ,NN } , bool[*] y { ,NN } )
/*
 *  _dup_6456_rhoXBI__Cond_107 ::  ---
 */
{ 
  int[.] _cwc_1798__SSA1_2 { , NN } ; 
  int[.] _cwc_1799 { , NN } ; 
  int[3] _cwc_1801 { , NN } ; 

  if (_cwc_1803) 
  { 
    _cwc_1801 = UTDScalarB::rhoXBI( y) ; 
  }
  else
  { 
    _cwc_1799 = UTDScalarB::rhoXBI( y) ; 
  }
  _cwc_1798__SSA1_2 = ( _cwc_1803 ? _cwc_1801 : _cwc_1799 ); 
  return( _cwc_1798__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::andBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[*] UTDScalarB::andBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  andBBB ::  ---
 */
{ 
  bool[*] _cwc_1807 { , NN } ; 
  bool _cwc_1860 { , NN } ; 
  int _cwc_1838 { , NN } ; 

  _cwc_1838 = _dim_A_( x); 
  _cwc_1860 = _eq_SxS_( _cwc_1838, 0); 
  _cwc_1807 = UTDScalarB::andBBB__Cond_121( _cwc_1860, y, x) ; 
  return( _cwc_1807); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::andBBB__Cond_121(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::andBBB__Cond_121( bool _cwc_1860 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  andBBB__Cond_121 ::  ---
 */
{ 
  bool[*] _cwc_1807__SSA1_2 { , NN } ; 
  bool[*] _cwc_1807__SSA1_1 { , NN } ; 
  int _cwc_1835 { , NN } ; 
  bool _cwc_1837 { , NN } ; 
  int _cwc_1855 { , NN } ; 
  bool _cwc_1858 { , NN } ; 
  bool[*] _cwc_1807 { , NN } ; 

  if (_cwc_1860) 
  { 
    _cwc_1855 = _dim_A_( y); 
    _cwc_1858 = _eq_SxS_( _cwc_1855, 0); 
    _cwc_1807 = UTDScalarB::_dup_6493_andBBB__Cond_112( _cwc_1858, y, x) ; 
  }
  else
  { 
    _cwc_1835 = _dim_A_( x); 
    _cwc_1837 = _gt_SxS_( _cwc_1835, 0); 
    _cwc_1807__SSA1_1 = UTDScalarB::_dup_6489_andBBB__Cond_120( _cwc_1837, y, x) ; 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1860 ? _cwc_1807 : _cwc_1807__SSA1_1 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6489_andBBB__Cond_120(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6489_andBBB__Cond_120( bool _cwc_1837 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6489_andBBB__Cond_120 ::  ---
 */
{ 
  bool[*] _cwc_1807__SSA1_2 { , NN } ; 
  bool[*] _cwc_1807__SSA1_1 { , NN } ; 
  int _cwc_1820 { , NN } ; 
  bool _cwc_1834 { , NN } ; 
  bool[*] _cwc_1807 { , NN } ; 

  if (_cwc_1837) 
  { 
    _cwc_1820 = _dim_A_( x); 
    _cwc_1834 = _eq_SxS_( _cwc_1820, 3); 
    _cwc_1807 = UTDScalarB::_dup_6488_andBBB__Cond_119( _cwc_1834, y, x) ; 
  }
  else
  { 
    _cwc_1807__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::andBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1837 ? _cwc_1807 : _cwc_1807__SSA1_1 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6488_andBBB__Cond_119(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6488_andBBB__Cond_119( bool _cwc_1834 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6488_andBBB__Cond_119 ::  ---
 */
{ 
  bool[*] _cwc_1807__SSA1_2 { , NN } ; 
  bool[*] _cwc_1807__SSA1_1 { , NN } ; 
  int _cwc_1816 { , NN } ; 
  bool _cwc_1819 { , NN } ; 
  int _cwc_1829 { , NN } ; 
  bool _cwc_1832 { , NN } ; 
  bool[*] _cwc_1807 { , NN } ; 

  if (_cwc_1834) 
  { 
    _cwc_1829 = _dim_A_( y); 
    _cwc_1832 = _eq_SxS_( _cwc_1829, 0); 
    _cwc_1807 = UTDScalarB::_dup_6487_andBBB__Cond_115( _cwc_1832, y, x) ; 
  }
  else
  { 
    _cwc_1816 = _dim_A_( y); 
    _cwc_1819 = _eq_SxS_( _cwc_1816, 0); 
    _cwc_1807__SSA1_1 = UTDScalarB::_dup_6484_andBBB__Cond_118( _cwc_1819, y, x) ; 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1834 ? _cwc_1807 : _cwc_1807__SSA1_1 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6484_andBBB__Cond_118(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6484_andBBB__Cond_118( bool _cwc_1819 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6484_andBBB__Cond_118 ::  ---
 */
{ 
  bool[*] _cwc_1807__SSA1_2 { , NN } ; 
  bool[*] _cwc_1807__SSA1_1 { , NN } ; 
  int _cwc_1813 { , NN } ; 
  bool _cwc_1815 { , NN } ; 
  bool[+] _cwc_1817 { , NN } ; 

  if (_cwc_1819) 
  { 
    _cwc_1817 = UTDScalarB::andBBB( x, y) ; 
  }
  else
  { 
    _cwc_1813 = _dim_A_( y); 
    _cwc_1815 = _gt_SxS_( _cwc_1813, 0); 
    _cwc_1807__SSA1_1 = UTDScalarB::_dup_6483_andBBB__Cond_117( _cwc_1815, y, x) ; 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1819 ? _cwc_1817 : _cwc_1807__SSA1_1 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6483_andBBB__Cond_117(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6483_andBBB__Cond_117( bool _cwc_1815 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6483_andBBB__Cond_117 ::  ---
 */
{ 
  bool[*] _cwc_1807__SSA1_2 { , NN } ; 
  bool[*] _cwc_1807__SSA1_1 { , NN } ; 
  int _cwc_1809 { , NN } ; 
  bool _cwc_1812 { , NN } ; 
  bool[+] _cwc_1807 { , NN } ; 

  if (_cwc_1815) 
  { 
    _cwc_1809 = _dim_A_( y); 
    _cwc_1812 = _eq_SxS_( _cwc_1809, 3); 
    _cwc_1807 = UTDScalarB::_dup_6482_andBBB__Cond_116( _cwc_1812, y, x) ; 
  }
  else
  { 
    _cwc_1807__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::andBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1815 ? _cwc_1807 : _cwc_1807__SSA1_1 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6482_andBBB__Cond_116(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6482_andBBB__Cond_116( bool _cwc_1812 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6482_andBBB__Cond_116 ::  ---
 */
{ 
  bool[+] _cwc_1807__SSA1_2 { , NN } ; 
  bool[+] _cwc_1808 { , NN } ; 
  bool[+] _cwc_1810 { , NN } ; 

  if (_cwc_1812) 
  { 
    _cwc_1810 = UTDScalarB::andBBB( x, y) ; 
  }
  else
  { 
    _cwc_1808 = UTDScalarB::andBBB( x, y) ; 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1812 ? _cwc_1810 : _cwc_1808 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6487_andBBB__Cond_115(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6487_andBBB__Cond_115( bool _cwc_1832 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6487_andBBB__Cond_115 ::  ---
 */
{ 
  bool[*] _cwc_1807__SSA1_2 { , NN } ; 
  bool[*] _cwc_1807__SSA1_1 { , NN } ; 
  int _cwc_1826 { , NN } ; 
  bool _cwc_1828 { , NN } ; 
  bool[.,.,.] _cwc_1830 { , NN } ; 

  if (_cwc_1832) 
  { 
    _cwc_1830 = UTDScalarB::andBBB( x, y) ; 
  }
  else
  { 
    _cwc_1826 = _dim_A_( y); 
    _cwc_1828 = _gt_SxS_( _cwc_1826, 0); 
    _cwc_1807__SSA1_1 = UTDScalarB::_dup_6486_andBBB__Cond_114( _cwc_1828, y, x) ; 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1832 ? _cwc_1830 : _cwc_1807__SSA1_1 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6486_andBBB__Cond_114(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6486_andBBB__Cond_114( bool _cwc_1828 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6486_andBBB__Cond_114 ::  ---
 */
{ 
  bool[*] _cwc_1807__SSA1_2 { , NN } ; 
  bool[*] _cwc_1807__SSA1_1 { , NN } ; 
  int _cwc_1822 { , NN } ; 
  bool _cwc_1825 { , NN } ; 
  bool[+] _cwc_1807 { , NN } ; 

  if (_cwc_1828) 
  { 
    _cwc_1822 = _dim_A_( y); 
    _cwc_1825 = _eq_SxS_( _cwc_1822, 3); 
    _cwc_1807 = UTDScalarB::_dup_6485_andBBB__Cond_113( _cwc_1825, y, x) ; 
  }
  else
  { 
    _cwc_1807__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::andBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1828 ? _cwc_1807 : _cwc_1807__SSA1_1 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6485_andBBB__Cond_113(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6485_andBBB__Cond_113( bool _cwc_1825 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6485_andBBB__Cond_113 ::  ---
 */
{ 
  bool[+] _cwc_1807__SSA1_2 { , NN } ; 
  bool[+] _cwc_1821 { , NN } ; 
  bool[.,.,.] _cwc_1823 { , NN } ; 

  if (_cwc_1825) 
  { 
    _cwc_1823 = UTDScalarB::andBBB( x, y) ; 
  }
  else
  { 
    _cwc_1821 = UTDScalarB::andBBB( x, y) ; 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1825 ? _cwc_1823 : _cwc_1821 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6493_andBBB__Cond_112(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6493_andBBB__Cond_112( bool _cwc_1858 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6493_andBBB__Cond_112 ::  ---
 */
{ 
  bool[*] _cwc_1807__SSA1_2 { , NN } ; 
  bool[*] _cwc_1807__SSA1_1 { , NN } ; 
  int _cwc_1852 { , NN } ; 
  bool _cwc_1854 { , NN } ; 
  bool _cwc_1856 { , NN } ; 

  if (_cwc_1858) 
  { 
    _cwc_1856 = UTDScalarB::andBBB( x, y) ; 
  }
  else
  { 
    _cwc_1852 = _dim_A_( y); 
    _cwc_1854 = _gt_SxS_( _cwc_1852, 0); 
    _cwc_1807__SSA1_1 = UTDScalarB::_dup_6492_andBBB__Cond_111( _cwc_1854, y, x) ; 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1858 ? _cwc_1856 : _cwc_1807__SSA1_1 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6492_andBBB__Cond_111(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6492_andBBB__Cond_111( bool _cwc_1854 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6492_andBBB__Cond_111 ::  ---
 */
{ 
  bool[*] _cwc_1807__SSA1_2 { , NN } ; 
  bool[*] _cwc_1807__SSA1_1 { , NN } ; 
  int _cwc_1840 { , NN } ; 
  bool _cwc_1851 { , NN } ; 
  bool[+] _cwc_1807 { , NN } ; 

  if (_cwc_1854) 
  { 
    _cwc_1840 = _dim_A_( y); 
    _cwc_1851 = _eq_SxS_( _cwc_1840, 1); 
    _cwc_1807 = UTDScalarB::_dup_6491_andBBB__Cond_110( _cwc_1851, y, x) ; 
  }
  else
  { 
    _cwc_1807__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::andBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1854 ? _cwc_1807 : _cwc_1807__SSA1_1 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6491_andBBB__Cond_110(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6491_andBBB__Cond_110( bool _cwc_1851 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6491_andBBB__Cond_110 ::  ---
 */
{ 
  int _ivesli_173008 { , NN } ; 
  bool[+] _cwc_1807__SSA1_2 { , NN } ; 
  bool[+] _cwc_1839 { , NN } ; 
  int[.] _cwc_1842 { , NN } ; 
  int _cwc_1846 { , NN } ; 
  bool _cwc_1848 { , NN } ; 
  bool[+] _cwc_1807 { , NN } ; 

  if (_cwc_1851) 
  { 
    _cwc_1842 = _shape_A_( y); 
    _ivesli_173008 = 0; 
    _cwc_1846 = _idx_sel_( _ivesli_173008, _cwc_1842); 
    _cwc_1848 = _eq_SxS_( _cwc_1846, 4); 
    _cwc_1807 = UTDScalarB::_dup_6490_andBBB__Cond_109( _cwc_1848, y, x) ; 
  }
  else
  { 
    _cwc_1839 = UTDScalarB::andBBB( x, y) ; 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1851 ? _cwc_1807 : _cwc_1839 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6490_andBBB__Cond_109(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6490_andBBB__Cond_109( bool _cwc_1849 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6490_andBBB__Cond_109 ::  ---
 */
{ 
  bool[+] _cwc_1807__SSA1_2 { , NN } ; 
  bool[+] _cwc_1841 { , NN } ; 
  bool[4] _cwc_1843 { , NN } ; 

  if (_cwc_1849) 
  { 
    _cwc_1843 = UTDScalarB::andBBB( x, y) ; 
  }
  else
  { 
    _cwc_1841 = UTDScalarB::andBBB( x, y) ; 
  }
  _cwc_1807__SSA1_2 = ( _cwc_1849 ? _cwc_1843 : _cwc_1841 ); 
  return( _cwc_1807__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::LTXXB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[14] UTDScalarB::LTXXB()
/*
 *  LTXXB ::  ---
 */
{ 
  bool[14] _cwc_1862 { , NN } ; 

  _cwc_1862 = UTDScalarB::LTXXB() ; 
  return( _cwc_1862); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::ANDXXB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[14] UTDScalarB::ANDXXB()
/*
 *  ANDXXB ::  ---
 */
{ 
  bool[14] _cwc_1864 { , NN } ; 

  _cwc_1864 = UTDScalarB::ANDXXB() ; 
  return( _cwc_1864); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::O2V(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
int[.] UTDScalarB::O2V( int[*] shp { ,NN } , int[*] offset { ,NN } )
/*
 *  O2V ::  ---
 */
{ 
  int[.] _cwc_1865 { , NN } ; 
  bool _cwc_1893 { , NN } ; 
  int _cwc_1866 { , NN } ; 

  _cwc_1866 = _dim_A_( shp); 
  _cwc_1893 = _eq_SxS_( _cwc_1866, 1); 
  _cwc_1865 = UTDScalarB::O2V__Cond_127( _cwc_1893, offset, shp) ; 
  return( _cwc_1865); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::O2V__Cond_127(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB::O2V__Cond_127( bool _cwc_1893 { ,NN } , int[*] offset { ,NN } , int[*] shp { ,NN } )
/*
 *  O2V__Cond_127 ::  ---
 */
{ 
  int _ivesli_173010 { , NN } ; 
  int[.] _cwc_1865__SSA1_2 { , NN } ; 
  int[.] _cwc_1865__SSA1_1 { , NN } ; 
  int[.] _cwc_1871 { , NN } ; 
  int _cwc_1888 { , NN } ; 
  bool _cwc_1890 { , NN } ; 
  int[.] _cwc_1865 { , NN } ; 

  if (_cwc_1893) 
  { 
    _cwc_1871 = _shape_A_( shp); 
    _ivesli_173010 = 0; 
    _cwc_1888 = _idx_sel_( _ivesli_173010, _cwc_1871); 
    _cwc_1890 = _eq_SxS_( _cwc_1888, 1); 
    _cwc_1865 = UTDScalarB::_dup_6504_O2V__Cond_126( _cwc_1871, _cwc_1890, offset, shp) ; 
  }
  else
  { 
    _cwc_1865__SSA1_1 = _dispatch_error_( 1, int[.], "UTDScalarB::O2V :: int[*] int[*] -> int[.] ", shp, offset); 
  }
  _cwc_1865__SSA1_2 = ( _cwc_1893 ? _cwc_1865 : _cwc_1865__SSA1_1 ); 
  return( _cwc_1865__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6504_O2V__Cond_126(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB::_dup_6504_O2V__Cond_126( int[.] _cwc_1871 { ,NN } , bool _cwc_1891 { ,NN } , int[*] offset { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6504_O2V__Cond_126 ::  ---
 */
{ 
  int _ivesli_173012 { , NN } ; 
  int[.] _cwc_1865__SSA1_2 { , NN } ; 
  int[.] _cwc_1865__SSA1_1 { , NN } ; 
  int _cwc_1878 { , NN } ; 
  bool _cwc_1880 { , NN } ; 
  int _cwc_1882 { , NN } ; 
  bool _cwc_1885 { , NN } ; 
  int[.] _cwc_1865 { , NN } ; 

  if (_cwc_1891) 
  { 
    _cwc_1882 = _dim_A_( offset); 
    _cwc_1885 = _eq_SxS_( _cwc_1882, 0); 
    _cwc_1865 = UTDScalarB::_dup_6503_O2V__Cond_122( _cwc_1885, offset, shp) ; 
  }
  else
  { 
    _ivesli_173012 = 0; 
    _cwc_1878 = _idx_sel_( _ivesli_173012, _cwc_1871); 
    _cwc_1880 = _eq_SxS_( _cwc_1878, 0); 
    _cwc_1865__SSA1_1 = UTDScalarB::_dup_6502_O2V__Cond_125( _cwc_1880, offset, shp) ; 
  }
  _cwc_1865__SSA1_2 = ( _cwc_1891 ? _cwc_1865 : _cwc_1865__SSA1_1 ); 
  return( _cwc_1865__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6502_O2V__Cond_125(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB::_dup_6502_O2V__Cond_125( bool _cwc_1881 { ,NN } , int[*] offset { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6502_O2V__Cond_125 ::  ---
 */
{ 
  int[.] _cwc_1865__SSA1_2 { , NN } ; 
  int[.] _cwc_1865__SSA1_1 { , NN } ; 
  int _cwc_1867 { , NN } ; 
  bool _cwc_1870 { , NN } ; 
  int _cwc_1872 { , NN } ; 
  bool _cwc_1875 { , NN } ; 
  int[.] _cwc_1865 { , NN } ; 

  if (_cwc_1881) 
  { 
    _cwc_1872 = _dim_A_( offset); 
    _cwc_1875 = _eq_SxS_( _cwc_1872, 0); 
    _cwc_1865 = UTDScalarB::_dup_6501_O2V__Cond_123( _cwc_1875, offset, shp) ; 
  }
  else
  { 
    _cwc_1867 = _dim_A_( offset); 
    _cwc_1870 = _eq_SxS_( _cwc_1867, 0); 
    _cwc_1865__SSA1_1 = UTDScalarB::_dup_6500_O2V__Cond_124( _cwc_1870, offset, shp) ; 
  }
  _cwc_1865__SSA1_2 = ( _cwc_1881 ? _cwc_1865 : _cwc_1865__SSA1_1 ); 
  return( _cwc_1865__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6500_O2V__Cond_124(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB::_dup_6500_O2V__Cond_124( bool _cwc_1870 { ,NN } , int[*] offset { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6500_O2V__Cond_124 ::  ---
 */
{ 
  int[.] _cwc_1865__SSA1_2 { , NN } ; 
  int[.] _cwc_1865__SSA1_1 { , NN } ; 
  int[.] _cwc_1868 { , NN } ; 

  if (_cwc_1870) 
  { 
    _cwc_1868 = UTDScalarB::O2V( shp, offset) ; 
  }
  else
  { 
    _cwc_1865__SSA1_1 = _dispatch_error_( 1, int[.], "UTDScalarB::O2V :: int[*] int[*] -> int[.] ", shp, offset); 
  }
  _cwc_1865__SSA1_2 = ( _cwc_1870 ? _cwc_1868 : _cwc_1865__SSA1_1 ); 
  return( _cwc_1865__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6501_O2V__Cond_123(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB::_dup_6501_O2V__Cond_123( bool _cwc_1875 { ,NN } , int[*] offset { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6501_O2V__Cond_123 ::  ---
 */
{ 
  int[.] _cwc_1865__SSA1_2 { , NN } ; 
  int[.] _cwc_1865__SSA1_1 { , NN } ; 
  int[0]{} _cwc_1873 { , NN } ; 

  if (_cwc_1875) 
  { 
    _cwc_1873 = [:int]; 
  }
  else
  { 
    _cwc_1865__SSA1_1 = _dispatch_error_( 1, int[.], "UTDScalarB::O2V :: int[*] int[*] -> int[.] ", shp, offset); 
  }
  _cwc_1865__SSA1_2 = ( _cwc_1875 ? _cwc_1873 : _cwc_1865__SSA1_1 ); 
  return( _cwc_1865__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6503_O2V__Cond_122(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB::_dup_6503_O2V__Cond_122( bool _cwc_1885 { ,NN } , int[*] offset { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6503_O2V__Cond_122 ::  ---
 */
{ 
  int[.] _cwc_1865__SSA1_2 { , NN } ; 
  int[.] _cwc_1865__SSA1_1 { , NN } ; 
  int[1] _cwc_1883 { , NN } ; 

  if (_cwc_1885) 
  { 
    _cwc_1883 = UTDScalarB::O2V( shp, offset) ; 
  }
  else
  { 
    _cwc_1865__SSA1_1 = _dispatch_error_( 1, int[.], "UTDScalarB::O2V :: int[*] int[*] -> int[.] ", shp, offset); 
  }
  _cwc_1865__SSA1_2 = ( _cwc_1885 ? _cwc_1883 : _cwc_1865__SSA1_1 ); 
  return( _cwc_1865__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::V2O(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
int UTDScalarB::V2O( int[*] shp { ,NN } , int[*] iv { ,NN } )
/*
 *  V2O ::  ---
 */
{ 
  int _cwc_1894 { , NN } ; 
  bool _cwc_1960 { , NN } ; 
  int _cwc_1895 { , NN } ; 

  _cwc_1895 = _dim_A_( shp); 
  _cwc_1960 = _eq_SxS_( _cwc_1895, 1); 
  _cwc_1894 = UTDScalarB::V2O__Cond_138( _cwc_1960, iv, shp) ; 
  return( _cwc_1894); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::V2O__Cond_138(...) [ body ]
 ****************************************************************************/
int UTDScalarB::V2O__Cond_138( bool _cwc_1960 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  V2O__Cond_138 ::  ---
 */
{ 
  int _ivesli_173014 { , NN } ; 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1894__SSA1_1 { , NN } ; 
  int[.] _cwc_1915 { , NN } ; 
  int _cwc_1955 { , NN } ; 
  bool _cwc_1957 { , NN } ; 
  int _cwc_1894 { , NN } ; 

  if (_cwc_1960) 
  { 
    _cwc_1915 = _shape_A_( shp); 
    _ivesli_173014 = 0; 
    _cwc_1955 = _idx_sel_( _ivesli_173014, _cwc_1915); 
    _cwc_1957 = _eq_SxS_( _cwc_1955, 3); 
    _cwc_1894 = UTDScalarB::_dup_6536_V2O__Cond_137( _cwc_1915, _cwc_1957, iv, shp) ; 
  }
  else
  { 
    _cwc_1894__SSA1_1 = _dispatch_error_( 1, int, "UTDScalarB::V2O :: int[*] int[*] -> int ", shp, iv); 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1960 ? _cwc_1894 : _cwc_1894__SSA1_1 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6536_V2O__Cond_137(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6536_V2O__Cond_137( int[.] _cwc_1915 { ,NN } , bool _cwc_1958 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6536_V2O__Cond_137 ::  ---
 */
{ 
  int _ivesli_173016 { , NN } ; 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1894__SSA1_1 { , NN } ; 
  int _cwc_1937 { , NN } ; 
  bool _cwc_1939 { , NN } ; 
  int _cwc_1941 { , NN } ; 
  bool _cwc_1952 { , NN } ; 
  int _cwc_1894 { , NN } ; 

  if (_cwc_1958) 
  { 
    _cwc_1941 = _dim_A_( iv); 
    _cwc_1952 = _eq_SxS_( _cwc_1941, 1); 
    _cwc_1894 = UTDScalarB::_dup_6535_V2O__Cond_129( _cwc_1952, iv, shp) ; 
  }
  else
  { 
    _ivesli_173016 = 0; 
    _cwc_1937 = _idx_sel_( _ivesli_173016, _cwc_1915); 
    _cwc_1939 = _eq_SxS_( _cwc_1937, 2); 
    _cwc_1894__SSA1_1 = UTDScalarB::_dup_6533_V2O__Cond_136( _cwc_1939, iv, shp) ; 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1958 ? _cwc_1894 : _cwc_1894__SSA1_1 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6533_V2O__Cond_136(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6533_V2O__Cond_136( bool _cwc_1940 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6533_V2O__Cond_136 ::  ---
 */
{ 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1894__SSA1_1 { , NN } ; 
  int _cwc_1896 { , NN } ; 
  bool _cwc_1914 { , NN } ; 
  int _cwc_1916 { , NN } ; 
  bool _cwc_1934 { , NN } ; 
  int _cwc_1894 { , NN } ; 

  if (_cwc_1940) 
  { 
    _cwc_1916 = _dim_A_( iv); 
    _cwc_1934 = _eq_SxS_( _cwc_1916, 1); 
    _cwc_1894 = UTDScalarB::_dup_6532_V2O__Cond_132( _cwc_1934, iv, shp) ; 
  }
  else
  { 
    _cwc_1896 = _dim_A_( iv); 
    _cwc_1914 = _eq_SxS_( _cwc_1896, 1); 
    _cwc_1894__SSA1_1 = UTDScalarB::_dup_6529_V2O__Cond_135( _cwc_1914, iv, shp) ; 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1940 ? _cwc_1894 : _cwc_1894__SSA1_1 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6529_V2O__Cond_135(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6529_V2O__Cond_135( bool _cwc_1914 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6529_V2O__Cond_135 ::  ---
 */
{ 
  int _ivesli_173018 { , NN } ; 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1894__SSA1_1 { , NN } ; 
  int[.] _cwc_1898 { , NN } ; 
  int _cwc_1909 { , NN } ; 
  bool _cwc_1911 { , NN } ; 
  int _cwc_1894 { , NN } ; 

  if (_cwc_1914) 
  { 
    _cwc_1898 = _shape_A_( iv); 
    _ivesli_173018 = 0; 
    _cwc_1909 = _idx_sel_( _ivesli_173018, _cwc_1898); 
    _cwc_1911 = _eq_SxS_( _cwc_1909, 3); 
    _cwc_1894 = UTDScalarB::_dup_6528_V2O__Cond_134( _cwc_1898, _cwc_1911, iv, shp) ; 
  }
  else
  { 
    _cwc_1894__SSA1_1 = _dispatch_error_( 1, int, "UTDScalarB::V2O :: int[*] int[*] -> int ", shp, iv); 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1914 ? _cwc_1894 : _cwc_1894__SSA1_1 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6528_V2O__Cond_134(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6528_V2O__Cond_134( int[.] _cwc_1898 { ,NN } , bool _cwc_1912 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6528_V2O__Cond_134 ::  ---
 */
{ 
  int _ivesli_173020 { , NN } ; 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1894__SSA1_1 { , NN } ; 
  int _cwc_1902 { , NN } ; 
  bool _cwc_1904 { , NN } ; 
  int _cwc_1906 { , NN } ; 

  if (_cwc_1912) 
  { 
    _cwc_1906 = UTDScalarB::V2O( shp, iv) ; 
  }
  else
  { 
    _ivesli_173020 = 0; 
    _cwc_1902 = _idx_sel_( _ivesli_173020, _cwc_1898); 
    _cwc_1904 = _eq_SxS_( _cwc_1902, 2); 
    _cwc_1894__SSA1_1 = UTDScalarB::_dup_6527_V2O__Cond_133( _cwc_1904, iv, shp) ; 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1912 ? _cwc_1906 : _cwc_1894__SSA1_1 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6527_V2O__Cond_133(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6527_V2O__Cond_133( bool _cwc_1905 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6527_V2O__Cond_133 ::  ---
 */
{ 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1897 { , NN } ; 
  int _cwc_1899 { , NN } ; 

  if (_cwc_1905) 
  { 
    _cwc_1899 = UTDScalarB::V2O( shp, iv) ; 
  }
  else
  { 
    _cwc_1897 = UTDScalarB::V2O( shp, iv) ; 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1905 ? _cwc_1899 : _cwc_1897 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6532_V2O__Cond_132(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6532_V2O__Cond_132( bool _cwc_1934 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6532_V2O__Cond_132 ::  ---
 */
{ 
  int _ivesli_173022 { , NN } ; 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1894__SSA1_1 { , NN } ; 
  int[.] _cwc_1918 { , NN } ; 
  int _cwc_1929 { , NN } ; 
  bool _cwc_1931 { , NN } ; 
  int _cwc_1894 { , NN } ; 

  if (_cwc_1934) 
  { 
    _cwc_1918 = _shape_A_( iv); 
    _ivesli_173022 = 0; 
    _cwc_1929 = _idx_sel_( _ivesli_173022, _cwc_1918); 
    _cwc_1931 = _eq_SxS_( _cwc_1929, 3); 
    _cwc_1894 = UTDScalarB::_dup_6531_V2O__Cond_131( _cwc_1918, _cwc_1931, iv, shp) ; 
  }
  else
  { 
    _cwc_1894__SSA1_1 = _dispatch_error_( 1, int, "UTDScalarB::V2O :: int[*] int[*] -> int ", shp, iv); 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1934 ? _cwc_1894 : _cwc_1894__SSA1_1 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6531_V2O__Cond_131(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6531_V2O__Cond_131( int[.] _cwc_1918 { ,NN } , bool _cwc_1932 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6531_V2O__Cond_131 ::  ---
 */
{ 
  int _ivesli_173024 { , NN } ; 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1894__SSA1_1 { , NN } ; 
  int _cwc_1922 { , NN } ; 
  bool _cwc_1924 { , NN } ; 
  int _cwc_1926 { , NN } ; 

  if (_cwc_1932) 
  { 
    _cwc_1926 = UTDScalarB::V2O( shp, iv) ; 
  }
  else
  { 
    _ivesli_173024 = 0; 
    _cwc_1922 = _idx_sel_( _ivesli_173024, _cwc_1918); 
    _cwc_1924 = _eq_SxS_( _cwc_1922, 2); 
    _cwc_1894__SSA1_1 = UTDScalarB::_dup_6530_V2O__Cond_130( _cwc_1924, iv, shp) ; 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1932 ? _cwc_1926 : _cwc_1894__SSA1_1 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6530_V2O__Cond_130(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6530_V2O__Cond_130( bool _cwc_1925 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6530_V2O__Cond_130 ::  ---
 */
{ 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1917 { , NN } ; 
  int _cwc_1919 { , NN } ; 

  if (_cwc_1925) 
  { 
    _cwc_1919 = UTDScalarB::V2O( shp, iv) ; 
  }
  else
  { 
    _cwc_1917 = UTDScalarB::V2O( shp, iv) ; 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1925 ? _cwc_1919 : _cwc_1917 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6535_V2O__Cond_129(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6535_V2O__Cond_129( bool _cwc_1952 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6535_V2O__Cond_129 ::  ---
 */
{ 
  int _ivesli_173026 { , NN } ; 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1894__SSA1_1 { , NN } ; 
  int[.] _cwc_1943 { , NN } ; 
  int _cwc_1947 { , NN } ; 
  bool _cwc_1949 { , NN } ; 
  int _cwc_1894 { , NN } ; 

  if (_cwc_1952) 
  { 
    _cwc_1943 = _shape_A_( iv); 
    _ivesli_173026 = 0; 
    _cwc_1947 = _idx_sel_( _ivesli_173026, _cwc_1943); 
    _cwc_1949 = _eq_SxS_( _cwc_1947, 3); 
    _cwc_1894 = UTDScalarB::_dup_6534_V2O__Cond_128( _cwc_1949, iv, shp) ; 
  }
  else
  { 
    _cwc_1894__SSA1_1 = _dispatch_error_( 1, int, "UTDScalarB::V2O :: int[*] int[*] -> int ", shp, iv); 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1952 ? _cwc_1894 : _cwc_1894__SSA1_1 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6534_V2O__Cond_128(...) [ body ]
 ****************************************************************************/
int UTDScalarB::_dup_6534_V2O__Cond_128( bool _cwc_1950 { ,NN } , int[*] iv { ,NN } , int[*] shp { ,NN } )
/*
 *  _dup_6534_V2O__Cond_128 ::  ---
 */
{ 
  int _cwc_1894__SSA1_2 { , NN } ; 
  int _cwc_1942 { , NN } ; 
  int _cwc_1944 { , NN } ; 

  if (_cwc_1950) 
  { 
    _cwc_1944 = UTDScalarB::V2O( shp, iv) ; 
  }
  else
  { 
    _cwc_1942 = UTDScalarB::V2O( shp, iv) ; 
  }
  _cwc_1894__SSA1_2 = ( _cwc_1950 ? _cwc_1944 : _cwc_1942 ); 
  return( _cwc_1894__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::jotdotltBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[+] UTDScalarB::jotdotltBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  jotdotltBBB ::  ---
 */
{ 
  bool[+] _cwc_1961 { , NN } ; 
  bool _cwc_2022 { , NN } ; 
  int _cwc_2020 { , NN } ; 

  _cwc_2020 = _dim_A_( x); 
  _cwc_2022 = _gt_SxS_( _cwc_2020, 0); 
  _cwc_1961 = UTDScalarB::jotdotltBBB__Cond_150( _cwc_2022, y, x) ; 
  return( _cwc_1961); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::jotdotltBBB__Cond_150(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::jotdotltBBB__Cond_150( bool _cwc_2022 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  jotdotltBBB__Cond_150 ::  ---
 */
{ 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1961__SSA1_1 { , NN } ; 
  int _cwc_1978 { , NN } ; 
  bool _cwc_2019 { , NN } ; 
  bool[+] _cwc_1961 { , NN } ; 

  if (_cwc_2022) 
  { 
    _cwc_1978 = _dim_A_( x); 
    _cwc_2019 = _eq_SxS_( _cwc_1978, 1); 
    _cwc_1961 = UTDScalarB::_dup_6572_jotdotltBBB__Cond_149( _cwc_2019, y, x) ; 
  }
  else
  { 
    _cwc_1961__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotltBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1961__SSA1_2 = ( _cwc_2022 ? _cwc_1961 : _cwc_1961__SSA1_1 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6572_jotdotltBBB__Cond_149(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6572_jotdotltBBB__Cond_149( bool _cwc_2019 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6572_jotdotltBBB__Cond_149 ::  ---
 */
{ 
  int _ivesli_173028 { , NN } ; 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1961__SSA1_1 { , NN } ; 
  int _cwc_1975 { , NN } ; 
  bool _cwc_1977 { , NN } ; 
  int[.] _cwc_1995 { , NN } ; 
  int _cwc_2014 { , NN } ; 
  bool _cwc_2016 { , NN } ; 
  bool[+] _cwc_1961 { , NN } ; 

  if (_cwc_2019) 
  { 
    _cwc_1995 = _shape_A_( x); 
    _ivesli_173028 = 0; 
    _cwc_2014 = _idx_sel_( _ivesli_173028, _cwc_1995); 
    _cwc_2016 = _eq_SxS_( _cwc_2014, 4); 
    _cwc_1961 = UTDScalarB::_dup_6571_jotdotltBBB__Cond_145( _cwc_2016, y, x) ; 
  }
  else
  { 
    _cwc_1975 = _dim_A_( y); 
    _cwc_1977 = _gt_SxS_( _cwc_1975, 0); 
    _cwc_1961__SSA1_1 = UTDScalarB::_dup_6564_jotdotltBBB__Cond_148( _cwc_1977, y, x) ; 
  }
  _cwc_1961__SSA1_2 = ( _cwc_2019 ? _cwc_1961 : _cwc_1961__SSA1_1 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6564_jotdotltBBB__Cond_148(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6564_jotdotltBBB__Cond_148( bool _cwc_1977 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6564_jotdotltBBB__Cond_148 ::  ---
 */
{ 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1961__SSA1_1 { , NN } ; 
  int _cwc_1963 { , NN } ; 
  bool _cwc_1974 { , NN } ; 
  bool[+] _cwc_1961 { , NN } ; 

  if (_cwc_1977) 
  { 
    _cwc_1963 = _dim_A_( y); 
    _cwc_1974 = _eq_SxS_( _cwc_1963, 1); 
    _cwc_1961 = UTDScalarB::_dup_6563_jotdotltBBB__Cond_147( _cwc_1974, y, x) ; 
  }
  else
  { 
    _cwc_1961__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotltBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1961__SSA1_2 = ( _cwc_1977 ? _cwc_1961 : _cwc_1961__SSA1_1 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6563_jotdotltBBB__Cond_147(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6563_jotdotltBBB__Cond_147( bool _cwc_1974 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6563_jotdotltBBB__Cond_147 ::  ---
 */
{ 
  int _ivesli_173030 { , NN } ; 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1962 { , NN } ; 
  int[.] _cwc_1965 { , NN } ; 
  int _cwc_1969 { , NN } ; 
  bool _cwc_1971 { , NN } ; 
  bool[+] _cwc_1961 { , NN } ; 

  if (_cwc_1974) 
  { 
    _cwc_1965 = _shape_A_( y); 
    _ivesli_173030 = 0; 
    _cwc_1969 = _idx_sel_( _ivesli_173030, _cwc_1965); 
    _cwc_1971 = _eq_SxS_( _cwc_1969, 4); 
    _cwc_1961 = UTDScalarB::_dup_6562_jotdotltBBB__Cond_146( _cwc_1971, y, x) ; 
  }
  else
  { 
    _cwc_1962 = UTDScalarB::jotdotltBBB( x, y) ; 
  }
  _cwc_1961__SSA1_2 = ( _cwc_1974 ? _cwc_1961 : _cwc_1962 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6562_jotdotltBBB__Cond_146(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6562_jotdotltBBB__Cond_146( bool _cwc_1972 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6562_jotdotltBBB__Cond_146 ::  ---
 */
{ 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1964 { , NN } ; 
  bool[+] _cwc_1966 { , NN } ; 

  if (_cwc_1972) 
  { 
    _cwc_1966 = UTDScalarB::jotdotltBBB( x, y) ; 
  }
  else
  { 
    _cwc_1964 = UTDScalarB::jotdotltBBB( x, y) ; 
  }
  _cwc_1961__SSA1_2 = ( _cwc_1972 ? _cwc_1966 : _cwc_1964 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6571_jotdotltBBB__Cond_145(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6571_jotdotltBBB__Cond_145( bool _cwc_2017 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6571_jotdotltBBB__Cond_145 ::  ---
 */
{ 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1961__SSA1_1 { , NN } ; 
  int _cwc_1992 { , NN } ; 
  bool _cwc_1994 { , NN } ; 
  int _cwc_2009 { , NN } ; 
  bool _cwc_2011 { , NN } ; 
  bool[+] _cwc_1961 { , NN } ; 

  if (_cwc_2017) 
  { 
    _cwc_2009 = _dim_A_( y); 
    _cwc_2011 = _gt_SxS_( _cwc_2009, 0); 
    _cwc_1961 = UTDScalarB::_dup_6570_jotdotltBBB__Cond_141( _cwc_2011, y, x) ; 
  }
  else
  { 
    _cwc_1992 = _dim_A_( y); 
    _cwc_1994 = _gt_SxS_( _cwc_1992, 0); 
    _cwc_1961__SSA1_1 = UTDScalarB::_dup_6567_jotdotltBBB__Cond_144( _cwc_1994, y, x) ; 
  }
  _cwc_1961__SSA1_2 = ( _cwc_2017 ? _cwc_1961 : _cwc_1961__SSA1_1 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6567_jotdotltBBB__Cond_144(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6567_jotdotltBBB__Cond_144( bool _cwc_1994 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6567_jotdotltBBB__Cond_144 ::  ---
 */
{ 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1961__SSA1_1 { , NN } ; 
  int _cwc_1980 { , NN } ; 
  bool _cwc_1991 { , NN } ; 
  bool[+] _cwc_1961 { , NN } ; 

  if (_cwc_1994) 
  { 
    _cwc_1980 = _dim_A_( y); 
    _cwc_1991 = _eq_SxS_( _cwc_1980, 1); 
    _cwc_1961 = UTDScalarB::_dup_6566_jotdotltBBB__Cond_143( _cwc_1991, y, x) ; 
  }
  else
  { 
    _cwc_1961__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotltBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1961__SSA1_2 = ( _cwc_1994 ? _cwc_1961 : _cwc_1961__SSA1_1 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6566_jotdotltBBB__Cond_143(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6566_jotdotltBBB__Cond_143( bool _cwc_1991 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6566_jotdotltBBB__Cond_143 ::  ---
 */
{ 
  int _ivesli_173032 { , NN } ; 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1979 { , NN } ; 
  int[.] _cwc_1982 { , NN } ; 
  int _cwc_1986 { , NN } ; 
  bool _cwc_1988 { , NN } ; 
  bool[+] _cwc_1961 { , NN } ; 

  if (_cwc_1991) 
  { 
    _cwc_1982 = _shape_A_( y); 
    _ivesli_173032 = 0; 
    _cwc_1986 = _idx_sel_( _ivesli_173032, _cwc_1982); 
    _cwc_1988 = _eq_SxS_( _cwc_1986, 4); 
    _cwc_1961 = UTDScalarB::_dup_6565_jotdotltBBB__Cond_142( _cwc_1988, y, x) ; 
  }
  else
  { 
    _cwc_1979 = UTDScalarB::jotdotltBBB( x, y) ; 
  }
  _cwc_1961__SSA1_2 = ( _cwc_1991 ? _cwc_1961 : _cwc_1979 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6565_jotdotltBBB__Cond_142(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6565_jotdotltBBB__Cond_142( bool _cwc_1989 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6565_jotdotltBBB__Cond_142 ::  ---
 */
{ 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1981 { , NN } ; 
  bool[+] _cwc_1983 { , NN } ; 

  if (_cwc_1989) 
  { 
    _cwc_1983 = UTDScalarB::jotdotltBBB( x, y) ; 
  }
  else
  { 
    _cwc_1981 = UTDScalarB::jotdotltBBB( x, y) ; 
  }
  _cwc_1961__SSA1_2 = ( _cwc_1989 ? _cwc_1983 : _cwc_1981 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6570_jotdotltBBB__Cond_141(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6570_jotdotltBBB__Cond_141( bool _cwc_2011 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6570_jotdotltBBB__Cond_141 ::  ---
 */
{ 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1961__SSA1_1 { , NN } ; 
  int _cwc_1997 { , NN } ; 
  bool _cwc_2008 { , NN } ; 
  bool[+] _cwc_1961 { , NN } ; 

  if (_cwc_2011) 
  { 
    _cwc_1997 = _dim_A_( y); 
    _cwc_2008 = _eq_SxS_( _cwc_1997, 1); 
    _cwc_1961 = UTDScalarB::_dup_6569_jotdotltBBB__Cond_140( _cwc_2008, y, x) ; 
  }
  else
  { 
    _cwc_1961__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotltBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_1961__SSA1_2 = ( _cwc_2011 ? _cwc_1961 : _cwc_1961__SSA1_1 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6569_jotdotltBBB__Cond_140(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6569_jotdotltBBB__Cond_140( bool _cwc_2008 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6569_jotdotltBBB__Cond_140 ::  ---
 */
{ 
  int _ivesli_173034 { , NN } ; 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1996 { , NN } ; 
  int[.] _cwc_1999 { , NN } ; 
  int _cwc_2003 { , NN } ; 
  bool _cwc_2005 { , NN } ; 
  bool[+] _cwc_1961 { , NN } ; 

  if (_cwc_2008) 
  { 
    _cwc_1999 = _shape_A_( y); 
    _ivesli_173034 = 0; 
    _cwc_2003 = _idx_sel_( _ivesli_173034, _cwc_1999); 
    _cwc_2005 = _eq_SxS_( _cwc_2003, 4); 
    _cwc_1961 = UTDScalarB::_dup_6568_jotdotltBBB__Cond_139( _cwc_2005, y, x) ; 
  }
  else
  { 
    _cwc_1996 = UTDScalarB::jotdotltBBB( x, y) ; 
  }
  _cwc_1961__SSA1_2 = ( _cwc_2008 ? _cwc_1961 : _cwc_1996 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6568_jotdotltBBB__Cond_139(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6568_jotdotltBBB__Cond_139( bool _cwc_2006 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6568_jotdotltBBB__Cond_139 ::  ---
 */
{ 
  bool[+] _cwc_1961__SSA1_2 { , NN } ; 
  bool[+] _cwc_1998 { , NN } ; 
  bool[4,4] _cwc_2000 { , NN } ; 

  if (_cwc_2006) 
  { 
    _cwc_2000 = UTDScalarB::jotdotltBBB( x, y) ; 
  }
  else
  { 
    _cwc_1998 = UTDScalarB::jotdotltBBB( x, y) ; 
  }
  _cwc_1961__SSA1_2 = ( _cwc_2006 ? _cwc_2000 : _cwc_1998 ); 
  return( _cwc_1961__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::geBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[*] UTDScalarB::geBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  geBBB ::  ---
 */
{ 
  bool[*] _cwc_2023 { , NN } ; 
  bool _cwc_2076 { , NN } ; 
  int _cwc_2054 { , NN } ; 

  _cwc_2054 = _dim_A_( x); 
  _cwc_2076 = _eq_SxS_( _cwc_2054, 0); 
  _cwc_2023 = UTDScalarB::geBBB__Cond_163( _cwc_2076, y, x) ; 
  return( _cwc_2023); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::geBBB__Cond_163(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::geBBB__Cond_163( bool _cwc_2076 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  geBBB__Cond_163 ::  ---
 */
{ 
  bool[*] _cwc_2023__SSA1_2 { , NN } ; 
  bool[*] _cwc_2023__SSA1_1 { , NN } ; 
  int _cwc_2051 { , NN } ; 
  bool _cwc_2053 { , NN } ; 
  int _cwc_2071 { , NN } ; 
  bool _cwc_2074 { , NN } ; 
  bool[*] _cwc_2023 { , NN } ; 

  if (_cwc_2076) 
  { 
    _cwc_2071 = _dim_A_( y); 
    _cwc_2074 = _eq_SxS_( _cwc_2071, 0); 
    _cwc_2023 = UTDScalarB::_dup_6609_geBBB__Cond_154( _cwc_2074, y, x) ; 
  }
  else
  { 
    _cwc_2051 = _dim_A_( x); 
    _cwc_2053 = _gt_SxS_( _cwc_2051, 0); 
    _cwc_2023__SSA1_1 = UTDScalarB::_dup_6605_geBBB__Cond_162( _cwc_2053, y, x) ; 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2076 ? _cwc_2023 : _cwc_2023__SSA1_1 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6605_geBBB__Cond_162(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6605_geBBB__Cond_162( bool _cwc_2053 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6605_geBBB__Cond_162 ::  ---
 */
{ 
  bool[*] _cwc_2023__SSA1_2 { , NN } ; 
  bool[*] _cwc_2023__SSA1_1 { , NN } ; 
  int _cwc_2036 { , NN } ; 
  bool _cwc_2050 { , NN } ; 
  bool[*] _cwc_2023 { , NN } ; 

  if (_cwc_2053) 
  { 
    _cwc_2036 = _dim_A_( x); 
    _cwc_2050 = _eq_SxS_( _cwc_2036, 3); 
    _cwc_2023 = UTDScalarB::_dup_6604_geBBB__Cond_161( _cwc_2050, y, x) ; 
  }
  else
  { 
    _cwc_2023__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::geBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2053 ? _cwc_2023 : _cwc_2023__SSA1_1 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6604_geBBB__Cond_161(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6604_geBBB__Cond_161( bool _cwc_2050 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6604_geBBB__Cond_161 ::  ---
 */
{ 
  bool[*] _cwc_2023__SSA1_2 { , NN } ; 
  bool[*] _cwc_2023__SSA1_1 { , NN } ; 
  int _cwc_2032 { , NN } ; 
  bool _cwc_2035 { , NN } ; 
  int _cwc_2045 { , NN } ; 
  bool _cwc_2048 { , NN } ; 
  bool[*] _cwc_2023 { , NN } ; 

  if (_cwc_2050) 
  { 
    _cwc_2045 = _dim_A_( y); 
    _cwc_2048 = _eq_SxS_( _cwc_2045, 0); 
    _cwc_2023 = UTDScalarB::_dup_6603_geBBB__Cond_157( _cwc_2048, y, x) ; 
  }
  else
  { 
    _cwc_2032 = _dim_A_( y); 
    _cwc_2035 = _eq_SxS_( _cwc_2032, 0); 
    _cwc_2023__SSA1_1 = UTDScalarB::_dup_6600_geBBB__Cond_160( _cwc_2035, y, x) ; 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2050 ? _cwc_2023 : _cwc_2023__SSA1_1 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6600_geBBB__Cond_160(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6600_geBBB__Cond_160( bool _cwc_2035 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6600_geBBB__Cond_160 ::  ---
 */
{ 
  bool[*] _cwc_2023__SSA1_2 { , NN } ; 
  bool[*] _cwc_2023__SSA1_1 { , NN } ; 
  int _cwc_2029 { , NN } ; 
  bool _cwc_2031 { , NN } ; 
  bool[+] _cwc_2033 { , NN } ; 

  if (_cwc_2035) 
  { 
    _cwc_2033 = UTDScalarB::geBBB( x, y) ; 
  }
  else
  { 
    _cwc_2029 = _dim_A_( y); 
    _cwc_2031 = _gt_SxS_( _cwc_2029, 0); 
    _cwc_2023__SSA1_1 = UTDScalarB::_dup_6599_geBBB__Cond_159( _cwc_2031, y, x) ; 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2035 ? _cwc_2033 : _cwc_2023__SSA1_1 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6599_geBBB__Cond_159(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6599_geBBB__Cond_159( bool _cwc_2031 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6599_geBBB__Cond_159 ::  ---
 */
{ 
  bool[*] _cwc_2023__SSA1_2 { , NN } ; 
  bool[*] _cwc_2023__SSA1_1 { , NN } ; 
  int _cwc_2025 { , NN } ; 
  bool _cwc_2028 { , NN } ; 
  bool[+] _cwc_2023 { , NN } ; 

  if (_cwc_2031) 
  { 
    _cwc_2025 = _dim_A_( y); 
    _cwc_2028 = _eq_SxS_( _cwc_2025, 3); 
    _cwc_2023 = UTDScalarB::_dup_6598_geBBB__Cond_158( _cwc_2028, y, x) ; 
  }
  else
  { 
    _cwc_2023__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::geBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2031 ? _cwc_2023 : _cwc_2023__SSA1_1 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6598_geBBB__Cond_158(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6598_geBBB__Cond_158( bool _cwc_2028 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6598_geBBB__Cond_158 ::  ---
 */
{ 
  bool[+] _cwc_2023__SSA1_2 { , NN } ; 
  bool[+] _cwc_2024 { , NN } ; 
  bool[+] _cwc_2026 { , NN } ; 

  if (_cwc_2028) 
  { 
    _cwc_2026 = UTDScalarB::geBBB( x, y) ; 
  }
  else
  { 
    _cwc_2024 = UTDScalarB::geBBB( x, y) ; 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2028 ? _cwc_2026 : _cwc_2024 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6603_geBBB__Cond_157(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6603_geBBB__Cond_157( bool _cwc_2048 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6603_geBBB__Cond_157 ::  ---
 */
{ 
  bool[*] _cwc_2023__SSA1_2 { , NN } ; 
  bool[*] _cwc_2023__SSA1_1 { , NN } ; 
  int _cwc_2042 { , NN } ; 
  bool _cwc_2044 { , NN } ; 
  bool[.,.,.] _cwc_2046 { , NN } ; 

  if (_cwc_2048) 
  { 
    _cwc_2046 = UTDScalarB::geBBB( x, y) ; 
  }
  else
  { 
    _cwc_2042 = _dim_A_( y); 
    _cwc_2044 = _gt_SxS_( _cwc_2042, 0); 
    _cwc_2023__SSA1_1 = UTDScalarB::_dup_6602_geBBB__Cond_156( _cwc_2044, y, x) ; 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2048 ? _cwc_2046 : _cwc_2023__SSA1_1 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6602_geBBB__Cond_156(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6602_geBBB__Cond_156( bool _cwc_2044 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6602_geBBB__Cond_156 ::  ---
 */
{ 
  bool[*] _cwc_2023__SSA1_2 { , NN } ; 
  bool[*] _cwc_2023__SSA1_1 { , NN } ; 
  int _cwc_2038 { , NN } ; 
  bool _cwc_2041 { , NN } ; 
  bool[+] _cwc_2023 { , NN } ; 

  if (_cwc_2044) 
  { 
    _cwc_2038 = _dim_A_( y); 
    _cwc_2041 = _eq_SxS_( _cwc_2038, 3); 
    _cwc_2023 = UTDScalarB::_dup_6601_geBBB__Cond_155( _cwc_2041, y, x) ; 
  }
  else
  { 
    _cwc_2023__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::geBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2044 ? _cwc_2023 : _cwc_2023__SSA1_1 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6601_geBBB__Cond_155(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6601_geBBB__Cond_155( bool _cwc_2041 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6601_geBBB__Cond_155 ::  ---
 */
{ 
  bool[+] _cwc_2023__SSA1_2 { , NN } ; 
  bool[+] _cwc_2037 { , NN } ; 
  bool[.,.,.] _cwc_2039 { , NN } ; 

  if (_cwc_2041) 
  { 
    _cwc_2039 = UTDScalarB::geBBB( x, y) ; 
  }
  else
  { 
    _cwc_2037 = UTDScalarB::geBBB( x, y) ; 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2041 ? _cwc_2039 : _cwc_2037 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6609_geBBB__Cond_154(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6609_geBBB__Cond_154( bool _cwc_2074 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6609_geBBB__Cond_154 ::  ---
 */
{ 
  bool[*] _cwc_2023__SSA1_2 { , NN } ; 
  bool[*] _cwc_2023__SSA1_1 { , NN } ; 
  int _cwc_2068 { , NN } ; 
  bool _cwc_2070 { , NN } ; 
  bool _cwc_2072 { , NN } ; 

  if (_cwc_2074) 
  { 
    _cwc_2072 = UTDScalarB::geBBB( x, y) ; 
  }
  else
  { 
    _cwc_2068 = _dim_A_( y); 
    _cwc_2070 = _gt_SxS_( _cwc_2068, 0); 
    _cwc_2023__SSA1_1 = UTDScalarB::_dup_6608_geBBB__Cond_153( _cwc_2070, y, x) ; 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2074 ? _cwc_2072 : _cwc_2023__SSA1_1 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6608_geBBB__Cond_153(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6608_geBBB__Cond_153( bool _cwc_2070 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6608_geBBB__Cond_153 ::  ---
 */
{ 
  bool[*] _cwc_2023__SSA1_2 { , NN } ; 
  bool[*] _cwc_2023__SSA1_1 { , NN } ; 
  int _cwc_2056 { , NN } ; 
  bool _cwc_2067 { , NN } ; 
  bool[+] _cwc_2023 { , NN } ; 

  if (_cwc_2070) 
  { 
    _cwc_2056 = _dim_A_( y); 
    _cwc_2067 = _eq_SxS_( _cwc_2056, 1); 
    _cwc_2023 = UTDScalarB::_dup_6607_geBBB__Cond_152( _cwc_2067, y, x) ; 
  }
  else
  { 
    _cwc_2023__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::geBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2070 ? _cwc_2023 : _cwc_2023__SSA1_1 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6607_geBBB__Cond_152(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6607_geBBB__Cond_152( bool _cwc_2067 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6607_geBBB__Cond_152 ::  ---
 */
{ 
  int _ivesli_173036 { , NN } ; 
  bool[+] _cwc_2023__SSA1_2 { , NN } ; 
  bool[+] _cwc_2055 { , NN } ; 
  int[.] _cwc_2058 { , NN } ; 
  int _cwc_2062 { , NN } ; 
  bool _cwc_2064 { , NN } ; 
  bool[+] _cwc_2023 { , NN } ; 

  if (_cwc_2067) 
  { 
    _cwc_2058 = _shape_A_( y); 
    _ivesli_173036 = 0; 
    _cwc_2062 = _idx_sel_( _ivesli_173036, _cwc_2058); 
    _cwc_2064 = _eq_SxS_( _cwc_2062, 4); 
    _cwc_2023 = UTDScalarB::_dup_6606_geBBB__Cond_151( _cwc_2064, y, x) ; 
  }
  else
  { 
    _cwc_2055 = UTDScalarB::geBBB( x, y) ; 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2067 ? _cwc_2023 : _cwc_2055 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6606_geBBB__Cond_151(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6606_geBBB__Cond_151( bool _cwc_2065 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6606_geBBB__Cond_151 ::  ---
 */
{ 
  bool[+] _cwc_2023__SSA1_2 { , NN } ; 
  bool[+] _cwc_2057 { , NN } ; 
  bool[4] _cwc_2059 { , NN } ; 

  if (_cwc_2065) 
  { 
    _cwc_2059 = UTDScalarB::geBBB( x, y) ; 
  }
  else
  { 
    _cwc_2057 = UTDScalarB::geBBB( x, y) ; 
  }
  _cwc_2023__SSA1_2 = ( _cwc_2065 ? _cwc_2059 : _cwc_2057 ); 
  return( _cwc_2023__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB:Array::toi(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
int[*] UTDScalarB:Array::toi( bool[*] A { ,NN } )
/*
 *  toi ::  ---
 */
{ 
  int[*] _cwc_2077 { , NN } ; 
  bool _cwc_2085 { , NN } ; 
  int _cwc_2082 { , NN } ; 

  _cwc_2082 = _dim_A_( A); 
  _cwc_2085 = _eq_SxS_( _cwc_2082, 0); 
  _cwc_2077 = UTDScalarB:Array::toi__Cond_165( _cwc_2085, A) ; 
  return( _cwc_2077); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::toi__Cond_165(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::toi__Cond_165( bool _cwc_2085 { ,NN } , bool[*] A { ,NN } )
/*
 *  toi__Cond_165 ::  ---
 */
{ 
  int[*] _cwc_2077__SSA1_2 { , NN } ; 
  int[*] _cwc_2077__SSA1_1 { , NN } ; 
  int _cwc_2079 { , NN } ; 
  bool _cwc_2081 { , NN } ; 
  int _cwc_2083 { , NN } ; 

  if (_cwc_2085) 
  { 
    _cwc_2083 = ScalarArith::toi( A) ; 
  }
  else
  { 
    _cwc_2079 = _dim_A_( A); 
    _cwc_2081 = _gt_SxS_( _cwc_2079, 0); 
    _cwc_2077__SSA1_1 = UTDScalarB:Array::_dup_6610_toi__Cond_164( _cwc_2081, A) ; 
  }
  _cwc_2077__SSA1_2 = ( _cwc_2085 ? _cwc_2083 : _cwc_2077__SSA1_1 ); 
  return( _cwc_2077__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6610_toi__Cond_164(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::_dup_6610_toi__Cond_164( bool _cwc_2081 { ,NN } , bool[*] A { ,NN } )
/*
 *  _dup_6610_toi__Cond_164 ::  ---
 */
{ 
  int[*] _cwc_2077__SSA1_2 { , NN } ; 
  int[*] _cwc_2077__SSA1_1 { , NN } ; 
  int[+] _cwc_2078 { , NN } ; 

  if (_cwc_2081) 
  { 
    _cwc_2078 = ArrayArith::toi( A) ; 
  }
  else
  { 
    _cwc_2077__SSA1_1 = _dispatch_error_( 1, int[*], "UTDScalarB:Array::toi :: bool[*] -> int[*] ", A); 
  }
  _cwc_2077__SSA1_2 = ( _cwc_2081 ? _cwc_2078 : _cwc_2077__SSA1_1 ); 
  return( _cwc_2077__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB:Array::toi(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
int[*] UTDScalarB:Array::toi( int[*] A { ,NN } )
/*
 *  toi ::  ---
 */
{ 
  int[*] _cwc_2086 { , NN } ; 
  bool _cwc_2110 { , NN } ; 
  int _cwc_2107 { , NN } ; 

  _cwc_2107 = _dim_A_( A); 
  _cwc_2110 = _gt_SxS_( _cwc_2107, 0); 
  _cwc_2086 = UTDScalarB:Array::toi__Cond_169( _cwc_2110, A) ; 
  return( _cwc_2086); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::toi__Cond_169(...) [ body ]
 ****************************************************************************/
int[*] UTDScalarB:Array::toi__Cond_169( bool _cwc_2110 { ,NN } , int[*] A { ,NN } )
/*
 *  toi__Cond_169 ::  ---
 */
{ 
  int[*] _cwc_2086__SSA1_2 { , NN } ; 
  int _cwc_2088 { , NN } ; 
  bool _cwc_2106 { , NN } ; 
  int[*] _cwc_2108 { , NN } ; 
  int[+] _cwc_2086 { , NN } ; 

  if (_cwc_2110) 
  { 
    _cwc_2088 = _dim_A_( A); 
    _cwc_2106 = _eq_SxS_( _cwc_2088, 1); 
    _cwc_2086 = UTDScalarB:Array::_dup_6616_toi__Cond_168( _cwc_2106, A) ; 
  }
  else
  { 
    _cwc_2108 = ArrayArith::toi( A) ; 
  }
  _cwc_2086__SSA1_2 = ( _cwc_2110 ? _cwc_2086 : _cwc_2108 ); 
  return( _cwc_2086__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6616_toi__Cond_168(...) [ body ]
 ****************************************************************************/
int[+] UTDScalarB:Array::_dup_6616_toi__Cond_168( bool _cwc_2106 { ,NN } , int[*] A { ,NN } )
/*
 *  _dup_6616_toi__Cond_168 ::  ---
 */
{ 
  int _ivesli_173038 { , NN } ; 
  int[+] _cwc_2086__SSA1_2 { , NN } ; 
  int[+] _cwc_2087 { , NN } ; 
  int[.] _cwc_2090 { , NN } ; 
  int _cwc_2101 { , NN } ; 
  bool _cwc_2103 { , NN } ; 
  int[.] _cwc_2086 { , NN } ; 

  if (_cwc_2106) 
  { 
    _cwc_2090 = _shape_A_( A); 
    _ivesli_173038 = 0; 
    _cwc_2101 = _idx_sel_( _ivesli_173038, _cwc_2090); 
    _cwc_2103 = _eq_SxS_( _cwc_2101, 3); 
    _cwc_2086 = UTDScalarB:Array::_dup_6615_toi__Cond_167( _cwc_2090, _cwc_2103, A) ; 
  }
  else
  { 
    _cwc_2087 = ArrayArith::toi( A) ; 
  }
  _cwc_2086__SSA1_2 = ( _cwc_2106 ? _cwc_2086 : _cwc_2087 ); 
  return( _cwc_2086__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6615_toi__Cond_167(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB:Array::_dup_6615_toi__Cond_167( int[.] _cwc_2090 { ,NN } , bool _cwc_2104 { ,NN } , int[*] A { ,NN } )
/*
 *  _dup_6615_toi__Cond_167 ::  ---
 */
{ 
  int _ivesli_173040 { , NN } ; 
  int[.] _cwc_2086__SSA1_2 { , NN } ; 
  int[.] _cwc_2086__SSA1_1 { , NN } ; 
  int _cwc_2094 { , NN } ; 
  bool _cwc_2096 { , NN } ; 
  int[3] _cwc_2098 { , NN } ; 

  if (_cwc_2104) 
  { 
    _cwc_2098 = UTDScalarB:Array::toi( A) ; 
  }
  else
  { 
    _ivesli_173040 = 0; 
    _cwc_2094 = _idx_sel_( _ivesli_173040, _cwc_2090); 
    _cwc_2096 = _eq_SxS_( _cwc_2094, 2); 
    _cwc_2086__SSA1_1 = UTDScalarB:Array::_dup_6614_toi__Cond_166( _cwc_2096, A) ; 
  }
  _cwc_2086__SSA1_2 = ( _cwc_2104 ? _cwc_2098 : _cwc_2086__SSA1_1 ); 
  return( _cwc_2086__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB:Array::_dup_6614_toi__Cond_166(...) [ body ]
 ****************************************************************************/
int[.] UTDScalarB:Array::_dup_6614_toi__Cond_166( bool _cwc_2097 { ,NN } , int[*] A { ,NN } )
/*
 *  _dup_6614_toi__Cond_166 ::  ---
 */
{ 
  int[.] _cwc_2086__SSA1_2 { , NN } ; 
  int[.] _cwc_2089 { , NN } ; 
  int[2] _cwc_2091 { , NN } ; 

  if (_cwc_2097) 
  { 
    _cwc_2091 = UTDScalarB:Array::toi( A) ; 
  }
  else
  { 
    _cwc_2089 = UTDScalarB:Array::toi( A) ; 
  }
  _cwc_2086__SSA1_2 = ( _cwc_2097 ? _cwc_2091 : _cwc_2089 ); 
  return( _cwc_2086__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::jotdotandBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[+] UTDScalarB::jotdotandBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  jotdotandBBB ::  ---
 */
{ 
  bool[+] _cwc_2111 { , NN } ; 
  bool _cwc_2172 { , NN } ; 
  int _cwc_2170 { , NN } ; 

  _cwc_2170 = _dim_A_( x); 
  _cwc_2172 = _gt_SxS_( _cwc_2170, 0); 
  _cwc_2111 = UTDScalarB::jotdotandBBB__Cond_181( _cwc_2172, y, x) ; 
  return( _cwc_2111); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::jotdotandBBB__Cond_181(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::jotdotandBBB__Cond_181( bool _cwc_2172 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  jotdotandBBB__Cond_181 ::  ---
 */
{ 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2111__SSA1_1 { , NN } ; 
  int _cwc_2128 { , NN } ; 
  bool _cwc_2169 { , NN } ; 
  bool[+] _cwc_2111 { , NN } ; 

  if (_cwc_2172) 
  { 
    _cwc_2128 = _dim_A_( x); 
    _cwc_2169 = _eq_SxS_( _cwc_2128, 1); 
    _cwc_2111 = UTDScalarB::_dup_6652_jotdotandBBB__Cond_180( _cwc_2169, y, x) ; 
  }
  else
  { 
    _cwc_2111__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotandBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2172 ? _cwc_2111 : _cwc_2111__SSA1_1 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6652_jotdotandBBB__Cond_180(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6652_jotdotandBBB__Cond_180( bool _cwc_2169 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6652_jotdotandBBB__Cond_180 ::  ---
 */
{ 
  int _ivesli_173042 { , NN } ; 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2111__SSA1_1 { , NN } ; 
  int _cwc_2125 { , NN } ; 
  bool _cwc_2127 { , NN } ; 
  int[.] _cwc_2145 { , NN } ; 
  int _cwc_2164 { , NN } ; 
  bool _cwc_2166 { , NN } ; 
  bool[+] _cwc_2111 { , NN } ; 

  if (_cwc_2169) 
  { 
    _cwc_2145 = _shape_A_( x); 
    _ivesli_173042 = 0; 
    _cwc_2164 = _idx_sel_( _ivesli_173042, _cwc_2145); 
    _cwc_2166 = _eq_SxS_( _cwc_2164, 4); 
    _cwc_2111 = UTDScalarB::_dup_6651_jotdotandBBB__Cond_176( _cwc_2166, y, x) ; 
  }
  else
  { 
    _cwc_2125 = _dim_A_( y); 
    _cwc_2127 = _gt_SxS_( _cwc_2125, 0); 
    _cwc_2111__SSA1_1 = UTDScalarB::_dup_6644_jotdotandBBB__Cond_179( _cwc_2127, y, x) ; 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2169 ? _cwc_2111 : _cwc_2111__SSA1_1 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6644_jotdotandBBB__Cond_179(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6644_jotdotandBBB__Cond_179( bool _cwc_2127 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6644_jotdotandBBB__Cond_179 ::  ---
 */
{ 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2111__SSA1_1 { , NN } ; 
  int _cwc_2113 { , NN } ; 
  bool _cwc_2124 { , NN } ; 
  bool[+] _cwc_2111 { , NN } ; 

  if (_cwc_2127) 
  { 
    _cwc_2113 = _dim_A_( y); 
    _cwc_2124 = _eq_SxS_( _cwc_2113, 1); 
    _cwc_2111 = UTDScalarB::_dup_6643_jotdotandBBB__Cond_178( _cwc_2124, y, x) ; 
  }
  else
  { 
    _cwc_2111__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotandBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2127 ? _cwc_2111 : _cwc_2111__SSA1_1 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6643_jotdotandBBB__Cond_178(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6643_jotdotandBBB__Cond_178( bool _cwc_2124 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6643_jotdotandBBB__Cond_178 ::  ---
 */
{ 
  int _ivesli_173044 { , NN } ; 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2112 { , NN } ; 
  int[.] _cwc_2115 { , NN } ; 
  int _cwc_2119 { , NN } ; 
  bool _cwc_2121 { , NN } ; 
  bool[+] _cwc_2111 { , NN } ; 

  if (_cwc_2124) 
  { 
    _cwc_2115 = _shape_A_( y); 
    _ivesli_173044 = 0; 
    _cwc_2119 = _idx_sel_( _ivesli_173044, _cwc_2115); 
    _cwc_2121 = _eq_SxS_( _cwc_2119, 4); 
    _cwc_2111 = UTDScalarB::_dup_6642_jotdotandBBB__Cond_177( _cwc_2121, y, x) ; 
  }
  else
  { 
    _cwc_2112 = UTDScalarB::jotdotandBBB( x, y) ; 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2124 ? _cwc_2111 : _cwc_2112 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6642_jotdotandBBB__Cond_177(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6642_jotdotandBBB__Cond_177( bool _cwc_2122 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6642_jotdotandBBB__Cond_177 ::  ---
 */
{ 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2114 { , NN } ; 
  bool[+] _cwc_2116 { , NN } ; 

  if (_cwc_2122) 
  { 
    _cwc_2116 = UTDScalarB::jotdotandBBB( x, y) ; 
  }
  else
  { 
    _cwc_2114 = UTDScalarB::jotdotandBBB( x, y) ; 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2122 ? _cwc_2116 : _cwc_2114 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6651_jotdotandBBB__Cond_176(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6651_jotdotandBBB__Cond_176( bool _cwc_2167 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6651_jotdotandBBB__Cond_176 ::  ---
 */
{ 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2111__SSA1_1 { , NN } ; 
  int _cwc_2142 { , NN } ; 
  bool _cwc_2144 { , NN } ; 
  int _cwc_2159 { , NN } ; 
  bool _cwc_2161 { , NN } ; 
  bool[+] _cwc_2111 { , NN } ; 

  if (_cwc_2167) 
  { 
    _cwc_2159 = _dim_A_( y); 
    _cwc_2161 = _gt_SxS_( _cwc_2159, 0); 
    _cwc_2111 = UTDScalarB::_dup_6650_jotdotandBBB__Cond_172( _cwc_2161, y, x) ; 
  }
  else
  { 
    _cwc_2142 = _dim_A_( y); 
    _cwc_2144 = _gt_SxS_( _cwc_2142, 0); 
    _cwc_2111__SSA1_1 = UTDScalarB::_dup_6647_jotdotandBBB__Cond_175( _cwc_2144, y, x) ; 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2167 ? _cwc_2111 : _cwc_2111__SSA1_1 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6647_jotdotandBBB__Cond_175(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6647_jotdotandBBB__Cond_175( bool _cwc_2144 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6647_jotdotandBBB__Cond_175 ::  ---
 */
{ 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2111__SSA1_1 { , NN } ; 
  int _cwc_2130 { , NN } ; 
  bool _cwc_2141 { , NN } ; 
  bool[+] _cwc_2111 { , NN } ; 

  if (_cwc_2144) 
  { 
    _cwc_2130 = _dim_A_( y); 
    _cwc_2141 = _eq_SxS_( _cwc_2130, 1); 
    _cwc_2111 = UTDScalarB::_dup_6646_jotdotandBBB__Cond_174( _cwc_2141, y, x) ; 
  }
  else
  { 
    _cwc_2111__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotandBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2144 ? _cwc_2111 : _cwc_2111__SSA1_1 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6646_jotdotandBBB__Cond_174(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6646_jotdotandBBB__Cond_174( bool _cwc_2141 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6646_jotdotandBBB__Cond_174 ::  ---
 */
{ 
  int _ivesli_173046 { , NN } ; 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2129 { , NN } ; 
  int[.] _cwc_2132 { , NN } ; 
  int _cwc_2136 { , NN } ; 
  bool _cwc_2138 { , NN } ; 
  bool[+] _cwc_2111 { , NN } ; 

  if (_cwc_2141) 
  { 
    _cwc_2132 = _shape_A_( y); 
    _ivesli_173046 = 0; 
    _cwc_2136 = _idx_sel_( _ivesli_173046, _cwc_2132); 
    _cwc_2138 = _eq_SxS_( _cwc_2136, 4); 
    _cwc_2111 = UTDScalarB::_dup_6645_jotdotandBBB__Cond_173( _cwc_2138, y, x) ; 
  }
  else
  { 
    _cwc_2129 = UTDScalarB::jotdotandBBB( x, y) ; 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2141 ? _cwc_2111 : _cwc_2129 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6645_jotdotandBBB__Cond_173(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6645_jotdotandBBB__Cond_173( bool _cwc_2139 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6645_jotdotandBBB__Cond_173 ::  ---
 */
{ 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2131 { , NN } ; 
  bool[+] _cwc_2133 { , NN } ; 

  if (_cwc_2139) 
  { 
    _cwc_2133 = UTDScalarB::jotdotandBBB( x, y) ; 
  }
  else
  { 
    _cwc_2131 = UTDScalarB::jotdotandBBB( x, y) ; 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2139 ? _cwc_2133 : _cwc_2131 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6650_jotdotandBBB__Cond_172(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6650_jotdotandBBB__Cond_172( bool _cwc_2161 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6650_jotdotandBBB__Cond_172 ::  ---
 */
{ 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2111__SSA1_1 { , NN } ; 
  int _cwc_2147 { , NN } ; 
  bool _cwc_2158 { , NN } ; 
  bool[+] _cwc_2111 { , NN } ; 

  if (_cwc_2161) 
  { 
    _cwc_2147 = _dim_A_( y); 
    _cwc_2158 = _eq_SxS_( _cwc_2147, 1); 
    _cwc_2111 = UTDScalarB::_dup_6649_jotdotandBBB__Cond_171( _cwc_2158, y, x) ; 
  }
  else
  { 
    _cwc_2111__SSA1_1 = _dispatch_error_( 1, bool[+], "UTDScalarB::jotdotandBBB :: bool[*] bool[*] -> bool[+] ", x, y); 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2161 ? _cwc_2111 : _cwc_2111__SSA1_1 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6649_jotdotandBBB__Cond_171(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6649_jotdotandBBB__Cond_171( bool _cwc_2158 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6649_jotdotandBBB__Cond_171 ::  ---
 */
{ 
  int _ivesli_173048 { , NN } ; 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2146 { , NN } ; 
  int[.] _cwc_2149 { , NN } ; 
  int _cwc_2153 { , NN } ; 
  bool _cwc_2155 { , NN } ; 
  bool[+] _cwc_2111 { , NN } ; 

  if (_cwc_2158) 
  { 
    _cwc_2149 = _shape_A_( y); 
    _ivesli_173048 = 0; 
    _cwc_2153 = _idx_sel_( _ivesli_173048, _cwc_2149); 
    _cwc_2155 = _eq_SxS_( _cwc_2153, 4); 
    _cwc_2111 = UTDScalarB::_dup_6648_jotdotandBBB__Cond_170( _cwc_2155, y, x) ; 
  }
  else
  { 
    _cwc_2146 = UTDScalarB::jotdotandBBB( x, y) ; 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2158 ? _cwc_2111 : _cwc_2146 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6648_jotdotandBBB__Cond_170(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6648_jotdotandBBB__Cond_170( bool _cwc_2156 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6648_jotdotandBBB__Cond_170 ::  ---
 */
{ 
  bool[+] _cwc_2111__SSA1_2 { , NN } ; 
  bool[+] _cwc_2148 { , NN } ; 
  bool[4,4] _cwc_2150 { , NN } ; 

  if (_cwc_2156) 
  { 
    _cwc_2150 = UTDScalarB::jotdotandBBB( x, y) ; 
  }
  else
  { 
    _cwc_2148 = UTDScalarB::jotdotandBBB( x, y) ; 
  }
  _cwc_2111__SSA1_2 = ( _cwc_2156 ? _cwc_2150 : _cwc_2148 ); 
  return( _cwc_2111__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB::gtBBB(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
bool[*] UTDScalarB::gtBBB( bool[*] x { ,NN } , bool[*] y { ,NN } )
/*
 *  gtBBB ::  ---
 */
{ 
  bool[*] _cwc_2173 { , NN } ; 
  bool _cwc_2226 { , NN } ; 
  int _cwc_2204 { , NN } ; 

  _cwc_2204 = _dim_A_( x); 
  _cwc_2226 = _eq_SxS_( _cwc_2204, 0); 
  _cwc_2173 = UTDScalarB::gtBBB__Cond_194( _cwc_2226, y, x) ; 
  return( _cwc_2173); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::gtBBB__Cond_194(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::gtBBB__Cond_194( bool _cwc_2226 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  gtBBB__Cond_194 ::  ---
 */
{ 
  bool[*] _cwc_2173__SSA1_2 { , NN } ; 
  bool[*] _cwc_2173__SSA1_1 { , NN } ; 
  int _cwc_2201 { , NN } ; 
  bool _cwc_2203 { , NN } ; 
  int _cwc_2221 { , NN } ; 
  bool _cwc_2224 { , NN } ; 
  bool[*] _cwc_2173 { , NN } ; 

  if (_cwc_2226) 
  { 
    _cwc_2221 = _dim_A_( y); 
    _cwc_2224 = _eq_SxS_( _cwc_2221, 0); 
    _cwc_2173 = UTDScalarB::_dup_6689_gtBBB__Cond_185( _cwc_2224, y, x) ; 
  }
  else
  { 
    _cwc_2201 = _dim_A_( x); 
    _cwc_2203 = _gt_SxS_( _cwc_2201, 0); 
    _cwc_2173__SSA1_1 = UTDScalarB::_dup_6685_gtBBB__Cond_193( _cwc_2203, y, x) ; 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2226 ? _cwc_2173 : _cwc_2173__SSA1_1 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6685_gtBBB__Cond_193(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6685_gtBBB__Cond_193( bool _cwc_2203 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6685_gtBBB__Cond_193 ::  ---
 */
{ 
  bool[*] _cwc_2173__SSA1_2 { , NN } ; 
  bool[*] _cwc_2173__SSA1_1 { , NN } ; 
  int _cwc_2186 { , NN } ; 
  bool _cwc_2200 { , NN } ; 
  bool[*] _cwc_2173 { , NN } ; 

  if (_cwc_2203) 
  { 
    _cwc_2186 = _dim_A_( x); 
    _cwc_2200 = _eq_SxS_( _cwc_2186, 3); 
    _cwc_2173 = UTDScalarB::_dup_6684_gtBBB__Cond_192( _cwc_2200, y, x) ; 
  }
  else
  { 
    _cwc_2173__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::gtBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2203 ? _cwc_2173 : _cwc_2173__SSA1_1 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6684_gtBBB__Cond_192(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6684_gtBBB__Cond_192( bool _cwc_2200 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6684_gtBBB__Cond_192 ::  ---
 */
{ 
  bool[*] _cwc_2173__SSA1_2 { , NN } ; 
  bool[*] _cwc_2173__SSA1_1 { , NN } ; 
  int _cwc_2182 { , NN } ; 
  bool _cwc_2185 { , NN } ; 
  int _cwc_2195 { , NN } ; 
  bool _cwc_2198 { , NN } ; 
  bool[*] _cwc_2173 { , NN } ; 

  if (_cwc_2200) 
  { 
    _cwc_2195 = _dim_A_( y); 
    _cwc_2198 = _eq_SxS_( _cwc_2195, 0); 
    _cwc_2173 = UTDScalarB::_dup_6683_gtBBB__Cond_188( _cwc_2198, y, x) ; 
  }
  else
  { 
    _cwc_2182 = _dim_A_( y); 
    _cwc_2185 = _eq_SxS_( _cwc_2182, 0); 
    _cwc_2173__SSA1_1 = UTDScalarB::_dup_6680_gtBBB__Cond_191( _cwc_2185, y, x) ; 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2200 ? _cwc_2173 : _cwc_2173__SSA1_1 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6680_gtBBB__Cond_191(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6680_gtBBB__Cond_191( bool _cwc_2185 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6680_gtBBB__Cond_191 ::  ---
 */
{ 
  bool[*] _cwc_2173__SSA1_2 { , NN } ; 
  bool[*] _cwc_2173__SSA1_1 { , NN } ; 
  int _cwc_2179 { , NN } ; 
  bool _cwc_2181 { , NN } ; 
  bool[+] _cwc_2183 { , NN } ; 

  if (_cwc_2185) 
  { 
    _cwc_2183 = UTDScalarB::gtBBB( x, y) ; 
  }
  else
  { 
    _cwc_2179 = _dim_A_( y); 
    _cwc_2181 = _gt_SxS_( _cwc_2179, 0); 
    _cwc_2173__SSA1_1 = UTDScalarB::_dup_6679_gtBBB__Cond_190( _cwc_2181, y, x) ; 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2185 ? _cwc_2183 : _cwc_2173__SSA1_1 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6679_gtBBB__Cond_190(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6679_gtBBB__Cond_190( bool _cwc_2181 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6679_gtBBB__Cond_190 ::  ---
 */
{ 
  bool[*] _cwc_2173__SSA1_2 { , NN } ; 
  bool[*] _cwc_2173__SSA1_1 { , NN } ; 
  int _cwc_2175 { , NN } ; 
  bool _cwc_2178 { , NN } ; 
  bool[+] _cwc_2173 { , NN } ; 

  if (_cwc_2181) 
  { 
    _cwc_2175 = _dim_A_( y); 
    _cwc_2178 = _eq_SxS_( _cwc_2175, 3); 
    _cwc_2173 = UTDScalarB::_dup_6678_gtBBB__Cond_189( _cwc_2178, y, x) ; 
  }
  else
  { 
    _cwc_2173__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::gtBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2181 ? _cwc_2173 : _cwc_2173__SSA1_1 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6678_gtBBB__Cond_189(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6678_gtBBB__Cond_189( bool _cwc_2178 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6678_gtBBB__Cond_189 ::  ---
 */
{ 
  bool[+] _cwc_2173__SSA1_2 { , NN } ; 
  bool[+] _cwc_2174 { , NN } ; 
  bool[+] _cwc_2176 { , NN } ; 

  if (_cwc_2178) 
  { 
    _cwc_2176 = UTDScalarB::gtBBB( x, y) ; 
  }
  else
  { 
    _cwc_2174 = UTDScalarB::gtBBB( x, y) ; 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2178 ? _cwc_2176 : _cwc_2174 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6683_gtBBB__Cond_188(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6683_gtBBB__Cond_188( bool _cwc_2198 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6683_gtBBB__Cond_188 ::  ---
 */
{ 
  bool[*] _cwc_2173__SSA1_2 { , NN } ; 
  bool[*] _cwc_2173__SSA1_1 { , NN } ; 
  int _cwc_2192 { , NN } ; 
  bool _cwc_2194 { , NN } ; 
  bool[.,.,.] _cwc_2196 { , NN } ; 

  if (_cwc_2198) 
  { 
    _cwc_2196 = UTDScalarB::gtBBB( x, y) ; 
  }
  else
  { 
    _cwc_2192 = _dim_A_( y); 
    _cwc_2194 = _gt_SxS_( _cwc_2192, 0); 
    _cwc_2173__SSA1_1 = UTDScalarB::_dup_6682_gtBBB__Cond_187( _cwc_2194, y, x) ; 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2198 ? _cwc_2196 : _cwc_2173__SSA1_1 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6682_gtBBB__Cond_187(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6682_gtBBB__Cond_187( bool _cwc_2194 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6682_gtBBB__Cond_187 ::  ---
 */
{ 
  bool[*] _cwc_2173__SSA1_2 { , NN } ; 
  bool[*] _cwc_2173__SSA1_1 { , NN } ; 
  int _cwc_2188 { , NN } ; 
  bool _cwc_2191 { , NN } ; 
  bool[+] _cwc_2173 { , NN } ; 

  if (_cwc_2194) 
  { 
    _cwc_2188 = _dim_A_( y); 
    _cwc_2191 = _eq_SxS_( _cwc_2188, 3); 
    _cwc_2173 = UTDScalarB::_dup_6681_gtBBB__Cond_186( _cwc_2191, y, x) ; 
  }
  else
  { 
    _cwc_2173__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::gtBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2194 ? _cwc_2173 : _cwc_2173__SSA1_1 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6681_gtBBB__Cond_186(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6681_gtBBB__Cond_186( bool _cwc_2191 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6681_gtBBB__Cond_186 ::  ---
 */
{ 
  bool[+] _cwc_2173__SSA1_2 { , NN } ; 
  bool[+] _cwc_2187 { , NN } ; 
  bool[.,.,.] _cwc_2189 { , NN } ; 

  if (_cwc_2191) 
  { 
    _cwc_2189 = UTDScalarB::gtBBB( x, y) ; 
  }
  else
  { 
    _cwc_2187 = UTDScalarB::gtBBB( x, y) ; 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2191 ? _cwc_2189 : _cwc_2187 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6689_gtBBB__Cond_185(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6689_gtBBB__Cond_185( bool _cwc_2224 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6689_gtBBB__Cond_185 ::  ---
 */
{ 
  bool[*] _cwc_2173__SSA1_2 { , NN } ; 
  bool[*] _cwc_2173__SSA1_1 { , NN } ; 
  int _cwc_2218 { , NN } ; 
  bool _cwc_2220 { , NN } ; 
  bool _cwc_2222 { , NN } ; 

  if (_cwc_2224) 
  { 
    _cwc_2222 = UTDScalarB::gtBBB( x, y) ; 
  }
  else
  { 
    _cwc_2218 = _dim_A_( y); 
    _cwc_2220 = _gt_SxS_( _cwc_2218, 0); 
    _cwc_2173__SSA1_1 = UTDScalarB::_dup_6688_gtBBB__Cond_184( _cwc_2220, y, x) ; 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2224 ? _cwc_2222 : _cwc_2173__SSA1_1 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6688_gtBBB__Cond_184(...) [ body ]
 ****************************************************************************/
bool[*] UTDScalarB::_dup_6688_gtBBB__Cond_184( bool _cwc_2220 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6688_gtBBB__Cond_184 ::  ---
 */
{ 
  bool[*] _cwc_2173__SSA1_2 { , NN } ; 
  bool[*] _cwc_2173__SSA1_1 { , NN } ; 
  int _cwc_2206 { , NN } ; 
  bool _cwc_2217 { , NN } ; 
  bool[+] _cwc_2173 { , NN } ; 

  if (_cwc_2220) 
  { 
    _cwc_2206 = _dim_A_( y); 
    _cwc_2217 = _eq_SxS_( _cwc_2206, 1); 
    _cwc_2173 = UTDScalarB::_dup_6687_gtBBB__Cond_183( _cwc_2217, y, x) ; 
  }
  else
  { 
    _cwc_2173__SSA1_1 = _dispatch_error_( 1, bool[*], "UTDScalarB::gtBBB :: bool[*] bool[*] -> bool[*] ", x, y); 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2220 ? _cwc_2173 : _cwc_2173__SSA1_1 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6687_gtBBB__Cond_183(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6687_gtBBB__Cond_183( bool _cwc_2217 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6687_gtBBB__Cond_183 ::  ---
 */
{ 
  int _ivesli_173050 { , NN } ; 
  bool[+] _cwc_2173__SSA1_2 { , NN } ; 
  bool[+] _cwc_2205 { , NN } ; 
  int[.] _cwc_2208 { , NN } ; 
  int _cwc_2212 { , NN } ; 
  bool _cwc_2214 { , NN } ; 
  bool[+] _cwc_2173 { , NN } ; 

  if (_cwc_2217) 
  { 
    _cwc_2208 = _shape_A_( y); 
    _ivesli_173050 = 0; 
    _cwc_2212 = _idx_sel_( _ivesli_173050, _cwc_2208); 
    _cwc_2214 = _eq_SxS_( _cwc_2212, 4); 
    _cwc_2173 = UTDScalarB::_dup_6686_gtBBB__Cond_182( _cwc_2214, y, x) ; 
  }
  else
  { 
    _cwc_2205 = UTDScalarB::gtBBB( x, y) ; 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2217 ? _cwc_2173 : _cwc_2205 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Cond function:
 * UTDScalarB::_dup_6686_gtBBB__Cond_182(...) [ body ]
 ****************************************************************************/
bool[+] UTDScalarB::_dup_6686_gtBBB__Cond_182( bool _cwc_2215 { ,NN } , bool[*] y { ,NN } , bool[*] x { ,NN } )
/*
 *  _dup_6686_gtBBB__Cond_182 ::  ---
 */
{ 
  bool[+] _cwc_2173__SSA1_2 { , NN } ; 
  bool[+] _cwc_2207 { , NN } ; 
  bool[4] _cwc_2209 { , NN } ; 

  if (_cwc_2215) 
  { 
    _cwc_2209 = UTDScalarB::gtBBB( x, y) ; 
  }
  else
  { 
    _cwc_2207 = UTDScalarB::gtBBB( x, y) ; 
  }
  _cwc_2173__SSA1_2 = ( _cwc_2215 ? _cwc_2209 : _cwc_2207 ); 
  return( _cwc_2173__SSA1_2); 
}



/****************************************************************************
 * Wrapper function:
 * UTDScalarB:Array::*(...) [ wrapper ]
 ****************************************************************************/
/* sticky */
int[*] UTDScalarB:Array::*( int[*] A { ,NN } , int[*] B { ,NN } )
/*
 *  * ::  ---
 */
{ 
  int[*] _cwc_2227 { , NN } ; 
  bool _cwc_2261 { , NN } ; 
  int _cwc_2239 { , NN } ; 

  _cwc_2239 = _dim_A_( A); 
  _cwc_2261 = _eq_SxS_( _cwc_2239, 0); 
  _cwc_2227 = ( UTDScalarB:Array::*__Cond_202
 r←ssadat EmitDyadicAdverbs fns;ctl;prim;cv;cvm;sis;f
 ⍝# Emit Dyadic adverb fn SAC code
 ⍝# Window reduce
 sis←''
 :If ~0∊⍴fns
     ctl←7 FragmentCode'dadverbs'
     ⍝ We still limit conj to scalar fns
     prim←6 FragmentCode'dscalar'
     cvm←(ctl FindFnOnly fns)∧ctl FindRankGen fns
     cvm←cvm∧ctl FindSpecialCases fns
     cv←∨/<\cvm
     :If 1∊cv ⍝ Any work?
         sis←ctl Getsis cvm
   ⍝ Insert reduction kernels into loops.
   ⍝ This piece works only on reductions, and only
   ⍝ on a few of them, at that!
    ⍝ NB. Boolean sum is OR, nor +!!!!! - not done yet
         sis←(E'$FLVALUE')Strepl¨ER1(mcb sis),mcb Raze⍉cv⌿fns[;fnslop]
         sis←sis EmitPrimitiveFnDefnsTemplateFiller cv⌿fns
         sis←(E'$FRVALUE')Strepl¨ER1(mcb sis),mcb Raze⍉cv⌿fns[;fnsfn]
         fns←(~cv)⌿fns
     :EndIf
 :EndIf
 r←(E sis),E fns

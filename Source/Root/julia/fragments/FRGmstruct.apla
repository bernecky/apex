'% Code fragments for monadic structural function loop structures.',(⎕UCS 10),'% 2004-08-14',(⎕UCS 10),'%',(⎕UCS 10),'%Fragment tran x00  x bidc bidc .',(⎕UCS 10),'%Fragment rotr x00  x bidc bidc .',(⎕UCS 10),'%Fragment rot1 x00  x bidc bidc .',(⎕UCS 10),'inline $ZTYPE $FNAME($YTYPE y)',(⎕UCS 10),'{ /* Transpose and reverse on scalars are NOPs */ ',(⎕UCS 10),'  return(y);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment coma x01 x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.] $FNAME($YTYPE y)',(⎕UCS 10),'{ /* Ravel of scalar */',(⎕UCS 10),'  return([y]);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment comb x02 x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[1,1] $FNAME($YTYPE y)',(⎕UCS 10),'{ /* Table of scalar */',(⎕UCS 10),' z = reshape([1,1],y);',(⎕UCS 10),' return(z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment comb x12 x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.,.] $FNAME($YTYPE[.] y)',(⎕UCS 10),'{ /* Table on vector */',(⎕UCS 10),'  shpz = shape(y) ++ [1];',(⎕UCS 10),'  z = reshape(shpz, y);',(⎕UCS 10),'  return(z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment comb x22 x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.,.] $FNAME($YTYPE[.,.] y)',(⎕UCS 10),'{ /* Table on table is NOP */',(⎕UCS 10),'  return(y);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment comb x** x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.,.] $FNAME($YTYPE[+] y)',(⎕UCS 10),'{ /* Table on matrix */',(⎕UCS 10),' shpy = shape(y);',(⎕UCS 10),' shpz = take([1],shpy) ++ [prod(drop([1],shpy))];',(⎕UCS 10),' z = reshape( shpz, y);',(⎕UCS 10),' return(z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment tran x11 x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.] $FNAME($YTYPE[.] y)',(⎕UCS 10),'{ /* Transpose on vectors is NOP */ ',(⎕UCS 10),'        return(y);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment coma x11 x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.] $FNAME($YTYPE[.] y)',(⎕UCS 10),'{ /* Ravel of vector is NOP */  ',(⎕UCS 10),'        return(y);',(⎕UCS 10),'}',(⎕UCS 10 10 10),'%Fragment coma x*1 x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.] $FNAME($YTYPE[+] y)',(⎕UCS 10),'{ /* Ravel of anything with rank>1 */',(⎕UCS 10),'  z = reshape([prod(shape(y))],y);',(⎕UCS 10),'  return(z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment rotr x11 x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.] $FNAME($YTYPE[.] y)',(⎕UCS 10),'{ /* Vector reverse */',(⎕UCS 10),'  z = Array::reverse( 0, y);',(⎕UCS 10),'  return( z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment rot1 x** x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($YTYPE[+] y)',(⎕UCS 10),'{ /* First axis reverse on anything */',(⎕UCS 10),'  z = Array::reverse( 0, y);',(⎕UCS 10),'  return( z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment rotr x** x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($YTYPE[+] y)',(⎕UCS 10),'{/* Last axis reverse on rank>1 */',(⎕UCS 10),'  axis = _dim_A_( y) - 1;',(⎕UCS 10),'  z = Array::reverse( axis, y);',(⎕UCS 10),'  return( z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment tran x22 x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.,.] $FNAME($YTYPE[.,.] y)',(⎕UCS 10),'{ /* Transpose on rank-2 */',(⎕UCS 10),'        z = { [i,j] -> y[j,i] };',(⎕UCS 10),'        return(z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment tran x** x bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($YTYPE[+] y)',(⎕UCS 10),'{ /* General transpose */',(⎕UCS 10),'        z = TRANSPOSE(y);',(⎕UCS 10),'        return(z);',(⎕UCS 10),'}',(⎕UCS 10),'%Generate ,   TRANSPOSE, X$YT$YT, X**, ., $YT',(⎕UCS 10 10)

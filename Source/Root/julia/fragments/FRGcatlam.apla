'% Catenate code fragments',(⎕UCS 10),'% Robert Bernecky 2007-05-14',(⎕UCS 10),'% SAC code generator',(⎕UCS 10),'%',(⎕UCS 10),'% Fragment header:  jsymbol ranks(x,y,z) nil nil nil comments',(⎕UCS 10),'% * in rank specifier means any rank>1',(⎕UCS 10 10 10),'%Fragment coma 001 bidc bidc bidc .',(⎕UCS 10),'%Fragment comb 001 bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[2] $FNAME($XTYPE x, $YTYPE y)',(⎕UCS 10),'{/* SxS catenate first (or last) axis */',(⎕UCS 10),' return([to$CT(x)]++[to$CT(y)]);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment coma 011 bidc bidc bidc .',(⎕UCS 10),'%Fragment comb 011 bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.] $FNAME($XTYPE x, $YTYPE[.] y)',(⎕UCS 10),'{/* SxV catenate first (or last) axis */',(⎕UCS 10),' return([to$CT(x)]++to$CT(y));',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment coma 101 bidc bidc bidc .',(⎕UCS 10),'%Fragment comb 101 bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.] $FNAME($XTYPE[.] x, $YTYPE y)',(⎕UCS 10),'{/* VxS catenate first (or last) axis */',(⎕UCS 10),' return(to$CT(x)++[to$CT(y)]);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment coma 111 bidc bidc bidc .',(⎕UCS 10),'%Fragment comb 111 bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[.] $FNAME($XTYPE[.] x, $YTYPE[.] y)',(⎕UCS 10),'{ /* VxV catenate first or last axis */',(⎕UCS 10),' return(to$CT(x)++to$CT(y));',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment comb 1** bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE[.] x, $YTYPE[+] y)',(⎕UCS 10),'{/* VxA first axis catenate */',(⎕UCS 10),' return(to$CT([x])++to$CT(y));',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment comb *1* bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE[+] x, $YTYPE[.] y)',(⎕UCS 10),'{/* AxV first axis catenate */',(⎕UCS 10),' return(to$CT(x)++to$CT([y]));',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment coma 0** bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE x, $YTYPE[+] y)',(⎕UCS 10),'{ /* S,A last-axis catenate */',(⎕UCS 10),' frame = drop([-1],shape(y));',(⎕UCS 10),' cell = genarray([1+shape(y)[dim(y)-1]],$OTFILL);',(⎕UCS 10),' z = with {',(⎕UCS 10),'        (. <= iv <= .)',(⎕UCS 10),'                : [to$CT(x)]++to$CT(y[iv]);',(⎕UCS 10),'        }: genarray ( frame, cell);',(⎕UCS 10),' return(z);',(⎕UCS 10),'} ',(⎕UCS 10 10),'%Fragment coma *0* bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE[+] x, $YTYPE y)',(⎕UCS 10),'{ /* A,S last-axis catenate */',(⎕UCS 10),' frame = drop([-1],shape(x));',(⎕UCS 10),' cell = genarray([1+shape(x)[dim(x)-1]],$OTFILL);',(⎕UCS 10),' z = with { ',(⎕UCS 10),'        (. <= iv <= .)',(⎕UCS 10),'                : to$CT(x[iv])++[to$CT(y)];',(⎕UCS 10),'        }: genarray(frame, cell);',(⎕UCS 10),' return(z);',(⎕UCS 10),'} ',(⎕UCS 10 10 10),'%Fragment coma 1** bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE[.] x, $YTYPE[+] y)',(⎕UCS 10),'{ /* VxA last-axis catenate */',(⎕UCS 10),' z=TRANSPOSE(to$CT([x])++TRANSPOSE(to$CT(y)));',(⎕UCS 10),' return(z);',(⎕UCS 10),'} ',(⎕UCS 10),'%Generate ,   TRANSPOSE, X$YT$YT, X**, ., $YT',(⎕UCS 10 10),'%Fragment coma *1* bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE[+] x, $YTYPE[.] y)',(⎕UCS 10),'{ /* AxV last-axis catenate */',(⎕UCS 10),' z=TRANSPOSE(TRANSPOSE(to$CT(x))++to$CT([y]));',(⎕UCS 10),' return(z);',(⎕UCS 10),'} ',(⎕UCS 10),'%Generate ,   TRANSPOSE, X$YT$YT, X**, ., $YT',(⎕UCS 10 10),'%Fragment coma *** bidc bidc bidc LG',(⎕UCS 10),'inline $ZTYPE[+] $FN$XT$YT$ZTLG($XTYPE[+] x, $YTYPE[+] y)',(⎕UCS 10),'{/* AxA last axis catenate. Left rank greater */',(⎕UCS 10),' frameshape = drop([-1],shape(x));',(⎕UCS 10),' cellshape  = take([-1],shape(x)) + [1];',(⎕UCS 10),' cell = genarray(cellshape, $OTFILL);',(⎕UCS 10),' z = with { ',(⎕UCS 10),'        (. <= iv <= .) ',(⎕UCS 10),'                : to$CT(x[iv])++to$CT([y[iv]]);',(⎕UCS 10),'        }: genarray(frameshape, cell);',(⎕UCS 10),' return(z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment coma *** bidc bidc bidc RG',(⎕UCS 10),'inline $ZTYPE[+] $FN$XT$YT$ZTRG($XTYPE[+] x, $YTYPE[+] y)',(⎕UCS 10),'{/* AxA last axis catenate. Right rank greater */',(⎕UCS 10),' frameshape = drop([-1],shape(y));',(⎕UCS 10),' cellshape  = take([-1],shape(y)) + [1];',(⎕UCS 10),' cell = genarray(cellshape, $OTFILL);',(⎕UCS 10),' z = with { ',(⎕UCS 10),'        (. <= iv <= .) ',(⎕UCS 10),'                : to$CT(x[iv])++to$CT([y[iv]]);',(⎕UCS 10),'        } : genarray(frameshape, cell);',(⎕UCS 10),' return(z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment coma *** bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE[+] x, $YTYPE[+] y)',(⎕UCS 10),'{/* AxA last axis catenate. Ranks match */',(⎕UCS 10),' cellshape = (take([-1],shape(x)))+take([-1],shape(y));',(⎕UCS 10),' cell = genarray(cellshape, $OTFILL);',(⎕UCS 10),' z = with {',(⎕UCS 10),'         (. <= iv <= .) ',(⎕UCS 10),'                : to$CT(x[iv])++to$CT(y[iv]);',(⎕UCS 10),'        } : genarray(drop([-1], shape(x)), cell);',(⎕UCS 10),' return(z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%%%%%%%%%%%%%%%%%%%%%%%%% first axis catenate %%%%%%%%%%%%%%%%%',(⎕UCS 10 10),'%Fragment comb 0** bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE x, $YTYPE[+] y)',(⎕UCS 10),'{ /* SxA first-axis catenate */',(⎕UCS 10),'  cell = genarray([1]++drop([1],shape(y)),to$CT(x));',(⎕UCS 10),'  return(cell++to$CT(y));',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment comb *0* bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE[+] x, $YTYPE y)',(⎕UCS 10),'{ /* AxS first-axis catenate */',(⎕UCS 10),'  cell = genarray([1]++drop([1],shape(x)),to$CT(y));',(⎕UCS 10),'  return(to$CT(x)++cell);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment comb *** bidc bidc bidc LG',(⎕UCS 10),'inline $ZTYPE[+] $FN$XT$YT$ZTLG($XTYPE[+] x, $YTYPE[+] y)',(⎕UCS 10),'{/* AxA first axis catenate. Left rank greater */',(⎕UCS 10),' return(to$CT(x)++to$CT([y]));',(⎕UCS 10),'}',(⎕UCS 10),'%Fragment comb *** bidc bidc bidc RG',(⎕UCS 10),'inline $ZTYPE[+] $FN$XT$YT$ZTRG($XTYPE[+] x, $YTYPE[+] y)',(⎕UCS 10),'{/* AxA first axis catenate. Right rank greater */',(⎕UCS 10),' return(to$CT([x])++to$CT(y));',(⎕UCS 10),'}',(⎕UCS 10),'%Fragment comb *** bidc bidc bidc .',(⎕UCS 10),'inline $ZTYPE[+] $FNAME($XTYPE[+] x, $YTYPE[+] y)',(⎕UCS 10),'{/* AxA first axis catenate. Ranks match */',(⎕UCS 10),' return(to$CT(x)++to$CT(y));',(⎕UCS 10),'}',(⎕UCS 10 10)

('/*',(⎕UCS 10),' * Functions for handling command-line arguments.',(⎕UCS 10),' *',(⎕UCS 10),' * A monadic or dyadic main function will generate',(⎕UCS 10),' * Robert Bernecky 2009-04-07',(⎕UCS 10),' */',(⎕UCS 10 10),'%%%%%%%%%%%%%%%%%%%%% scalar result %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%',(⎕UCS 10 10),'%Fragment CommandLineArgv x00 x bid i .',(⎕UCS 10),'inline int $FNAME($YTYPE y)',(⎕UCS 10),'{ /* Get Command-line argument element #y as integer scalar */',(⎕UCS 10),'  int z;',(⎕UCS 10),'  junk, z = sscanf(argv(toi(y)), "%d");',(⎕UCS 10),'  return( z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment CommandLineArgv x00 x bid b .',(⎕UCS 10),'inline bool $FNAME($YTYPE y)',(⎕UCS 10),'{ /* Get Command-line argument element #y as boolean scalar */',(⎕UCS 10),'  int z;',(⎕UCS 10),'  junk, z = sscanf(argv(toi(y)), "%d");',(⎕UCS 10),'  z = toB(z);',(⎕UCS 10),'  return( z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment CommandLineArgv x00 x bid c .',(⎕UCS 10),'inline char $FNAME($YTYPE y)',(⎕UCS 10),'{ /* Get Command-line argument element #y as character scalar */',(⎕UCS 10),'  int z;',(⎕UCS 10),'  junk, z = sscanf(argv(toi(y)), "%c");',(⎕UCS 10),'  return( z);',(⎕UCS 10),'}',(⎕UCS 10 10),'%Fragment CommandLineArgv x00 x bid d .',(⎕UCS 10),'inline double $FNAME($YTYPE y)',(⎕UCS 10),'{ /* Get Command-line argument element #y as double scalar */',(⎕UCS 10),'  int z;',(⎕UCS 10),'  junk, z = sscanf(argv(toi(y)), "%g");',(⎕UCS 10),'  return( z);',(⎕UCS 10),'}',(⎕UCS 10 10 10),'%%%%%%%%%%%%%%%%%%%%% vector result %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%',(⎕UCS 10 10),'%Fragment CommandLineArgv x01 x bid i .',(⎕UCS 10),'inline int[.] $FNAME($YTYPE y)',(⎕UCS 10),'{ /* Get Command-line argument #y as integer vector ',(⎕UCS 10),'   *  We can''t have a blank in mid-command-line field, so ',(⎕UCS 10),'   *  here is the format:',(⎕UCS 10),'   *      1,2,3,4',(⎕UCS 10),'   */',(⎕UCS 10),'  int curz;',(⎕UCS 10 10),'  /* Stupid sscanf doesn''t tell you how many characters it scanned,',(⎕UCS 10),'   * so we have to do this the hard way.',(⎕UCS 10),'   */',(⎕UCS 10),'  s = tochar( argv( toi(y)));',(⎕UCS 10),'  shpz = sum( _toi_S_( s == '',''));',(⎕UCS 10),'  sstr = _shape_A_(s)[0];',(⎕UCS 10),'  shpz = ( 0 != sstr) ? shpz + 1 :  0; /* Empty array joke. */',(⎕UCS 10),'  sstr = ( 0 != sstr) ? sstr     :  0;',(⎕UCS 10),'  s = ['',''] ++ s;',(⎕UCS 10 10),'  z = genarray([shpz], 0);',(⎕UCS 10),'  zi = 0;',(⎕UCS 10),'  for( i=0; i<sstr; i++) {',(⎕UCS 10),'    if( s[i] == '','') {',(⎕UCS 10),'      curt = drop([i + 1], s);',(⎕UCS 10),'      junk, curz = sscanf( to_string( curt), "%d");',(⎕UCS 10),'      z[zi] = curz;',(⎕UCS 10),'      zi++;',(⎕UCS 10),'    }',(⎕UCS 10),'  }',(⎕UCS 10),'  return( z);',(⎕UCS 10),'}',(⎕UCS 10))
